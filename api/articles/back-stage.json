{"title":"back-stage","uid":"fc5e39806758c28d6affaf6d452a0421","slug":"back-stage","date":"2022-07-10T03:28:23.000Z","updated":"2022-07-11T12:50:25.289Z","comments":true,"path":"api/articles/back-stage.json","keywords":null,"cover":null,"content":"<h3 id=\"6-种组件间通信方式\"><a href=\"#6-种组件间通信方式\" class=\"headerlink\" title=\"6 种组件间通信方式\"></a>6 种组件间通信方式</h3><p><strong>一、 <code>props</code></strong></p>\n<p>适用场景：父子组件通信</p>\n<p>注意事项：</p>\n<p>如果父组件给子组件传递函数：本质其实是希望子组件给父组件传递数据</p>\n<p>如果父组件给子组件传递的数据（非函数）：本质就是父组件直接给子组件传递数据</p>\n<p><code>props</code> 书写方式：3 种</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[&#39;todos&#39;],&#123;type:Array&#125;,&#123;type:Array,default:[]&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>小提示：路由也可以传递 <code>props</code></p>\n<p>书写形式：布尔值，对象，函数形式</p>\n<p><strong>二、自定义事件</strong></p>\n<p>适用于场景：子组件给父组件传递数据</p>\n<ul>\n<li><code>$on</code> 和 <code>$emit</code></li>\n</ul>\n<p><strong>三、全局事件总线<code>$bus</code></strong></p>\n<p><strong>hidden</strong>: true</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token class-name\">Vue</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>$bus <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><strong>四、<code>pubsub-js</code></strong></p>\n<p>在 <code>react</code> 框架的项目中适用比较多，（发布订阅模式）</p>\n<p>同样适用于任意场景</p>\n<p><strong>五、<code>Vuex</code></strong></p>\n<p>适用于场景：子组件给父组件传递数据</p>\n<p><strong>六、插槽</strong></p>\n<p>适用于父子组件通信 — 一般是结构（标签）</p>\n<p>插槽分类有：</p>\n<ul>\n<li>默认插槽</li>\n<li>具名插槽</li>\n<li>作用域插槽</li>\n</ul>\n<h3 id=\"事件注意事项\"><a href=\"#事件注意事项\" class=\"headerlink\" title=\"事件注意事项\"></a>事件注意事项</h3><h4 id=\"Vue事件\"><a href=\"#Vue事件\" class=\"headerlink\" title=\"Vue事件\"></a>Vue事件</h4><ul>\n<li>系统事件 click、双击、鼠标系列等等</li>\n<li>自定义事件</li>\n</ul>\n<p>不管是系统事件还是自定义事件都需要注意事件源、事件类型、以及事件回调</p>\n<ol>\n<li>原生<code>DOM</code>，比如<code>button</code>可以绑定系统事件<code>click</code>单击事件等等</li>\n<li>组件标签 <code>event1</code> 可以绑定系统事件但是不起作用，因为属于自定义事件，需要加上 <code>.native</code> 把自定义事件变为原生<code>DOM</code>事件</li>\n</ol>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;h1&gt;EventTest组件&lt;&#x2F;h1&gt;\n&lt;!-- 原生DOM事件 --&gt;\n&lt;button @click&#x3D;&quot;handler&quot;&gt;原生btn按钮&lt;&#x2F;button&gt;\n&lt;!-- 使用Event1组件：底下这个组件  @click.native 原生DOM事件，给Event1组件的根元素绑定了利用事件的委派点击里面的子元素也会触发事件--&gt;\n&lt;Event1 @click.native&#x3D;&quot;handler1&quot;&gt;&lt;&#x2F;Event1&gt;\n&lt;hr&#x2F;&gt;\n&lt;!-- 自定义事件对于原生DOM没有任何意义 因为给原生DOM绑定是没有 $emit 的 --&gt;\n&lt;!-- &lt;button @erha&#x3D;&quot;handler3&quot;&gt; 原生的btn&lt;&#x2F;button&gt; --&gt;\n&lt;Event2 @click&#x3D;&quot;handler2&quot; @xxx&#x3D;&quot;handler2&quot;&gt;&lt;&#x2F;Event2&gt;\n&lt;!-- 表单元素 color:选取颜色  range：范围条 date：日历 week--&gt;\n&lt;input type&#x3D;&quot;week&quot; &#x2F;&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","feature":true,"text":"6 种组件间通信方式一、 props 适用场景：父子组件通信 注意事项： 如果父组件给子组件传递函数：本质其实是希望子组件给父组件传递数据 如果父组件给子组件传递的数据（非函数）：本质就是父组件直接给子组件传递数据 props 书写方式：3 种 [&#39;todos&#39;]...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Vue","slug":"Vue","count":2,"path":"api/tags/Vue.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-%E7%A7%8D%E7%BB%84%E4%BB%B6%E9%97%B4%E9%80%9A%E4%BF%A1%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">6 种组件间通信方式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%8B%E4%BB%B6%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9\"><span class=\"toc-text\">事件注意事项</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Vue%E4%BA%8B%E4%BB%B6\"><span class=\"toc-text\">Vue事件</span></a></li></ol></li></ol>","author":{"name":"R桑","slug":"blog-author","avatar":"https://img1.baidu.com/it/u=3256850095,2680786815&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=500","link":"/","description":"一位正在重塑知识的技术人 <br /> @ <b>公众号：小k编码</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Hexo 隐藏文章","uid":"96b67f8842f46b7b02f3deffef8158e9","slug":"Hexo隐藏文章","date":"2022-07-10T03:30:49.000Z","updated":"2022-07-12T01:18:55.556Z","comments":true,"path":"api/articles/Hexo隐藏文章.json","keywords":null,"cover":null,"text":"使用该 Hexo 插件可以在博客中隐藏指定的文章，并使它们仅可通过链接访问。 当一篇文章被设置为「隐藏」时，它不会出现在任何列表中（包括首页、存档、分类页面、标签页面、Feed、站点地图等），也不会被搜索引擎索引（前提是搜索引擎遵守 noindex 标签）。 只有知道文章链接的人...","link":"","photos":[],"count_time":{"symbolsCount":871,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Hexo","slug":"Hexo","count":1,"path":"api/tags/Hexo.json"}],"author":{"name":"R桑","slug":"blog-author","avatar":"https://img1.baidu.com/it/u=3256850095,2680786815&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=500","link":"/","description":"一位正在重塑知识的技术人 <br /> @ <b>公众号：小k编码</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"web前端面试题","uid":"00e814c6dd8c392dd19a02f2418ceb24","slug":"前端面试题","date":"2022-07-07T13:39:33.000Z","updated":"2022-07-11T08:56:51.854Z","comments":true,"path":"api/articles/前端面试题.json","keywords":null,"cover":[],"text":"如何理解SPA应用SPA（ single-page application ）仅在 Web 页面初始化时加载相应的 HTML、JavaScript 和 CSS。一旦页面加载完成，SPA 不会因为用户的操作而进行页面的重新加载或跳转；取而代之的是利用路由机制实现 HTML 内容的变...","link":"","photos":[],"count_time":{"symbolsCount":"18k","symbolsTime":"17 mins."},"categories":[],"tags":[{"name":"面试题","slug":"面试题","count":1,"path":"api/tags/面试题.json"}],"author":{"name":"R桑","slug":"blog-author","avatar":"https://img1.baidu.com/it/u=3256850095,2680786815&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=500","link":"/","description":"一位正在重塑知识的技术人 <br /> @ <b>公众号：小k编码</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}