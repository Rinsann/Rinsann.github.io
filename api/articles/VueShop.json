{"title":"VueShop","uid":"474fd39d06800a3e7f5683194706b168","slug":"VueShop","date":"2022-06-10T09:13:57.000Z","updated":"2022-07-12T03:28:41.005Z","comments":true,"path":"api/articles/VueShop.json","keywords":null,"cover":[],"content":"<h2 id=\"脚手架使用\"><a href=\"#脚手架使用\" class=\"headerlink\" title=\"脚手架使用\"></a>脚手架使用</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i -g @vue/cli\n<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> global @vue/cli<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><code>vue init webpack</code> 项目的名字<br>console.log(‘%c [ 项目的名字 ]-16’, ‘font-size:13px; background:pink; color:#bf2c9f;’, 项目的名字)</p>\n<p><code>vue create</code> 项目名称</p>\n<p>脚手架目录:<code>public + assets</code>文件夹区别</p>\n<p><code>node_modules</code>：放置项目依赖的地方</p>\n<p><code>public</code>一般放置一些共用的静态资源，打包上线的时候，public 文件夹里面资源原封不动打包到<code>dist</code>文件夹里面</p>\n<p><code>src</code>：程序员源代码文件夹</p>\n<ul>\n<li><code>assets</code>文件夹：经常放置一些静态资源（图片），<code>assets</code>文件夹里面资源<code>webpack</code>会进行打包为一个模块（<code>js</code>文件夹里面）</li>\n<li><code>components</code>文件夹：一般放置非路由组件（或者项目共用的组件）</li>\n<li><code>App.vue</code> 唯一的根组件</li>\n<li><code>main.js</code> 入口文件【程序最先执行的文件】</li>\n<li><code>babel.config.js</code>：<code>babel</code>配置文件</li>\n<li><code>package.json</code>：项目描述、项目依赖、项目运行指令</li>\n<li><code>README.md</code>：项目说明文件</li>\n</ul>\n<h2 id=\"脚手架下载下来的项目稍微配置一下\"><a href=\"#脚手架下载下来的项目稍微配置一下\" class=\"headerlink\" title=\"脚手架下载下来的项目稍微配置一下\"></a>脚手架下载下来的项目稍微配置一下</h2><h3 id=\"设置项目启动自动打开浏览器在package-json文件中\"><a href=\"#设置项目启动自动打开浏览器在package-json文件中\" class=\"headerlink\" title=\"设置项目启动自动打开浏览器在package.json文件中\"></a>设置项目启动自动打开浏览器在<code>package.json</code>文件中</h3><pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n <span class=\"token property\">\"serve\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vue-cli-service serve --open\"</span><span class=\"token punctuation\">,</span>\n <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vue-cli-service build\"</span><span class=\"token punctuation\">,</span>\n <span class=\"token property\">\"lint\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vue-cli-service lint\"</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"关闭eslint校验工具（非必须）\"><a href=\"#关闭eslint校验工具（非必须）\" class=\"headerlink\" title=\"关闭eslint校验工具（非必须）\"></a>关闭<code>eslint</code>校验工具（非必须）</h3><p>创建<code>vue.config.js</code>文件：需要对外暴露</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token literal-property property\">lintOnSave</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"src文件夹的别名的设置\"><a href=\"#src文件夹的别名的设置\" class=\"headerlink\" title=\"src文件夹的别名的设置\"></a><code>src</code>文件夹的别名的设置</h3><p>因为项目比较大的时候<code>src</code>（源代码文件夹）：里面目录会很多，找文件不方便，设置<code>src</code>文件夹的别名的好处，找文件会方便一些</p>\n<p>创建<code>jsconfig.json</code>文件，<code>@</code>代表的是<code>src</code>文件夹：</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token property\">\"baseUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"paths\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token property\">\"@/*\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"src/*\"</span><span class=\"token punctuation\">]</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token property\">\"exclude\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\t\t<span class=\"token comment\">// @ 不能使用的地方</span>\n\t\t<span class=\"token string\">\"node_modules\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token string\">\"dist\"</span>\n\t<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"项目路由的分析\"><a href=\"#项目路由的分析\" class=\"headerlink\" title=\"项目路由的分析\"></a>项目路由的分析</h2><p>前端的路由：<code>KV</code> 键值对。</p>\n<ul>\n<li><code>key</code>：<code>URL</code>（地址栏中的路径）</li>\n<li><code>value</code>：相应的路由组件</li>\n</ul>\n<p>比如：项目是上中下结构</p>\n<p>路由组件拆分：</p>\n<p><code>Home</code> 首页路由组件，<code>Search</code> 路由组件、<code>Login</code> 路由组件、Register 路由组件</p>\n<p>非路由组件：<code>Header</code> 首页和搜索页、<code>Footer</code>在首页和搜索页存在，但是在登录页和注册页是没有的。</p>\n<h3 id=\"完成非路由组件-Header-和-Footer\"><a href=\"#完成非路由组件-Header-和-Footer\" class=\"headerlink\" title=\"完成非路由组件 Header 和 Footer\"></a>完成非路由组件 <code>Header</code> 和 <code>Footer</code></h3><p><strong>在开发项目的时候</strong></p>\n<ol>\n<li>书写静态页面</li>\n<li>拆分组件</li>\n<li>获取服务器的数据动态展示</li>\n<li>完成相应的动态业务逻辑</li>\n</ol>\n<p>注意 1：创建组件的时候，组件结构 + 组件的样式 + 图片的资源</p>\n<p>注意 2：项目采用了了<code>less</code> 样式，浏览器不识别<code>less</code>样式，需要通过<code>less</code>、<code>less-loader</code>进行处理<code>less</code>，把<code>less</code>样式变为<code>CSS</code>样式，浏览器才能识别</p>\n<p><strong>使用 less-loader 前先安装 less</strong></p>\n<p>否则会报错 <code>Error: Cannot find module &#39;less&#39;</code><br>脚手架<code>@vue/cli 4.5.13</code>，<code>vue</code> 版本 <code>2.6.11</code> 直接 <code>yarn add less-loader@7.3.0</code> 运行报错，<br>换成 <code>yarn add less@4.0.0</code> ，然后在 <code>yarn add less-loader@7</code><br><code>webpack5</code> 请按照文档使用最新的安装方式。</p>\n<p>注意 3：如果想要组件识别<code>less样式</code>，需要在 <code>style</code> 标签上加上 <code>lang=&quot;less&quot;</code></p>\n<p><strong>路由组件的搭建</strong></p>\n<p>使用<code>Vue-router@^3.5.3</code></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yang <span class=\"token function\">add</span> vue-router@^3.5.3 --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>路由组件应该有四个：<code>Home</code>、<code>Search</code>、<code>Login</code>、<code>Register</code></p>\n<p><code>components</code>文件夹：经常放置的是非路由组件（共用全局组件）</p>\n<p><code>pages/views</code>文件夹：经常放置路由组件</p>\n<p><strong>配置路由</strong></p>\n<p>项目中配置的路由一般放置在 <code>router</code> 文件夹中</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 配置路由的地方</span>\n<span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n<span class=\"token keyword\">import</span> VueRouter <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-router'</span>\n\n<span class=\"token comment\">// 使用 vue-router 插件</span>\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>VueRouter<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 引入路由组件</span>\n<span class=\"token keyword\">import</span> Home <span class=\"token keyword\">from</span> <span class=\"token string\">'@/pages/Home'</span>\n<span class=\"token keyword\">import</span> Search <span class=\"token keyword\">from</span> <span class=\"token string\">'@/pages/Search'</span>\n<span class=\"token keyword\">import</span> Login <span class=\"token keyword\">from</span> <span class=\"token string\">'@/pages/Login'</span>\n<span class=\"token keyword\">import</span> Register <span class=\"token keyword\">from</span> <span class=\"token string\">'@/pages/Register'</span>\n<span class=\"token comment\">// 配置路由</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">VueRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token literal-property property\">routes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">'/home'</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token literal-property property\">component</span><span class=\"token operator\">:</span> Home<span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">'/search'</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token literal-property property\">component</span><span class=\"token operator\">:</span> Search<span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">'/login'</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token literal-property property\">component</span><span class=\"token operator\">:</span> Login<span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">'/register'</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token literal-property property\">component</span><span class=\"token operator\">:</span> Register<span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token comment\">// 重定向，在项目跑起来的时候,访问根目录立马让它定向到首页</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">'*'</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token literal-property property\">redirect</span><span class=\"token operator\">:</span> <span class=\"token string\">'/home'</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p><strong>路由组件与非路由组件的区别</strong></p>\n<ol>\n<li>路由组件一般放置在<code>pages|views</code> 文件夹，非路由组件一般放置在 <code>components</code> 文件夹中</li>\n<li>路由组件一般需要在 <code>router</code> 文件夹中进行注册（使用的即为路由的名字），非路由组件在使用的时候，一般都是以标签的形式使用</li>\n<li>注册完路由，不管是路由组件还是非路由组件身上都有 <code>$route</code>、<code>$router</code>属性</li>\n</ol>\n<p><code>$route</code>：一般获取路由信息（路径、<code>query</code>、<code>params</code>）</p>\n<p><code>$router：一般进行编程式导航进行跳转（</code>push|replace&#96;）</p>\n<p><strong>路由的跳转</strong></p>\n<p>路由的跳转有两种形式：</p>\n<ul>\n<li>声明式导航 <code>router-link</code>，可以进行路由的跳转</li>\n<li>编程式导航 <code>push|replace</code>，也可以进行路由的跳转</li>\n</ul>\n<p>编程式导航：声明式导航能做的，编程式导航都能做，但是编程式导航除了可以进行路由跳转，还可以做一些其它的业务逻辑。</p>\n<h3 id=\"Footer-组件显示与隐藏\"><a href=\"#Footer-组件显示与隐藏\" class=\"headerlink\" title=\"Footer 组件显示与隐藏\"></a>Footer 组件显示与隐藏</h3><p>显示或者隐藏组件：<code>v-if</code> | <code>v-show</code></p>\n<ul>\n<li><code>Footer</code> 组件在 <code>Home</code>、<code>Search</code> 显示</li>\n<li>在登录、注册页面 <code>Footer</code> 组件时隐藏的</li>\n</ul>\n<p><strong>我们可以根据组件身上的 <code>$route</code> 获取当前路由的信息，通过路由判断 <code>Footer</code> 显示与隐藏</strong></p>\n<p>方式一直接使用 <code>$route.path</code> 匹配路径：</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token comment\">&lt;!-- 在Home、Search显示、登录或者注册隐藏 --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>footer</span> <span class=\"token attr-name\">v-show</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>$route.path==<span class=\"token punctuation\">'</span>/home<span class=\"token punctuation\">'</span>||$route.path==<span class=\"token punctuation\">'</span>/search<span class=\"token punctuation\">'</span><span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>方式二配置路由的时候，可以给路由添加路由元信息 <code>meta</code>：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 配置路由</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">VueRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token literal-property property\">routes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">'/home'</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token literal-property property\">component</span><span class=\"token operator\">:</span> Home<span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token literal-property property\">meta</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">show</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"路由传参\"><a href=\"#路由传参\" class=\"headerlink\" title=\"路由传参\"></a>路由传参</h3><p><strong>路由的跳转有几种方式，比如从 A -&gt; B：</strong></p>\n<ol>\n<li>声明式导航：<code>router-link</code>（务必填写<code>to</code>属性），可以实现路由的跳转</li>\n<li>编程式导航：利用的是组件的<code>$router.push</code> | <code>replace</code>方法，在路由的跳转过程中可以书写一些业务</li>\n</ol>\n<p>路由传参，参数有几种写法</p>\n<ol>\n<li><code>params</code>参数：属于路径当中的一部分，需要注意，在配置路由的时候，需要占位</li>\n<li><code>query</code>参数：不属于路径当中的一部分，类似于<code>AJAX</code>中的<code>queryString</code> <code>/home?k=v&amp;kv=</code>，不需要占位</li>\n</ol>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/search/:keyword\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">component</span><span class=\"token operator\">:</span> Search<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">meta</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">show</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 搜索按钮的回调函数：需要向 search 路由进行跳转</span>\n    <span class=\"token function\">goSearch</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 路由传递参数</span>\n        <span class=\"token comment\">// 第一种：字符串形式 params 和 query</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/search/\"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>keyword <span class=\"token operator\">+</span> <span class=\"token string\">\"?k=\"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>keyword<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">//  第二种：模板字符串</span>\n       <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/search/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>keyword<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">?k=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>keyword<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">//第三种：对象</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"search\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">params</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">keyword</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>keyword<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">query</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">k</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>keyword<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"路由传参常见面试题\"><a href=\"#路由传参常见面试题\" class=\"headerlink\" title=\"路由传参常见面试题\"></a>路由传参常见面试题</h3><p>一、路由传递参数（对象写法）path 是否可以结合<code>params</code>参数一起使用？</p>\n<ul>\n<li><p>不能！路由传递参数的时候，对象的写法可以是<code>name</code>、<code>path</code>的形式，但是需要注意<code>path</code>这种写法不能与&#96;&#96;params&#96;参数一起使用</p>\n</li>\n<li><p>&#96;&#96;&#96;js<br>this.$router.push({<br>path: ‘&#x2F;search’,<br>params: { keyword: this.keyword, query: { k: this.keyword.toUpperCase() } },<br>})</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">\n二、如何指定&#96;params&#96;参数可传可不传？\n\n- 比如，配置路由的时候已经占位了（&#96;params&#96;参数），但是路由跳转的时候没有传递\n\n- 路径就会存在问题 &#96;http:&#x2F;&#x2F;localhost:8080&#x2F;?#&#x2F;?k&#x3D;EWRE&#96; ，正常应该是 &#96;http:&#x2F;&#x2F;localhost:8080&#x2F;#&#x2F;search?k&#x3D;EWRE&#96;，不传的时候路径当中不存在&#96;search&#96;\n\n- 如果路由要求传递&#96;params&#96;参数，但是我们没有传递，那么&#96;URL&#96;会有问题\n\n- &#96;&#96;&#96;js\n  path: &quot;&#x2F;search&#x2F;:keyword?&quot;, &#x2F;&#x2F;在配置路由的时候，在占位后面加上一个 &#96;?&#96;，代表params参数可传可不传<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<p>三、<code>params</code>参数可以传递也可以不传递，但是如果传递的是空串，如何解决？</p>\n<ul>\n<li><p>使用 <code>undefined</code> 解决：<code>params</code>参数可以传递或者不传递（空串）</p>\n</li>\n<li><p>&#96;&#96;&#96;js<br>this.$router.push({<br>name: ‘search’,<br>params: { keyword: ‘’ || undefined },<br>query: { k: this.keyword.toUpperCase() },<br>})</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">\n四、路由组件能不能传递&#96;props&#96;数据？\n\n- 可以的，有三种写法\n\n- 第一种布尔值&#96;props:true&#96; ，只能传递&#96;params&#96;参数\n\n- 第二种对象写法\n\n- 第三种函数写法（常用）\n\n- &#96;&#96;&#96;js\n  &#123;\n      name: &quot;search&quot;,\n      path: &quot;&#x2F;search&#x2F;:keyword?&quot;,\n      component: Search,\n      meta: &#123;show: true&#125;\n      &#x2F;&#x2F; props: true\n      &#x2F;&#x2F; 对象写法:额外给路由组件传递一些 props\n      &#x2F;&#x2F; props:&#123;a:1,b:2&#125;\n      &#x2F;&#x2F; 函数写法：可以params参数、query参数，通过props传递给路由组件\n      props:($route)&#x3D;&gt;&#123;\n          return &#123;keyword:$route.params.keyword,k:$route.query.k&#125;;\n      &#125;\n  &#125;\n  组件中使用 props:[&#39;keyword&#39;,&#39;a&#39;,&#39;b&#39;] 接收<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"编程式路由跳转到当前路由（参数不变），多次执行会抛出NavigationDuplicated的错误？\"><a href=\"#编程式路由跳转到当前路由（参数不变），多次执行会抛出NavigationDuplicated的错误？\" class=\"headerlink\" title=\"编程式路由跳转到当前路由（参数不变），多次执行会抛出NavigationDuplicated的错误？\"></a>编程式路由跳转到当前路由（参数不变），多次执行会抛出<code>NavigationDuplicated</code>的错误？</h3><ol>\n<li>路由跳转的两种形式：声明式导航、编程式导航，这里搜索使用的是<code>push</code>形式也就是编程式导航</li>\n<li>声明式导航没有这类问题，因为<code>vue-router</code>底层已经处理好了</li>\n</ol>\n<p><strong>为什么编程式导航进行路由跳转的时候，会有这种错误？</strong></p>\n<p>因为这里使用的 <code>&quot;vue-router&quot;: &quot;^3.5.3&quot;</code> 引入了 <code>promise</code> ，<code>promise</code>需要传入一个成功或者失败的回调，这样才能处理到这个错误。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'search'</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token literal-property property\">params</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">keyword</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>keyword <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token literal-property property\">query</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">k</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>keyword<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\">// 给push方法传入响应的成功或回调函数，可以捕获当前错误解决</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>上面这种方法只是治标不治本，将来在别的组件当中 <code>push|replace</code>，编程式导航还是会出现类似的错误。</p>\n<p><code>this</code>：当前组件实例</p>\n<p><code>this.$router</code>属性：当前这个属性，是<code>VueRouter</code>类的一个实例，当在入口文件注册路由的时候，给组件实例添加的 <code>$router</code>和<code>$route</code>属性</p>\n<p><code>push</code>：是<code>VueRouter</code>类的一个实例的原型上的方法</p>\n<p>另一个方法：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 先把VueRouter原型对象的push，先保存一份</span>\n<span class=\"token keyword\">let</span> originPush <span class=\"token operator\">=</span> <span class=\"token class-name\">VueRouter</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>push<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> originReplace <span class=\"token operator\">=</span> <span class=\"token class-name\">VueRouter</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//重写push|replace</span>\n<span class=\"token comment\">//第一个参数：告诉原来的push方法，往哪里跳转（传递那些参数）</span>\n<span class=\"token comment\">//第二个参数：成功的回调</span>\n<span class=\"token comment\">//第三个参数：失败的回调</span>\n<span class=\"token class-name\">VueRouter</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">push</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">location<span class=\"token punctuation\">,</span> resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>resolve <span class=\"token operator\">&amp;&amp;</span> reject<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">//call和apply的区别</span>\n  <span class=\"token comment\">//相同点，都可以调用函数一次，都可以篡改函数上下文</span>\n  <span class=\"token comment\">//不同点：call与apply传递参数方式 call传递参数用逗号隔开、apply方法执行传递数组</span>\n  <span class=\"token function\">originPush</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> location<span class=\"token punctuation\">,</span>resolve<span class=\"token punctuation\">,</span>reject<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n <span class=\"token function\">originPush</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>location<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token class-name\">VueRouter</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">replace</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">location<span class=\"token punctuation\">,</span>resolve<span class=\"token punctuation\">,</span>reject</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>resolve<span class=\"token operator\">&amp;&amp;</span>reject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">originPush</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>location<span class=\"token punctuation\">,</span>resolve<span class=\"token punctuation\">,</span>reject<span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">originPush</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>location<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"Home-模块组件拆分\"><a href=\"#Home-模块组件拆分\" class=\"headerlink\" title=\"Home 模块组件拆分\"></a>Home 模块组件拆分</h3><ul>\n<li>先把静态页面完成</li>\n<li>拆分出静态组件</li>\n<li>获取服务器的数据进行展示</li>\n<li><code>js</code>动态业务完成</li>\n</ul>\n<h3 id=\"三级联动组件的完成\"><a href=\"#三级联动组件的完成\" class=\"headerlink\" title=\"三级联动组件的完成\"></a>三级联动组件的完成</h3><p>由于三级联动组件在 Home、Search、Detail 组件都出现了，把三级联动注册为全局组件</p>\n<p>好处：只需要注册一次，就可以在项目任意地方使用</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 三级联动组件</span>\n<span class=\"token keyword\">import</span> TypeNav <span class=\"token keyword\">from</span> <span class=\"token string\">'@/pages/Home/TypeNav'</span>\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token string\">'TypeNav'</span><span class=\"token punctuation\">,</span> TypeNav<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>完成其它静态组件</p>\n<p><code>HTML</code> + <code>CSS</code> + 图片资源 —- 细心【结构、样式、图片资源】</p>\n<h3 id=\"Postman接口测试工具\"><a href=\"#Postman接口测试工具\" class=\"headerlink\" title=\"Postman接口测试工具\"></a><code>Postman</code>接口测试工具</h3><p>测试三级联动接口：</p>\n<pre class=\"line-numbers language-apl\" data-language=\"apl\"><code class=\"language-apl\">http<span class=\"token dfn builtin\">:</span><span class=\"token monadic-operator operator\">/</span><span class=\"token monadic-operator operator\">/</span>gmall<span class=\"token function\">-</span>h5<span class=\"token function\">-</span>api<span class=\"token dyadic-operator operator\">.</span>atguigu<span class=\"token dyadic-operator operator\">.</span>cn<span class=\"token monadic-operator operator\">/</span>api<span class=\"token monadic-operator operator\">/</span>product<span class=\"token monadic-operator operator\">/</span>getBaseCategoryList<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>如果服务器返回的数据<code>code</code>字段<code>200</code>，代表服务器返回数据成功。</li>\n<li>整个项目，接口的前缀都有<code>/api</code>字样</li>\n</ul>\n<h2 id=\"axios-二次封装\"><a href=\"#axios-二次封装\" class=\"headerlink\" title=\"axios 二次封装\"></a><code>axios</code> 二次封装</h2><p>向服务器发起请求的方式有很多</p>\n<ul>\n<li><code>XMLHttpRequestr</code>、<code>fetach</code>、<code>jQuery</code>、<code>axios</code></li>\n</ul>\n<h3 id=\"为什么需要进行二次封装？\"><a href=\"#为什么需要进行二次封装？\" class=\"headerlink\" title=\"为什么需要进行二次封装？\"></a>为什么需要进行二次封装？</h3><p>主要是为了设置请求拦截器、响应拦截器</p>\n<ul>\n<li>请求拦截器：可以在请求发起之前处理一些业务</li>\n<li>响应拦截器：当服务器数据返回后，可以处理一些事情</li>\n</ul>\n<h3 id=\"安装-axios\"><a href=\"#安装-axios\" class=\"headerlink\" title=\"安装 axios\"></a>安装 axios</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save axios@^0.24.0\n<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> axios@^0.24.0 --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>在项目中经常会有一个<code>API</code>文件夹，一般放置<code>axios</code>请求</p>\n<p>接口当中路径都带有 <code>/api</code>， <code>baseURL: &quot;/api&quot;</code> 的作用是在发请求的时候都自动带上 <code>/api</code> 在 <code>url</code> 中</p>\n<ul>\n<li>不写<code>baseURL</code> 发请求的时候需要写 <code>/api/list/card</code></li>\n<li>加上了后发请求的时候只需要 <code>/list/card</code></li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">'axios'</span>\n\n<span class=\"token comment\">// 1.利用axios对象的方法create，创建一个axios实例</span>\n<span class=\"token comment\">// 2.request就是axios，只不过可以稍微配置一些</span>\n<span class=\"token keyword\">const</span> requests <span class=\"token operator\">=</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">// 配置对象</span>\n\t<span class=\"token literal-property property\">baseURL</span><span class=\"token operator\">:</span> <span class=\"token string\">'/api'</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\">// 代表请求超时时间 5s</span>\n\t<span class=\"token literal-property property\">timeout</span><span class=\"token operator\">:</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 请求拦截器：在发请求之前，请求拦截器可以监测到，可以在请求发出去之前做一些事情</span>\nrequests<span class=\"token punctuation\">.</span>interceptors<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">config</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">// config是一个配置对象，对象里面有一个属性 headers 请求头很重要</span>\n\t<span class=\"token keyword\">return</span> config\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 响应拦截器</span>\nrequests<span class=\"token punctuation\">.</span>interceptors<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token comment\">// 成功的回调函数，服务器数据回来之后，响应拦截器可以监测到</span>\n\t\t<span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span>data\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fail'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> requests<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"API接口统一管理\"><a href=\"#API接口统一管理\" class=\"headerlink\" title=\"API接口统一管理\"></a><code>API</code>接口统一管理</h3><ul>\n<li>项目很小：完全可以在组件的声明周期函数中发请求</li>\n<li>项目较大：<code>axios.get(&#39;xxx&#39;)</code>，这样写多了后面改就不方便了</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> requests <span class=\"token keyword\">from</span> <span class=\"token string\">'@/api/request'</span>\n\n<span class=\"token comment\">// 三级联动的接口 /api/product/getBaseCategoryList  GET请求 不需要携带参数</span>\n<span class=\"token comment\">// 发请求 axios 发请求返回结果是Promise对象</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">reqCategoryList</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n\t<span class=\"token function\">requests</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'/product/getBaseCategoryList'</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token string\">'get'</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"跨域问题\"><a href=\"#跨域问题\" class=\"headerlink\" title=\"跨域问题\"></a>跨域问题</h3><p>什么是跨域：协议、域名、端口号其中有一个不同，就会触发浏览器的同源策略产生跨域。</p>\n<p>前台项目本地服务器：<code>http://localhost:8080/#/home</code></p>\n<p>后台服务器地址：<code>http://gmall-h5-api.atguigu.cn</code></p>\n<p>解决跨域的方法有：<code>JSONP</code>、<code>CORS</code>、服务器代理</p>\n<p>代理跨域通常是在<code>webpack.config.js</code>中配置，目前我们是<code>vue</code>项目所以需要配置到 <code>vue.config.js</code>中，服务器与服务器之间是没有跨域问题的，前台项目在发请求的时候路径中 <code>/api</code>那么就会通过代理服务器帮我们发送请求</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token literal-property property\">devServer</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token literal-property property\">proxy</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token string-property property\">'/api'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token literal-property property\">target</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://gmall-h5-api.atguigu.cn'</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token comment\">// pathRewriter:&#123;'^/api':''&#125;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"Nprogress进度条的使用\"><a href=\"#Nprogress进度条的使用\" class=\"headerlink\" title=\"Nprogress进度条的使用\"></a><code>Nprogress</code>进度条的使用</h3><p>安装<code>nprogress</code>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> install@^0.2.0 --save nprogress\n<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> nprogress@^0.2.0 --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>接下来只要项目发送请求，就开启进度条，服务器数据响应回来就关闭进度条。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 引入进度条</span>\n<span class=\"token keyword\">import</span> nprogress <span class=\"token keyword\">from</span> <span class=\"token string\">'nprogress'</span>\n<span class=\"token comment\">// 引入进度条的样式</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'nprogress/nprogress.css'</span> <span class=\"token comment\">// 可以通过修改源码的方式修改进度条的样式</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>nprogress<span class=\"token punctuation\">)</span> <span class=\"token comment\">// nprogress 身上start代表进度条开始，done代表进度条结束</span>\n<span class=\"token comment\">// 请求拦截器：在发请求之前，请求拦截器可以监测到，可以在请求发出去之前做一些事情</span>\nrequests<span class=\"token punctuation\">.</span>interceptors<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">config</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">// config是一个配置对象，对象里面有一个属性 headers 请求头很重要</span>\n\t<span class=\"token comment\">// 进度条开始</span>\n\tnprogress<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">return</span> config\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 响应拦截器</span>\nrequests<span class=\"token punctuation\">.</span>interceptors<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token comment\">// 成功的回调函数，服务器数据回来之后，响应拦截器可以监测到</span>\n\t\t<span class=\"token comment\">// 进度条结束</span>\n\t\tnprogress<span class=\"token punctuation\">.</span><span class=\"token function\">done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span>data\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fail'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Vuex状态管理库\"><a href=\"#Vuex状态管理库\" class=\"headerlink\" title=\"Vuex状态管理库\"></a><code>Vuex</code>状态管理库</h2><p><code>Vuex</code>是什么？</p>\n<p><code>Vuex</code>官方提供的一个插件，是一个状态管理库，集中式管理项目中组件共用的数据。</p>\n<p>并不是全部的项目都需要<code>Vuex</code>，如果项目很小，完全不需要<code>Vuex</code>，如果项目很大，组件很多，数据很多维护起来很费劲，才会使用<code>Vuex</code>。</p>\n<p>安装<code>Vuex</code></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save vue@^3.6.2\n<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> vuex@^3.6.2 --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"Vuex有几大核心概念\"><a href=\"#Vuex有几大核心概念\" class=\"headerlink\" title=\"Vuex有几大核心概念\"></a><code>Vuex</code>有几大核心概念</h3><ul>\n<li><code>state</code>：仓库存储数据的地方</li>\n<li><code>mutations</code>：修改<code>state</code>的唯一手段</li>\n<li><code>actions</code>：处理<code>action</code>，可以书写自己的业务逻辑，也可以处理异步</li>\n<li><code>getters</code>：理解为计算属性，用于简化仓库数据，让组件获取仓库数据更加方便</li>\n<li><code>modules</code></li>\n</ul>\n<h3 id=\"Vuex基本使用\"><a href=\"#Vuex基本使用\" class=\"headerlink\" title=\"Vuex基本使用\"></a><code>Vuex</code>基本使用</h3><p>在<code>src</code>文件夹下新建一个<code>store</code>文件夹用于存储<code>Vuex</code>相关文件</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n<span class=\"token keyword\">import</span> Vuex <span class=\"token keyword\">from</span> <span class=\"token string\">'vuex'</span>\n<span class=\"token comment\">// 使用Vuex插件</span>\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>Vuex<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">const</span> mutations <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token constant\">ADD</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tstate<span class=\"token punctuation\">.</span>count<span class=\"token operator\">++</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">const</span> actions <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">// 这里可以书写业务逻辑，但是不能修改state</span>\n\t<span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">&#123;</span> commit <span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ADD'</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">const</span> getters <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 对外暴露Store类的实例</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vuex<span class=\"token punctuation\">.</span>Store</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n\tstate<span class=\"token punctuation\">,</span>\n\tmutations<span class=\"token punctuation\">,</span>\n\tactions<span class=\"token punctuation\">,</span>\n\tgetters<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"Vuex-实现模块式开发\"><a href=\"#Vuex-实现模块式开发\" class=\"headerlink\" title=\"Vuex 实现模块式开发\"></a><code>Vuex</code> 实现模块式开发</h3><p>项目比较小的是 <code>Vuex</code> 里面我们直接写成一个配置对象，当我们项目比较大组件、接口、数据都很多的时候，建议给<code>Vuex</code>分成模块开发把大仓库变成一个个小仓库。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 模拟很多模块的数据全部放在一个state中</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">search</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">detail</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>sss<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n <span class=\"token literal-property property\">pay</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>xx<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">home</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>xxx<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"/../images/VueShop/image-20220615102623765.png\" alt=\"image-20220615102623765\"></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// store index.js</span>\n<span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n<span class=\"token keyword\">import</span> Vuex <span class=\"token keyword\">from</span> <span class=\"token string\">'vuex'</span>\n<span class=\"token comment\">// 使用Vuex插件</span>\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>Vuex<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">import</span> home <span class=\"token keyword\">from</span> <span class=\"token string\">'@/store/home'</span>\n<span class=\"token keyword\">import</span> search <span class=\"token keyword\">from</span> <span class=\"token string\">'@/store/search'</span>\n\n<span class=\"token comment\">// 对外暴露Store类的实例</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vuex<span class=\"token punctuation\">.</span>Store</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">// 实现Vuex仓库模块式开发</span>\n\t<span class=\"token literal-property property\">modules</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\t\thome<span class=\"token punctuation\">,</span>\n\t\tsearch<span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// search 模块的小仓库</span>\n<span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">const</span> mutations <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">const</span> actions <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">const</span> getters <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n\tstate<span class=\"token punctuation\">,</span>\n\tmutations<span class=\"token punctuation\">,</span>\n\tactions<span class=\"token punctuation\">,</span>\n\tgetters<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"完成TypeNav组件三级联动展示数据业务\"><a href=\"#完成TypeNav组件三级联动展示数据业务\" class=\"headerlink\" title=\"完成TypeNav组件三级联动展示数据业务\"></a>完成<code>TypeNav</code>组件三级联动展示数据业务</h3><pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">[</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"电子书\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"child\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span> <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"喜洋洋\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"child\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"一级分类动态添加背景颜色\"><a href=\"#一级分类动态添加背景颜色\" class=\"headerlink\" title=\"一级分类动态添加背景颜色\"></a>一级分类动态添加背景颜色</h3><p>第一种解决方案：采用样式完成</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">.item:hover</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token property\">background</span><span class=\"token punctuation\">:</span> skyblue<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>第二种解决方案：通过<code>JS</code>完成</p>\n<p>控制响应式数据控制样式的显示和隐藏</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>div @mouseleave<span class=\"token operator\">=</span><span class=\"token string\">\"leaveIndex\"</span><span class=\"token operator\">></span> <span class=\"token comment\">// 事件委派</span>\n <span class=\"token operator\">&lt;</span>h3 @mouseenter<span class=\"token operator\">=</span><span class=\"token string\">\"changeIndex(index)\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h3<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n\n<span class=\"token function\">data</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">//  存储用户鼠标移到哪一个一级分类</span>\n      <span class=\"token literal-property property\">currentIndex</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//  鼠标进入修改响应式数据currentIndex属性</span>\n    <span class=\"token function\">changeIndex</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">index</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// index 鼠标移到某个一级分类的元素的索引值</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentIndex <span class=\"token operator\">=</span> index\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">//  一级分类鼠标移除的回调</span>\n    <span class=\"token function\">leaveIndex</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">//  鼠标移除currentIndex，变成-1</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentIndex <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"通过-JS-控制二三级商品分类的显示与隐藏\"><a href=\"#通过-JS-控制二三级商品分类的显示与隐藏\" class=\"headerlink\" title=\"通过 JS 控制二三级商品分类的显示与隐藏\"></a>通过 JS 控制二三级商品分类的显示与隐藏</h3><p>最开始的时候，是通过改变 CSS 样式<code>display:block | none</code>显示与隐藏二三级商品分类的。</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token comment\">&lt;!-- 二级、三级分类--></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span>\n\t<span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item-list clearfix<span class=\"token punctuation\">\"</span></span>\n\t<span class=\"token attr-name\">:style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;display:currentIndex===index?<span class=\"token punctuation\">'</span>block<span class=\"token punctuation\">'</span>:<span class=\"token punctuation\">'</span>none<span class=\"token punctuation\">'</span>&#125;<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">></span></span>\n\t// js动态控制二三级分类显示与隐藏\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>subitem<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>(c2) in c1.categoryChild<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>c2.categoryId<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dl</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fore<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dt</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>&#123;&#123; c2.categoryName &#125;&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dt</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dd</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>em</span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>(c3) in c2.categoryChild<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>c3.categoryId<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>&#123;&#123; c3.categoryName &#125;&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>em</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dd</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dl</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"项目卡顿现象\"><a href=\"#项目卡顿现象\" class=\"headerlink\" title=\"项目卡顿现象\"></a>项目卡顿现象</h3><p>正常：事件触发非常频繁，而且每一次的触发，回调函数都要去执行（如果时间很短，而回调函数内部存在计算，那么可能导致浏览器出现卡顿）。</p>\n<ul>\n<li>正常情况用户慢慢的操作，鼠标进入，每一个一级分类<code>h3</code>，都会触发鼠标进入时间</li>\n<li>非正常情况用户操作很快，本身全部的一级分类都应该触发鼠标进入事件，但是经过测试只有部分的<code>h3</code>触发了</li>\n<li>由于用户行为过快，导致浏览器反应不过来，如果当前回调函数中有大量的业务，有可能出现卡顿现象</li>\n</ul>\n<p>节流：在规定的时间间隔范围内不会重复触发回调，只有大于这个事件间隔才会触发回调，把频繁触发变为少量触发。</p>\n<p>防抖：前面的所有的触发都被取消，最后一次执行在规定的时间之后才会触发，也就是说如果连续快速的触发，只会执行一次。</p>\n<h3 id=\"完成三级联动节流操作\"><a href=\"#完成三级联动节流操作\" class=\"headerlink\" title=\"完成三级联动节流操作\"></a>完成三级联动节流操作</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> throttle <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash/throttle'</span> <span class=\"token comment\">// 按需引入，因为是默认暴露所以不需要大括号</span>\n<span class=\"token comment\">// throttle 回调函数别用箭头函数，可能会出现上下文this问题</span>\n<span class=\"token literal-property property\">changeIndex</span><span class=\"token operator\">:</span> <span class=\"token function\">throttle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">index</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// index 鼠标移到某个一级分类的元素的索引值</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentIndex <span class=\"token operator\">=</span> index\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"三级联动路由跳转分析\"><a href=\"#三级联动路由跳转分析\" class=\"headerlink\" title=\"三级联动路由跳转分析\"></a>三级联动路由跳转分析</h3><p>三级联动用户可以点击：一级分类、二级分类、三级分类，当你点击的时候</p>\n<p><code>Home</code>模块跳转到<code>Search</code>模块，一级会把用户选中的产品（产品的名字、产品的 ID）在路由跳转的时候进行传递。</p>\n<p>路由跳转：</p>\n<ul>\n<li>声明式导航：<code>router-link</code></li>\n<li>编程式导航：<code>push|replace</code></li>\n</ul>\n<p>三级联动：如果使用声明式导航 <code>router-link</code>，可以实现路由的跳转与传递参数，但是会出现卡顿现象。</p>\n<p><code>router-link</code>：它是一个组件，当服务器的数据返回之后，循环出很多<code>router-link</code>组件，会创建很多组件实例对象</p>\n<p>创建组件实例的时候，一瞬间创建<code>1000+</code>组件实例，是很耗内存的，所以不能使用声明式导航</p>\n<p>编程式导航使用 <code>@click</code> 在每一级分类标签上触发回调函数的方式，也不是特别好，因为在循环语句中它会创建很多个回调函数。</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>all-sort-list2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span>\n\t\t<span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span>\n\t\t<span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>(c1,index) in categoryList<span class=\"token punctuation\">\"</span></span>\n\t\t<span class=\"token attr-name\">:key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>c1.categoryId<span class=\"token punctuation\">\"</span></span>\n\t\t<span class=\"token attr-name\">:class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;cur:currentIndex===index&#125;<span class=\"token punctuation\">\"</span></span>\n\t<span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span> <span class=\"token attr-name\">@mouseenter</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeIndex(index)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>goSearch<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>&#123;&#123; c1.categoryName &#125;&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token comment\">&lt;!-- 二级、三级分类--></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span>\n\t\t\t<span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item-list clearfix<span class=\"token punctuation\">\"</span></span>\n\t\t\t<span class=\"token attr-name\">:style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;display:currentIndex===index?<span class=\"token punctuation\">'</span>block<span class=\"token punctuation\">'</span>:<span class=\"token punctuation\">'</span>none<span class=\"token punctuation\">'</span>&#125;<span class=\"token punctuation\">\"</span></span>\n\t\t<span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span>\n\t\t\t\t<span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>subitem<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t<span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>(c2) in c1.categoryChild<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t<span class=\"token attr-name\">:key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>c2.categoryId<span class=\"token punctuation\">\"</span></span>\n\t\t\t<span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dl</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fore<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dt</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>goSearch<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>&#123;&#123; c2.categoryName &#125;&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dt</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dd</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>em</span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>(c3) in c2.categoryChild<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>c3.categoryId<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>goSearch<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>&#123;&#123; c3.categoryName &#125;&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>em</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dd</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dl</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 进行路由跳转的方法</span>\n<span class=\"token function\">goSearch</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/search'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"最好的解决方案：编程式导航-事件委派\"><a href=\"#最好的解决方案：编程式导航-事件委派\" class=\"headerlink\" title=\"最好的解决方案：编程式导航 + 事件委派\"></a>最好的解决方案：编程式导航 + 事件委派</h4><p><strong>利用事件委派存在一定的问题：</strong></p>\n<ol>\n<li>父节点下面有很多子节点，子节点<code>h3/dt/dl/em</code>的事件委派给了父级节点，只有点击<code>a</code>标签的时候才会进行路由跳转怎么知道点击的一定是<code>a</code>标签</li>\n<li>即使能够确定是<code>a</code>标签，又如何确认是一级还是二级、三级的<code>a</code>标签</li>\n<li>路由跳转的时候需要传递参数，那么如何获取到 <code>1/2/3</code> 级分类的产品的名字、<code>id</code>？</li>\n</ol>\n<h4 id=\"完成三级联动的路由跳转与传递参数\"><a href=\"#完成三级联动的路由跳转与传递参数\" class=\"headerlink\" title=\"完成三级联动的路由跳转与传递参数\"></a>完成三级联动的路由跳转与传递参数</h4><p>第一个问题：把子节点当中的 a 标签，加上自定义属性 <code>data-categoryName</code>，其余的子节点是没有的</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>all-sort-list2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>goSearch<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span>\n\t\t<span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span>\n\t\t<span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>(c1,index) in categoryList<span class=\"token punctuation\">\"</span></span>\n\t\t<span class=\"token attr-name\">:key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>c1.categoryId<span class=\"token punctuation\">\"</span></span>\n\t\t<span class=\"token attr-name\">:class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;cur:currentIndex===index&#125;<span class=\"token punctuation\">\"</span></span>\n\t<span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span> <span class=\"token attr-name\">@mouseenter</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeIndex(index)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">:data-categoryName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>c1.categoryName<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:data-category1Id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>c1.categoryId<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t<span class=\"token punctuation\">></span></span>&#123;&#123; c1.categoryName &#125;&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span>\n\t\t\t<span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token comment\">&lt;!-- 二级、三级分类--></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span>\n\t\t\t<span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item-list clearfix<span class=\"token punctuation\">\"</span></span>\n\t\t\t<span class=\"token attr-name\">:style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;display:currentIndex===index?<span class=\"token punctuation\">'</span>block<span class=\"token punctuation\">'</span>:<span class=\"token punctuation\">'</span>none<span class=\"token punctuation\">'</span>&#125;<span class=\"token punctuation\">\"</span></span>\n\t\t<span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span>\n\t\t\t\t<span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>subitem<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t<span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>(c2) in c1.categoryChild<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t<span class=\"token attr-name\">:key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>c2.categoryId<span class=\"token punctuation\">\"</span></span>\n\t\t\t<span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dl</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fore<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dt</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span>\n\t\t\t\t\t\t\t<span class=\"token attr-name\">:data-categoryName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>c2.categoryName<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t\t<span class=\"token attr-name\">:data-category2Id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>c2.categoryId<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t\t<span class=\"token punctuation\">></span></span>&#123;&#123; c2.categoryName &#125;&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dt</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dd</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>em</span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>(c3) in c2.categoryChild<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>c3.categoryId<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span>\n\t\t\t\t\t\t\t\t<span class=\"token attr-name\">:data-categoryName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>c3.categoryName<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t\t\t<span class=\"token attr-name\">:data-category3Id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>c3.categoryId<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t\t\t<span class=\"token punctuation\">></span></span>&#123;&#123; c3.categoryName &#125;&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span>\n\t\t\t\t\t\t\t<span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>em</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dd</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dl</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 进行路由跳转的方法</span>\n    <span class=\"token function\">goSearch</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">//  最好的解决方案：编程式导航 + 事件委派</span>\n      <span class=\"token keyword\">let</span> element <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target\n      <span class=\"token comment\">//  获取到当前触发这个事件的节点可能是 h3/a/dt/dl，需要带有 data-categoryname的节点，这个就是a标签</span>\n      <span class=\"token comment\">//  节点有一个属性dataset属性，可以获取节点的自定义属性与属性值</span>\n      <span class=\"token keyword\">let</span> <span class=\"token punctuation\">&#123;</span>categoryname<span class=\"token punctuation\">,</span> category1id<span class=\"token punctuation\">,</span> category2id<span class=\"token punctuation\">,</span> category3id<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">//  如果标签身上有categoryname一定是a标签</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>categoryname<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//  整理路由跳转的参数</span>\n        <span class=\"token keyword\">let</span> location <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'search'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> query <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">categoryName</span><span class=\"token operator\">:</span> categoryname<span class=\"token punctuation\">&#125;</span>\n        <span class=\"token comment\">//  区分一级分类、二级分类、三级分类</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>category1id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          query<span class=\"token punctuation\">.</span>category1Id <span class=\"token operator\">=</span> category1id\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>category2id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          query<span class=\"token punctuation\">.</span>category2Id <span class=\"token operator\">=</span> category2id\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n          query<span class=\"token punctuation\">.</span>category3Id <span class=\"token operator\">=</span> category3id\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token comment\">//  整理完参数</span>\n        location<span class=\"token punctuation\">.</span>query <span class=\"token operator\">=</span> query\n        <span class=\"token comment\">//  路由跳转</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"总结-1\"><a href=\"#总结-1\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ol>\n<li>商品分类的三级列表由静态变为动态形式（获取服务器数据：解决跨域问题）</li>\n<li>防抖和节流（常问）</li>\n<li>路由跳转：声明式导航（<code>router-link</code>）是组件实例，在循环中会创建很多个导致性能消耗很高、最终采用编程式导航</li>\n<li>编程式导航如何确定用户点击了那个 a 标签，解决这个问题我们采用了自定义属性 <code>:data-categoryName</code> 有这个属性的一定是<code>a</code>标签， 再通过另一个<code>:data-categoryXId=&quot;cX.categoryId&quot;</code> 来区分是一级还是二级、三级分类</li>\n</ol>\n<h3 id=\"Search-模块中商品分类与过渡动画\"><a href=\"#Search-模块中商品分类与过渡动画\" class=\"headerlink\" title=\"Search 模块中商品分类与过渡动画\"></a><code>Search</code> 模块中商品分类与过渡动画</h3><p>开发 <code>Search</code> 模块中的 <code>TypeNav</code> 商品分类菜单（有过渡动画效果）</p>\n<p>过渡动画：前提是组件|元素务必要有 <code>v-if | v-show</code> 指令才能进行过渡动画，使用 <code>transition</code> 标签包裹有 <code>v-if | v-show</code> 指令的标签。</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>transition</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sort<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sort<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-show</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>show<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>xxxxx<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>transition</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-less\" data-language=\"less\"><code class=\"language-less\"><span class=\"token comment\">// 过渡动画开始状态（进入）</span>\n<span class=\"token selector\">.sort-enter</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 过渡动画的结束状态（进入）</span>\n<span class=\"token selector\">.sort-enter-to</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 461px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">//  定义动画的时间、速率</span>\n<span class=\"token selector\">.sort-enter.active</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> all 0.5s linear<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"优化商品分类三级列表\"><a href=\"#优化商品分类三级列表\" class=\"headerlink\" title=\"优化商品分类三级列表\"></a>优化商品分类三级列表</h2><p>我们在 <code>TypeNav</code> 中发送了请求向服务器获取数据</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 派发action 通知Vuex发请求，获取数据，存储在仓库中</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'categoryList'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>而 <code>Home</code> 组件和 <code>Search</code> 组件都用到了 <code>TypeNav</code>，在路由跳转的时候组件会进行销毁和创建，然后又发送了请求向服务器获取数据，这样每一次路由跳转都发送了一次请求性能消耗高。</p>\n<p>优化方案：将派发<code>action</code>的操作放到 <code>App.vue</code> 根组件的 <code>mounted</code> 中，根组件<code>mounted</code>只会执行一次，这样就不会再重复发送请求，而且数据也可以拿到。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>那么 main.js 也只会执行一次能不能放在 main.js 中呢？ 不能，因为<code>main.js</code>不是一个组件实例。</p></blockquote>\n<h3 id=\"合并params与query参数\"><a href=\"#合并params与query参数\" class=\"headerlink\" title=\"合并params与query参数\"></a>合并<code>params</code>与<code>query</code>参数</h3><p><code>Header</code> 组件</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function\">goSearch</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 代表的是如果有 query 参数也带过去</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">let</span> location <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"search\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">params</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">keyword</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>keyword <span class=\"token operator\">||</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n    location<span class=\"token punctuation\">.</span>query <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>query\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>TypeNav</code> 组件</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function\">goSearch</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n     <span class=\"token comment\">//  最好的解决方案：编程式导航 + 事件委派</span>\n     <span class=\"token keyword\">let</span> element <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target\n     <span class=\"token comment\">//  获取到当前触发这个事件的节点可能是 h3/a/dt/dl，需要带有 data-categoryname的节点，这个就是a标签</span>\n     <span class=\"token comment\">//  节点有一个属性dataset属性，可以获取节点的自定义属性与属性值</span>\n     <span class=\"token keyword\">let</span> <span class=\"token punctuation\">&#123;</span>categoryname<span class=\"token punctuation\">,</span> category1id<span class=\"token punctuation\">,</span> category2id<span class=\"token punctuation\">,</span> category3id<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">;</span>\n     <span class=\"token comment\">//  如果标签身上有categoryname一定是a标签</span>\n     <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>categoryname<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token comment\">//  整理路由跳转的参数</span>\n       <span class=\"token keyword\">let</span> location <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'search'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">let</span> query <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">categoryName</span><span class=\"token operator\">:</span> categoryname<span class=\"token punctuation\">&#125;</span>\n       <span class=\"token comment\">//  区分一级分类、二级分类、三级分类</span>\n       <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>category1id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n         query<span class=\"token punctuation\">.</span>category1Id <span class=\"token operator\">=</span> category1id\n       <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>category2id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n         query<span class=\"token punctuation\">.</span>category2Id <span class=\"token operator\">=</span> category2id\n       <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n         query<span class=\"token punctuation\">.</span>category3Id <span class=\"token operator\">=</span> category3id\n       <span class=\"token punctuation\">&#125;</span>\n       <span class=\"token comment\">// 判断路由跳转的时候，带有params参数，也捎带过去</span>\n       <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n         location<span class=\"token punctuation\">.</span>params <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>params\n         <span class=\"token comment\">//  动态给location配置对象添加query属性</span>\n         location<span class=\"token punctuation\">.</span>query <span class=\"token operator\">=</span> query\n         <span class=\"token comment\">//  路由跳转</span>\n         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">)</span>\n       <span class=\"token punctuation\">&#125;</span>\n     <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"开发-Home-首页\"><a href=\"#开发-Home-首页\" class=\"headerlink\" title=\"开发 Home 首页\"></a>开发 <code>Home</code> 首页</h2><p>主要是开发首页中的 <code>ListContainer</code>组件与<code>Floor</code>组件</p>\n<p>这里服务器返回的数据（接口）只有商品分类菜单，对于<code>ListContainer</code>组件与<code>Floor</code>组件的数据服务器是没有提供的。</p>\n<p>我们需要 <code>mock</code> 数据：我们需要使用一个插件 <code>mockjs</code></p>\n<h3 id=\"安装-MockJS\"><a href=\"#安装-MockJS\" class=\"headerlink\" title=\"安装 MockJS\"></a>安装 <code>MockJS</code></h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> mockjs@^1.1.0\n<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> mockjs@^1.1.0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>使用步骤：</p>\n<ol>\n<li>在项目文件夹<code>src</code>中创建一个<code>mock</code>文件夹</li>\n<li>准备<code>json</code>数据</li>\n<li>把<code>mock</code>数据需要的图片放到 <code>public</code> 文件夹中，<code>public</code>文件夹在打包的时候，会把相应的静态资源原封不动打包到<code>dist</code>文件夹中</li>\n<li>开始<code>mock</code>，通过<code>mockjs</code>模块实现，把<code>JSON</code>数据格式引入进来，<code>JSON</code>文件没有对外暴露，同样可以引入，因为<code>webpack</code>默认对外暴露的：图片、<code>JSON</code>数据格式，不要<code>export</code>，因为图片没办法暴露。</li>\n<li>把 <code>mockServe.js</code>文件在入口文件中引入，至少需要执行一次，才能模拟数据</li>\n</ol>\n<p><code>banner.json</code></p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">[</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"imgUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/images/banner1.jpg\"</span> <span class=\"token comment\">// /代表打包之后的根目录 public</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"imgUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/images/banner2.jpg\"</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"3\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"imgUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/images/banner3.jpg\"</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"4\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"imgUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/images/banner4.jpg\"</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>floor.json</code></p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">[</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"001\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"家用电器\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"keywords\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\t\t\t<span class=\"token string\">\"节能补贴\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"4K电视\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"空气净化器\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"IH电饭煲\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"滚筒洗衣机\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"电热水器\"</span>\n\t\t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"imgUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/images/floor-1-1.png\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"navList\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"热门\"</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"大家电\"</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"生活电器\"</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"厨房电器\"</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"应季电器\"</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"空气/净水\"</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"高端电器\"</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"carouselList\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0011\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token property\">\"imgUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/images/floor-1-b01.png\"</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0012\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token property\">\"imgUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/images/floor-1-b02.png\"</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0013\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token property\">\"imgUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/images/floor-1-b03.png\"</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"recommendList\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\t\t\t<span class=\"token string\">\"/images/floor-1-2.png\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"/images/floor-1-3.png\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"/images/floor-1-5.png\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"/images/floor-1-6.png\"</span>\n\t\t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"bigImg\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/images/floor-1-4.png\"</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"002\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"手机通讯\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"keywords\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\t\t\t<span class=\"token string\">\"节能补贴2\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"4K电视2\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"空气净化器2\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"IH电饭煲2\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"滚筒洗衣机2\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"电热水器2\"</span>\n\t\t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"imgUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/images/floor-1-1.png\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"navList\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"热门2\"</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"大家电2\"</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"生活电器2\"</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"厨房电器2\"</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"应季电器2\"</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"空气/净水2\"</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"高端电器2\"</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"carouselList\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0011\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token property\">\"imgUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/images/floor-1-b01.png\"</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0012\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token property\">\"imgUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/images/floor-1-b02.png\"</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0013\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token property\">\"imgUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/images/floor-1-b03.png\"</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"recommendList\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\t\t\t<span class=\"token string\">\"/images/floor-1-2.png\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"/images/floor-1-3.png\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"/images/floor-1-5.png\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"/images/floor-1-6.png\"</span>\n\t\t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"bigImg\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/images/floor-1-4.png\"</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>mockServe.js</code></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 引入 mockjs模块</span>\n<span class=\"token keyword\">import</span> Mock <span class=\"token keyword\">from</span> <span class=\"token string\">'mockjs'</span>\n<span class=\"token comment\">// 把JSON数据格式引入进来，JSON文件没有对外暴露，但是可以引入，webpack默认对外暴露的：图片、JSON数据格式</span>\n<span class=\"token keyword\">import</span> banner <span class=\"token keyword\">from</span> <span class=\"token string\">'./banner.json'</span>\n<span class=\"token keyword\">import</span> floor <span class=\"token keyword\">from</span> <span class=\"token string\">'./floor.json'</span>\n\n<span class=\"token comment\">// mock 数据：第一个参数请求地址，第二个参数是请求数据</span>\nMock<span class=\"token punctuation\">.</span><span class=\"token function\">mock</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/mock/banner'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> banner <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 模拟首页大的轮播图的数据</span>\nMock<span class=\"token punctuation\">.</span><span class=\"token function\">mock</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/mock/floor'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> floor <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 在main.js中引入 mockServe.js --- mock数据</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'@/mock/mockServe'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"Banner-实现轮播图解决方案：定时器\"><a href=\"#Banner-实现轮播图解决方案：定时器\" class=\"headerlink\" title=\"Banner 实现轮播图解决方案：定时器\"></a><code>Banner</code> 实现轮播图解决方案：定时器</h3><p><strong><code>ListContainer</code> 组件开发重点</strong></p>\n<p>安装 <code>Swiper@^5.4.5</code></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save swiper@^5.4.5\n<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> swiper@^5.4.5 --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>引入 <code>Swiper</code> 相应的 <code>JS</code> 和 <code>CSS</code>包</li>\n<li>页面中的结构务必要已经存在了</li>\n<li>然后 <code>new Swiper</code> 实例，给轮播图添加动态效果，<code>new Swiper</code> 实例放在 <code>mounted</code> 当中，没有效果。</li>\n<li>在 <code>new Swiper</code> 实例是之前，页面中的结构必须得有，现在把 <code>new Swiper</code> 的实例放在 <code>mounted</code> 中发现不行，为什么？</li>\n<li><code>bannerList</code> 的数据是从 <code>vuex</code> 中获取的，<code>dispatch</code>当中涉及异步的，导致 <code>v-for</code> 遍历这条语句的时候，因为结构是不完整的，前提是异步请求数据返回之后才能 <code>v-for</code> 遍历出数据。</li>\n</ul>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>swiper-slide<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>(carousel) in bannerList<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>carousel.id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">:src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>carousel.imgUrl<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//  派发action：通过Vuex发起ajax请求，将数据存储在仓库中</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'getBannerList'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 这一行代码是异步的</span>\n    <span class=\"token comment\">// new Swiper(&#123;初始化Swiper实例&#125;) // 在这里初始化实例仓库中还没有捞到数据，结构就不是完整的，在这里new Swiper 是不对的，组件还没有数据</span>\n    <span class=\"token comment\">// 笨方法</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">new</span> <span class=\"token class-name\">Swiper</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.swiper-container'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token literal-property property\">loop</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">//  如果需要分页器</span>\n        <span class=\"token literal-property property\">pagination</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token literal-property property\">el</span><span class=\"token operator\">:</span> <span class=\"token string\">'.swiper-pagination'</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">//  如果需要前进后退</span>\n        <span class=\"token literal-property property\">navigation</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token literal-property property\">nextEl</span><span class=\"token operator\">:</span> <span class=\"token string\">'.swiper-button-next'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">prevEl</span><span class=\"token operator\">:</span> <span class=\"token string\">'.swiper-button-prev'</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token comment\">// 获取</span>\n<span class=\"token literal-property property\">computed</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token operator\">...</span><span class=\"token function\">mapState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function-variable function\">bannerList</span><span class=\"token operator\">:</span> <span class=\"token parameter\">state</span> <span class=\"token operator\">=></span> state<span class=\"token punctuation\">.</span>home<span class=\"token punctuation\">.</span>bannerList\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//\t获取首页轮播图的数据</span>\n<span class=\"token keyword\">async</span> <span class=\"token function\">getBannerList</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">&#123;</span>commit<span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">reqGetBannerList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>code <span class=\"token operator\">===</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    \t<span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'GETBANNERLIST'</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token constant\">GETBANNERLIST</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> bannerList</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n state<span class=\"token punctuation\">.</span>bannerList <span class=\"token operator\">=</span> bannerList\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"轮播图最理想的解决方案-watch-nextTick\"><a href=\"#轮播图最理想的解决方案-watch-nextTick\" class=\"headerlink\" title=\"轮播图最理想的解决方案 watch + nextTick\"></a>轮播图最理想的解决方案 <code>watch + nextTick</code></h3><p><strong><code>watch</code>：数据监听，监听已有的数据变化</strong></p>\n<p>仓库中的<code>bannerList</code>最开始是一个空数组，然后服务器发请求数据回来，获取到图片数据，这里是有数据变化的。</p>\n<p>通过 <code>watch</code> 监听 <code>bannerList</code> 属性值的变化，当我们监听的这个回调执行力，代表组件实例身上这个属性的数据已经有了。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token literal-property property\">watch</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">//  监听bannerList数据的变化</span>\n  <span class=\"token literal-property property\">bannerList</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">handler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">newValue<span class=\"token punctuation\">,</span>oldValue</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">new</span> <span class=\"token class-name\">Swiper</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.swiper-container'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token literal-property property\">loop</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">//  如果需要分页器</span>\n        <span class=\"token literal-property property\">pagination</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token literal-property property\">el</span><span class=\"token operator\">:</span> <span class=\"token string\">'.swiper-pagination'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">clickable</span><span class=\"token operator\">:</span><span class=\"token boolean\">true</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">//  如果需要前进后退</span>\n        <span class=\"token literal-property property\">navigation</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token literal-property property\">nextEl</span><span class=\"token operator\">:</span> <span class=\"token string\">'.swiper-button-next'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">prevEl</span><span class=\"token operator\">:</span> <span class=\"token string\">'.swiper-button-prev'</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>那<code>watch</code>这种写法可以吗？还是不行~</p>\n<p>在这里<code>new Swiper</code> 还是没有结构，这里只能保证数据已经有了，但是 <code>v-for</code> 有没有执行完毕把结构渲染出来还是不确定的。</p>\n<p><strong><code>$nextTick</code>：</strong>在下次<code>DOM</code>更新<strong>循环结束之后</strong>执行延迟回调。在<strong>修改数据之后</strong>立即执行这个方法，获取更新后的<code>DOM</code>。</p>\n<p><code>bannerList</code> 初始状态是一个空数组，数据拿到它发生数组中有了数据，DOM 已经更新完毕了，这里指的就是下次<code>DOM</code>更新，<code>v-for</code> 循环结束了结构已经有了，就是循环结束之后然后再延迟执行回调。</p>\n<p>在修改数据之后，<code>bannerList</code>就是一个空数组，服务器数据已经拿到了，<code>v-for</code> 循环结束之后，在执行 <code>nextTick</code>回调。</p>\n<p><code>$nextTick</code>：可以保证页面中结构一定是有的，经常和很多插件一起使用，这些插件都需要<code>DOM</code>已经存在了。</p>\n<p><strong>最终代码</strong></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token literal-property property\">watch</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//  监听bannerList数据的变化</span>\n    <span class=\"token literal-property property\">bannerList</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">handler</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">newValue<span class=\"token punctuation\">,</span> oldValue</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$nextTick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">new</span> <span class=\"token class-name\">Swiper</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.swiper-container'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token literal-property property\">loop</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            <span class=\"token comment\">//  如果需要分页器</span>\n            <span class=\"token literal-property property\">pagination</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n              <span class=\"token literal-property property\">el</span><span class=\"token operator\">:</span> <span class=\"token string\">'.swiper-pagination'</span><span class=\"token punctuation\">,</span>\n              <span class=\"token literal-property property\">clickable</span><span class=\"token operator\">:</span><span class=\"token boolean\">true</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n            <span class=\"token comment\">//  如果需要前进后退</span>\n            <span class=\"token literal-property property\">navigation</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n              <span class=\"token literal-property property\">nextEl</span><span class=\"token operator\">:</span> <span class=\"token string\">'.swiper-button-next'</span><span class=\"token punctuation\">,</span>\n              <span class=\"token literal-property property\">prevEl</span><span class=\"token operator\">:</span> <span class=\"token string\">'.swiper-button-prev'</span>\n            <span class=\"token punctuation\">&#125;</span>\n          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"开发-Floor-组件\"><a href=\"#开发-Floor-组件\" class=\"headerlink\" title=\"开发 Floor 组件\"></a>开发 <code>Floor</code> 组件</h3><p><code>getFloorList</code> 拿到的数据是一个数组，数组里面是两个对象分别给两个 <code>Floor</code> 组件使用的， <code>Floor</code> 组件我们是在<code>Home</code>中使用，并且使用了两次，所以不能直接在<code>Floor</code>组件中发请求。</p>\n<p><code>getFloorList</code> 只能在 <code>Home</code> 路由组件触发，拿到数据后 在<code>Home</code>组件中 <code>v-for</code> 遍历 <code>Floor</code> 组件。</p>\n<p><code>v-for</code> 也可以在自定义组件(标签)上使用。</p>\n<p>组件通信的方式有哪些？</p>\n<ul>\n<li><code>props</code> 用于父子组件通信</li>\n<li>自定义事件 <code>$on</code> <code>$emit</code> 可以实现子给父通信</li>\n<li>全局事件总线：<code>$bus</code> 全能</li>\n<li><code>pubsub-js</code>：在<code>Vue</code>中几乎不用， 全能</li>\n<li>还有 插槽：默认插槽、具名插槽、作用域插槽</li>\n<li><code>Vuex</code></li>\n</ul>\n<p>这次请求是父组件发的，然后父组件通过<code>props</code>传递给了<code>Floor</code>，在结构都已经有了的情况下执行<code>mounted</code>，所以就不会遇到之前 <code>new Swiper</code> 实例拿不到 DOM 结构的问题了。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Floor 组件</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> Swiper <span class=\"token keyword\">from</span> <span class=\"token string\">'swiper'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Floor\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'list'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 第一次写 Swiper的时候，在mounted中写是不可以的，为什么在这里就可以了</span>\n    <span class=\"token comment\">// 之前写轮播图的时候，是在当前组件内部发请求，动态渲染解构，前台需要服务器的数据回来，因此之前的写法在这里不行</span>\n    <span class=\"token comment\">// 这里new Swiper的时候父组件已经发请求拿到数据了，数据给了Floor，Floor早已经把数据遍历完了</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">Swiper</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$refs<span class=\"token punctuation\">.</span>floor1Swiper<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">loop</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">//  如果需要分页器</span>\n      <span class=\"token literal-property property\">pagination</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token literal-property property\">el</span><span class=\"token operator\">:</span> <span class=\"token string\">'.swiper-pagination'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">clickable</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">//  如果需要前进后退</span>\n      <span class=\"token literal-property property\">navigation</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token literal-property property\">nextEl</span><span class=\"token operator\">:</span> <span class=\"token string\">'.swiper-button-next'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">prevEl</span><span class=\"token operator\">:</span> <span class=\"token string\">'.swiper-button-prev'</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Home组件</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> Floor这个组件自己在组件内部是没有发请求的，数据是父组件给的 <span class=\"token operator\">--</span><span class=\"token operator\">></span>\n\t<span class=\"token operator\">&lt;</span>Floor v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"(floor) in floorList\"</span> <span class=\"token operator\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"floor.id\"</span> <span class=\"token operator\">:</span>list<span class=\"token operator\">=</span><span class=\"token string\">\"floor\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//  派发action 获取 floor 组件的数据</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'getFloorList'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">computed</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token operator\">...</span><span class=\"token function\">mapState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function-variable function\">floorList</span><span class=\"token operator\">:</span> <span class=\"token parameter\">state</span> <span class=\"token operator\">=></span> state<span class=\"token punctuation\">.</span>home<span class=\"token punctuation\">.</span>floorList\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"把首页当中的轮播图拆分为一个全局共用的组件\"><a href=\"#把首页当中的轮播图拆分为一个全局共用的组件\" class=\"headerlink\" title=\"把首页当中的轮播图拆分为一个全局共用的组件\"></a>把首页当中的轮播图拆分为一个全局共用的组件</h3><p>在开发项目的时候，如果某一个组件在很多地方都使用，就把它变为全局组件，注册一次，可以在任意地方使用，共用的组件和非路由组件放在 <code>components</code> 文件夹中。</p>\n<h4 id=\"Carousel-vue封装\"><a href=\"#Carousel-vue封装\" class=\"headerlink\" title=\"Carousel.vue封装\"></a><code>Carousel.vue</code>封装</h4><pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n\t&lt;div class&#x3D;&quot;swiper-container&quot; ref&#x3D;&quot;cur&quot;&gt;\n\t\t&lt;div class&#x3D;&quot;swiper-wrapper&quot;&gt;\n\t\t\t&lt;div class&#x3D;&quot;swiper-slide&quot; v-for&#x3D;&quot;carousel in list&quot; :key&#x3D;&quot;carousel.id&quot;&gt;\n\t\t\t\t&lt;img :src&#x3D;&quot;carousel.imgUrl&quot; alt&#x3D;&quot;&quot; &#x2F;&gt;\n\t\t\t&lt;&#x2F;div&gt;\n\t\t&lt;&#x2F;div&gt;\n\n\t\t&lt;!-- 如果需要分页器 --&gt;\n\t\t&lt;div class&#x3D;&quot;swiper-pagination&quot;&gt;&lt;&#x2F;div&gt;\n\n\t\t&lt;!-- 如果需要导航按钮 --&gt;\n\t\t&lt;div class&#x3D;&quot;swiper-button-prev&quot;&gt;&lt;&#x2F;div&gt;\n\t\t&lt;div class&#x3D;&quot;swiper-button-next&quot;&gt;&lt;&#x2F;div&gt;\n\t&lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nimport Swiper from &#39;swiper&#39;\n\nexport default &#123;\n\tname: &#39;Carousel&#39;,\n\tprops: [&#39;list&#39;],\n\twatch: &#123;\n\t\tlist: &#123;\n\t\t\t&#x2F;&#x2F; 不管数据有没有变化，上来立即监听一次\n\t\t\t&#x2F;&#x2F; 为什么watch监听不到list，因为这个数据从来没有发生过变化，数据是父亲给的，来的时候就是一个对象，对象里面该有的书都存在\n\t\t\timmediate: true,\n\t\t\thandler() &#123;\n\t\t\t\t&#x2F;&#x2F;  只能监听到数据已经有了，但是 v-for动态渲染解构我们还是没有办法确定，因此还是需要用nextTic\n\t\t\t\tthis.$nextTick(() &#x3D;&gt; &#123;\n\t\t\t\t\tnew Swiper(this.$refs.cur, &#123;\n\t\t\t\t\t\tloop: true,\n\t\t\t\t\t\t&#x2F;&#x2F; 如果需要分页器\n\t\t\t\t\t\tpagination: &#123;\n\t\t\t\t\t\t\tel: &#39;.swiper-pagination&#39;,\n\t\t\t\t\t\t\t&#x2F;&#x2F;点击小球的时候也切换图片\n\t\t\t\t\t\t\tclickable: true,\n\t\t\t\t\t\t&#125;,\n\t\t\t\t\t\t&#x2F;&#x2F; 如果需要前进后退按钮\n\t\t\t\t\t\tnavigation: &#123;\n\t\t\t\t\t\t\tnextEl: &#39;.swiper-button-next&#39;,\n\t\t\t\t\t\t\tprevEl: &#39;.swiper-button-prev&#39;,\n\t\t\t\t\t\t&#125;,\n\t\t\t\t\t&#125;)\n\t\t\t\t&#125;)\n\t\t\t&#125;,\n\t\t&#125;,\n\t&#125;,\n&#125;\n&lt;&#x2F;script&gt;\n\n&lt;style scoped&gt;&lt;&#x2F;style&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>使用 <code>Carousel</code>组件</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;!--banner轮播--&gt;\n&lt;Carousel :list&#x3D;&quot;bannerList&quot; &#x2F;&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"Search-模块开发\"><a href=\"#Search-模块开发\" class=\"headerlink\" title=\"Search 模块开发\"></a><code>Search</code> 模块开发</h2><ol>\n<li>先写静态页面 + 静态组件拆分</li>\n<li>发请求（API）</li>\n<li><code>vuex</code> （<code>dispatch</code>、<code>commit</code>、<code>mutation</code>修改<code>state</code>）</li>\n<li>组件获取仓库数据，动态展示数据</li>\n</ol>\n<h4 id=\"这里注意一些问题\"><a href=\"#这里注意一些问题\" class=\"headerlink\" title=\"这里注意一些问题\"></a>这里注意一些问题</h4><p><strong>有可能在请求 <code>/api/list</code> 这个接口的时候浏览器显示返回来 <code>201</code> 没有拿到数据，遇到这种情况怎么排查呢</strong></p>\n<ol>\n<li>确认自己代码没有写错，比如说 <code>axios</code> 中对象写法 <code>method: &#39;post&#39;</code> 没有写成 <code>methods: &#39;post&#39;</code> 此类错误。</li>\n<li>如果是在找不到自己代码那里有问题就把源代码<code>copy</code>过来替换成自己的代码在继续运行。</li>\n<li>将<code>gitee</code>上的源代码下载运行起来看看请求是不是成功，如果成功证明服务器没有问题，如果不成功证明服务器可能这个接口就是连接不上（运行源代码的时候先把<code>vue.config.js</code>中的服务器代理地址换成最新的）</li>\n</ol>\n<p>如果没有在<code>vuex</code>中使用<code>getters</code>简化数据，那么我们在组件中获取数据是这么写的：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token literal-property property\">computed</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token operator\">...</span><span class=\"token function\">mapState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function-variable function\">goodsList</span><span class=\"token operator\">:</span> <span class=\"token parameter\">state</span> <span class=\"token operator\">=></span> state<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">.</span>searchList<span class=\"token punctuation\">.</span>goodsList\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 计算属性：为了简化仓库中的数据而生，让组件使用数据的时候简单一些</span>\n<span class=\"token keyword\">const</span> getters <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">// 当前形参state是当前仓库中的state</span>\n\t<span class=\"token function\">goodsList</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">return</span> state<span class=\"token punctuation\">.</span>searchList<span class=\"token punctuation\">.</span>goodsList\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">trademarkList</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">return</span> state<span class=\"token punctuation\">.</span>searchList<span class=\"token punctuation\">.</span>trademarkList\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">attrsList</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">return</span> state<span class=\"token punctuation\">.</span>searchList<span class=\"token punctuation\">.</span>attrsList\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>使用 getters 后获取数据的方式，这样就简化了后续组件使用时的操作</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token literal-property property\">computed</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// mapGetters 里面的写法：传递的是数组，因为getters计算时没有划分模块的[home/search]</span>\n  <span class=\"token operator\">...</span><span class=\"token function\">mapGetters</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'goodsList'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'trademarkList'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'attrsList'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><code>state.searchList.goodsList</code> 如果服务器的数据回来了，没问题是一个数组。</li>\n<li>假如网络不给力或者没有网络，那么我们应该返回一个空数组，不返回的就是一个<code>undefined</code></li>\n<li><code>undefined</code>再去遍历的话就不对了</li>\n</ul>\n<p>修改之前<code>getters</code>代码如果没有数据返回一个空数组。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 计算属性：为了简化仓库中的数据而生，让组件使用数据的时候简单一些</span>\n<span class=\"token keyword\">const</span> getters <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">// 当前形参state是当前仓库中的state</span>\n\t<span class=\"token function\">goodsList</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">return</span> state<span class=\"token punctuation\">.</span>searchList<span class=\"token punctuation\">.</span>goodsList <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">trademarkList</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">return</span> state<span class=\"token punctuation\">.</span>searchList<span class=\"token punctuation\">.</span>trademarkList <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">attrsList</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">return</span> state<span class=\"token punctuation\">.</span>searchList<span class=\"token punctuation\">.</span>attrsList <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"search模块根据不同参数获取数据展示\"><a href=\"#search模块根据不同参数获取数据展示\" class=\"headerlink\" title=\"search模块根据不同参数获取数据展示\"></a><code>search</code>模块根据不同参数获取数据展示</h4><p>在发请求之前，把接口需要传递的参数进行整理，服务器就会返回查询的数据</p>\n<p>方法一：在<code>beforeMount</code>中使用<code>Object.assign()</code>方法合并对象</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>方法二：在<code>beforeMount</code>中使用 <code>...</code> 扩展运算符的方式合并对象</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>searchParams <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">,</span>\n\t<span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">,</span>\n\t<span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>目前 <code>Search</code> 组件的 实现方式还存在问题，当用户点击手机跳转到 <code>Search</code> 页面，我们在输入<code>oppo</code>点击搜索，这是时候没办法发起第二次请求。</p>\n<p><code>mounted</code>挂载只会执行一次，怎么能让它再次发送请求，不管是<code>params</code>还是<code>query</code>，搜索的时候地址栏都会发生变化。</p>\n<p>通过 <code>watch</code> 监听 <code>$route</code> 的变化来重新整理数据和发送<code>ajax</code>请求。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token literal-property property\">watch</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">$route</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//  再次发请求之前整理带给服务器的参数</span>\n    Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">//  再次发起ajax请求</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"面包屑\"><a href=\"#面包屑\" class=\"headerlink\" title=\"面包屑\"></a>面包屑</h3><p>每一次请求完毕，应该把相应的<code>1/2/3</code>级分类的 id 置空，让它接受下一次相应的<code>1/2/3</code>级<code>id</code></p>\n<p>分类名字与关键字不用清理，因为每一次路由发生变化的时候，都会赋予它新的数据</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token literal-property property\">watch</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">$route</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span>category1Id <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span>category2Id <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span>category3Id <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>带给服务器参数说明是可有可无的，如果属性为空的字符串还是会把相应的字段带给服务器，但是把响应的字段变为<code>undefined</code>，当前这个字段不会带给服务器，性能会更好一些</strong></p>\n<p>地址栏也需要修改，进行路由跳转，使用编程式导航自己跳自己， <code>params</code> 参数在路由跳转刷新的时候回消失，当准备删除<code>query</code>参数的时候，路由跳转的时候应该带着。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function\">clearCategoryInfo</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span>category1Id <span class=\"token operator\">=</span> <span class=\"token keyword\">undefined</span>\n     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span>category2Id <span class=\"token operator\">=</span> <span class=\"token keyword\">undefined</span>\n     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span>category3Id <span class=\"token operator\">=</span> <span class=\"token keyword\">undefined</span>\n   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n   <span class=\"token function\">removeCategoryName</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n     <span class=\"token comment\">// 将带给服务器的参数置空，然后重新发送请求</span>\n     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span>categoryName <span class=\"token operator\">=</span> <span class=\"token keyword\">undefined</span>\n     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">clearCategoryInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n     <span class=\"token comment\">//  地址栏也需要修改，进行路由跳转，自己跳自己，并且params参数也姚带上</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'search'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">params</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"面包屑处理关键字\"><a href=\"#面包屑处理关键字\" class=\"headerlink\" title=\"面包屑处理关键字\"></a>面包屑处理关键字</h4><p>当面包屑中的关键字清除以后，需要让<code>Header</code>组件搜索框中的关键字清除</p>\n<p>涉及组件通信中的兄弟组件通信：使用全局事件总线 <code>$bus</code></p>\n<p>在<code>main.js</code>的<code>new Vue</code>中配置事件总线</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">h</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\">// 全局事件总线配置</span>\n\t<span class=\"token function\">beforeCreate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token class-name\">Vue</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>$bus <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\">//需要把router进行注册</span>\n\t<span class=\"token comment\">//可以让全部的组件（非路由|路由组件）都可以获取到$route|$router属性</span>\n\t<span class=\"token comment\">//$route(路由)：可以获取到路由信息（path、query、params）</span>\n\t<span class=\"token comment\">//$router:进行编程式导航路由跳转push||replace</span>\n\trouter<span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\">// 注册仓库：组件实例身上会多一个属性$store</span>\n\tstore<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">$mount</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>然后就可以在 <code>Search</code> 组件中使用 <code>$emit</code> 触发 <code>Header</code> 组件去清除<code>keyword</code> 了</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//  通知Header清除关键字</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$bus<span class=\"token punctuation\">.</span><span class=\"token function\">$emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'clear'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><code>Header</code> 组件在 <code>mounted</code>中用<code>$on</code>响应事件</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$bus<span class=\"token punctuation\">.</span><span class=\"token function\">$on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'clear'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>keyword <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"面包屑处理品牌信息\"><a href=\"#面包屑处理品牌信息\" class=\"headerlink\" title=\"面包屑处理品牌信息\"></a>面包屑处理品牌信息</h4><p>点击了品牌（苹果），我们还需要整理参数，向服务器发请求获取相应的数据进行展示，发请求的操作要在父组件中发起，我们整理的 <code>searchParams</code> 参数是父组件整理的然后再给服务器。</p>\n<p>所以我们点击了子组件 <code>searchSelector</code> ，<code>searchSelector</code>要把点击的品牌信息给父组件传递过去，使用自定义事件。</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&#x2F;&#x2F; 父组件 search 给子组件 searchSelector 绑定自定义事件\n&lt;SearchSelector @trademarkInfo&#x3D;&quot;trademarkInfo&quot; &#x2F;&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>子组件 <code>searchSelector</code> 给每个品牌（<code>li</code>标签）绑定点击事件 <code>tradeMarkHandle</code></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function\">tradeMarkHandle</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">trademark</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 点击了品牌，还是需要整理参数，向服务器发请求获取相应的数据进行展示</span>\n  <span class=\"token comment\">// 触发回调函数，将品牌数据传递过去</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'trademarkInfo'</span><span class=\"token punctuation\">,</span> trademark<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>整理品牌字段的参数，<code>&quot;ID:品牌名称&quot;</code></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//  自定义事件的回调</span>\n   <span class=\"token function\">trademarkInfo</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">trademark</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span>trademark <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>trademark<span class=\"token punctuation\">.</span>tmId<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>trademark<span class=\"token punctuation\">.</span>tmName<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span>\n     <span class=\"token comment\">// 再次发请求获取search模块列表数据进行展示</span>\n     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;!-- 品牌的面包屑--&gt;\n&lt;li class&#x3D;&quot;with-x&quot; v-if&#x3D;&quot;searchParams.trademark&quot;&gt;\n  &#123;&#123; searchParams.trademark.split(&#39;:&#39;)[1] &#125;&#125;\n  &lt;i @click&#x3D;&quot;removeTradeMark&quot;&gt;x&lt;&#x2F;i&gt;\n&lt;&#x2F;li&gt;\nmethods:&#123; removeTradeMark () &#123; this.searchParams.trademark &#x3D; undefined\nthis.getData() &#125; &#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"平台售卖属性\"><a href=\"#平台售卖属性\" class=\"headerlink\" title=\"平台售卖属性\"></a>平台售卖属性</h4><p>新增获取平台售卖属性的回调，还是采用自定义事件触发回调函数的方式让 <code>searchSelector</code> 给父组件 <code>Search</code>传递数据。</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;!--Search.vue--&gt;\n&lt;SearchSelector @trademarkInfo&#x3D;&quot;trademarkInfo&quot; @attrInfo&#x3D;&quot;attrInfo&quot; &#x2F;&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;!--SearchSelector.vue  --&gt;\n&lt;!-- 平台售卖属性--&gt;\n    &lt;div class&#x3D;&quot;type-wrap&quot; v-for&#x3D;&quot;(attr) in attrsList&quot; :key&#x3D;&quot;attr.attrId&quot;&gt;\n      &lt;!--      平台售卖属性：比如说颜色--&gt;\n      &lt;div class&#x3D;&quot;fl key&quot;&gt;&#123;&#123; attr.attrName &#125;&#125;&lt;&#x2F;div&gt;\n      &lt;div class&#x3D;&quot;fl value&quot;&gt;\n        &lt;ul class&#x3D;&quot;type-list&quot;&gt;\n          &lt;!--平台相应售卖属性的属性值：粉色、蓝色、黑色--&gt;\n          &lt;li v-for&#x3D;&quot;(attrValue,index) in attr.attrValueList&quot; :key&#x3D;&quot;index&quot; @click&#x3D;&quot;attrInfo(attr,attrValue)&quot;&gt; &#x2F;&#x2F; 点击平台售卖属性触发回调函数传递属性ID:属性值:属性名等参数\n            &lt;a&gt;&#123;&#123; attrValue &#125;&#125;&lt;&#x2F;a&gt;\n          &lt;&#x2F;li&gt;\n        &lt;&#x2F;ul&gt;\n      &lt;&#x2F;div&gt;\n      &lt;div class&#x3D;&quot;fl ext&quot;&gt;&lt;&#x2F;div&gt;\n    &lt;&#x2F;div&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>子组件 <code>SearchSelector.vue</code> 使用 <code>this.$emit</code> 触发回调，并且传递参数</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">\n<span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">tradeMarkHandle</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">trademark</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//  点击了品牌，还是需要整理参数，向服务器发请求获取相应的数据进行展示</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'trademarkInfo'</span><span class=\"token punctuation\">,</span> trademark<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// 平台售卖属性值的点击事件</span>\n  <span class=\"token function\">attrInfo</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">attr<span class=\"token punctuation\">,</span> attrValue</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// [\"属性ID:属性值:属性名\"]</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'attrInfo'</span><span class=\"token punctuation\">,</span> attr<span class=\"token punctuation\">,</span> attrValue<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>平台售卖属性面包屑</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;!-- 平台的售卖属性值展示--&gt;\n&lt;li\n\tclass&#x3D;&quot;with-x&quot;\n\tv-for&#x3D;&quot;(attrValue, index) in searchParams.props&quot;\n\t:key&#x3D;&quot;index&quot;\n&gt;\n   &#123;&#123; attrValue.split(&#39;:&#39;)[1] &#125;&#125;\n   &lt;i @click&#x3D;&quot;removeAttr&quot;&gt;x&lt;&#x2F;i&gt;\n&lt;&#x2F;li&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>父组件 <code>Search.vue</code> 收集平台属性回调函数</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function\">attrInfo</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">attr<span class=\"token punctuation\">,</span> attrValue</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// 参数格式整理好  [\"属性ID:属性值:属性名\"]</span>\n      <span class=\"token keyword\">let</span> props <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>attr<span class=\"token punctuation\">.</span>attrId<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>attrValue<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>attr<span class=\"token punctuation\">.</span>attrName<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 数组去重</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token comment\">// 再次发送请求</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token function\">removeAttr</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">index</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// 再次整理参数</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"商品排序\"><a href=\"#商品排序\" class=\"headerlink\" title=\"商品排序\"></a>商品排序</h2><ol>\n<li>综合排序</li>\n<li>价格排序</li>\n<li><code>asc</code> 升序，<code>desc</code> 降序</li>\n<li>示例：<code>&quot;1:desc&quot;</code></li>\n</ol>\n<p><code>order</code> 的属性值最多有多上中写法：</p>\n<ol>\n<li><code>1:asc</code></li>\n<li><code>1:desc</code></li>\n<li><code>2:asc</code></li>\n<li><code>2:desc</code></li>\n</ol>\n<p>排序的初始状态应该是综合且降序</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token operator\">...</span><span class=\"token punctuation\">.</span>\n\t\t<span class=\"token literal-property property\">order</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1:desc\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>默认是综合有类名，点击价格给价格类名，通过判断 <code>order</code> 中 包含<code>1</code>还是<code>2</code>比如<code>&quot;1:desc&quot;</code> 还是 <code>&quot;2:desc&quot;</code>，变成<code>2</code>就是价格。</p>\n<p>综合和价格商品排序谁有类名就显示有箭头，箭头采用 <code>iconfont.cn</code> 中的<code>icon</code>图标。</p>\n<p>在<code>index.html</code>引入 <code>icon</code>，然后<code>Search</code>组件中 使用<code>icon</code>，通过动态类名+<code>computed</code>的方式来切换<code>icon-UP</code> 还是 <code>icon-DOWN</code></p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span>\n\t<span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span>\n\t<span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://at.alicdn.com/t/font_2758111_9hehey1sgko.css<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;li :class&#x3D;&quot;&#123; active: isOne &#125;&quot;&gt;\n  &lt;a&gt;综合\n    &lt;span v-show&#x3D;&quot;isOne&quot; class&#x3D;&quot;iconfont&quot; :class&#x3D;&quot;&#123;&#39;icon-UP&#39;:isAsc,&#39;icon-DOWN&#39;:isDesc&#125;&quot;&gt;&lt;&#x2F;span&gt;\n  &lt;&#x2F;a&gt;\n&lt;&#x2F;li&gt;\n&lt;li :class&#x3D;&quot;&#123; active: isTwo &#125;&quot;&gt;\n  &lt;a&gt;价格 &lt;span v-show&#x3D;&quot;isTwo&quot; class&#x3D;&quot;iconfont&quot; :class&#x3D;&quot;&#123;&#39;icon-UP&#39;:isAsc,&#39;icon-DOWN&#39;:isDesc&#125;&quot;&gt;&lt;&#x2F;span&gt;\n  &lt;&#x2F;a&gt;\n&lt;&#x2F;li&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token literal-property property\">computed</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">isOne</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span>order<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">isTwo</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span>order<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">isAsc</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span>order<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'asc'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">isDesc</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span>order<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'desc'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>然后我们给每一个<code>li</code>（综合、价格） 绑定单击事件</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;li :class&#x3D;&quot;&#123; active: isOne &#125;&quot; @click&#x3D;&quot;changeOrder(&#39;1&#39;)&quot;&gt;\n      &lt;a&gt;综合\n          &lt;span v-show&#x3D;&quot;isOne&quot; class&#x3D;&quot;iconfont&quot; :class&#x3D;&quot;&#123;&#39;icon-UP&#39;:isAsc,&#39;icon-DOWN&#39;:isDesc&#125;&quot;&gt;&lt;&#x2F;span&gt;\n      &lt;&#x2F;a&gt;\n&lt;&#x2F;li&gt;\n&lt;li :class&#x3D;&quot;&#123; active: isTwo &#125;&quot; @click&#x3D;&quot;changeOrder(&#39;2&#39;)&quot;&gt;\n    &lt;a&gt;价格 &lt;span v-show&#x3D;&quot;isTwo&quot; class&#x3D;&quot;iconfont&quot; :class&#x3D;&quot;&#123;&#39;icon-UP&#39;:isAsc,&#39;icon-DOWN&#39;:isDesc&#125;&quot;&gt;&lt;&#x2F;span&gt;\n    &lt;&#x2F;a&gt;\n&lt;&#x2F;li&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>完成商品排序操作</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function\">changeOrder</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">flag</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// flag 它是一个标记，代表用户点击的是综合还是价格</span>\n    <span class=\"token comment\">// 获取order初始状态【咱们需要通过初始状态去判断接下来做什么】</span>\n    <span class=\"token keyword\">let</span> originOrder <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span>order\n    <span class=\"token keyword\">let</span> originFlag <span class=\"token operator\">=</span> originOrder<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">':'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">let</span> originSort <span class=\"token operator\">=</span> originOrder<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">':'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    <span class=\"token comment\">// 准备一个新的order 属性值</span>\n    <span class=\"token keyword\">let</span> newOrder <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n    <span class=\"token comment\">// 判断的是多次点击是不是同一个按钮</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>flag <span class=\"token operator\">===</span> originFlag<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        newOrder <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>originFlag<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>originSort <span class=\"token operator\">===</span> <span class=\"token string\">'desc'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'asc'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'desc'</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//  点击的不是同一个按钮</span>\n        newOrder <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>flag<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token string\">'desc'</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// 将新的 order 传给 searchParams</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span>order <span class=\"token operator\">=</span> newOrder\n    <span class=\"token comment\">//  再次发请求</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"分页器功能\"><a href=\"#分页器功能\" class=\"headerlink\" title=\"分页器功能\"></a>分页器功能</h2><p>为什么很多项目采用分页功能，主要是平台同时展示的数据有很多（<code>1W+</code>）浏览器加载出来就会很卡，所以需要采用分页功能。</p>\n<p><code>ElementUI</code> 是有相应的分页组件的使用起来很简单，但是还是需要自己了解分页功能具体怎么实现，可以自定义分页工。</p>\n<h4 id=\"分页器的展示需要那些数据\"><a href=\"#分页器的展示需要那些数据\" class=\"headerlink\" title=\"分页器的展示需要那些数据\"></a>分页器的展示需要那些数据</h4><ul>\n<li>需要知道当前页数是第几页，<code>pageNo</code> 字段代表当前页数</li>\n<li>需要知道每一页需要展示多少条数据，<code>pageSize</code> 字段</li>\n<li><code>total</code> 字段代表，分页器一共需要展示多少条数据，这里可以确定一共有多少页的信息</li>\n<li>需要知道分页器连续的页码个数<code>5|7</code>奇数比较对称，偶数显示效果不对称</li>\n</ul>\n<p><strong>总结：对于分页器而言，自定义前提需要知道四个前提条件</strong></p>\n<ul>\n<li><code>pageNo</code>：当前第几个</li>\n<li><code>pageSize</code>：代表每一页展示多少条数据</li>\n<li><code>total</code>：代表整个分页一共要展示多少条数据</li>\n<li><code>continues</code>：代表分页连续页码个数</li>\n</ul>\n<p>自定义分页器，在开发的时候先自己<code>mock</code>数据，调试成功后，在使用服务器的数据。</p>\n<p>对于分页器而言，很重要的一点是要算出来连续页码起始数字和结束数字，当前页是第<code>8</code>页那么就是 <code>...6 7 8 9 10 ...</code></p>\n<p>如果是第<code>15</code>页，那么就是<code>... 13 14 15 16 17 ...</code>，前面是当前页码<code>-2</code>后面是当前页码<code>+2</code>这样显示</p>\n<p>同时我们要让分页器连续页码可以随时调整，比如当前是第<code>8</code>页，连续页码 5 页就是 <code>6 7 8 9 10</code>，当前第 <code>8</code> 页，连续页码 7 页那么就是 <code>5 6 7 8 9 10 11</code>。</p>\n<p>分页器的数字没有 <code>0</code> ，也不能是负数，所以如果出现这种不正常的现象应该让数字往前挪动。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//  计算出连续的页码的起始数字与结束数字(连续的页码数字：至少是5)</span>\n<span class=\"token function\">startNumAndEndNum</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span>pageNo<span class=\"token punctuation\">,</span> continues<span class=\"token punctuation\">,</span> totalPage<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span>\n  <span class=\"token comment\">//  先定义两个变量存储起始数字与结束数字</span>\n  <span class=\"token keyword\">let</span> start <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> end <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 先判断连续页码至少五页，如果不够五页，总页数没有连续的页码多</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>continues <span class=\"token operator\">></span> totalPage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    start <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    end <span class=\"token operator\">=</span> totalPage<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//  连续的页码5，但是我们的总页数一定是大于5页的</span>\n    <span class=\"token comment\">// 起始数字</span>\n    start <span class=\"token operator\">=</span> pageNo <span class=\"token operator\">-</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>continues <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 结束数字</span>\n    end <span class=\"token operator\">=</span> pageNo <span class=\"token operator\">+</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>continues <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">//  start 出现0还有负数，我们需要纠正</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>start <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      start <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n      end <span class=\"token operator\">=</span> continues\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">//  end 数字大于总页码了</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>end <span class=\"token operator\">></span> totalPage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      end <span class=\"token operator\">=</span> totalPage\n      start <span class=\"token operator\">=</span> totalPage <span class=\"token operator\">-</span> continues <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"分页器动态展示\"><a href=\"#分页器动态展示\" class=\"headerlink\" title=\"分页器动态展示\"></a>分页器动态展示</h4><p><code>v-for</code>可以遍历 <code>Array</code> <code>Object</code> <code>Number</code> <code>String</code></p>\n<p>自定义分页器实现完整代码</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n\t&lt;div class&#x3D;&quot;pagination&quot;&gt;\n\t\t&lt;h1&gt;&#123;&#123; startNumAndEndNum &#125;&#125;---当前页码&#123;&#123; pageNo &#125;&#125;&lt;&#x2F;h1&gt;\n\t\t&lt;button :disabled&#x3D;&quot;pageNo &#x3D;&#x3D;&#x3D; 1&quot; @click&#x3D;&quot;$emit(&#39;getPageNo&#39;, pageNo - 1)&quot;&gt;\n\t\t\t上一页\n\t\t&lt;&#x2F;button&gt;\n\t\t&lt;button v-show&#x3D;&quot;startNumAndEndNum.start &gt; 1&quot; @click&#x3D;&quot;$emit(&#39;getPageNo&#39;, 1)&quot;&gt;\n\t\t\t1\n\t\t&lt;&#x2F;button&gt;\n\t\t&lt;button v-show&#x3D;&quot;startNumAndEndNum.start &gt; 2&quot;&gt;....&lt;&#x2F;button&gt;\n\n\t\t&lt;!-- 中间部分--&gt;\n\t\t&lt;button\n\t\t\tv-for&#x3D;&quot;(page, index) in startNumAndEndNum.end&quot;\n\t\t\t:key&#x3D;&quot;index&quot;\n\t\t\tv-show&#x3D;&quot;page &gt;&#x3D; startNumAndEndNum.start&quot;\n\t\t\t@click&#x3D;&quot;$emit(&#39;getPageNo&#39;, page)&quot;\n\t\t&gt;\n\t\t\t&#123;&#123; page &#125;&#125;\n\t\t&lt;&#x2F;button&gt;\n\n\t\t&lt;button v-show&#x3D;&quot;startNumAndEndNum.end &lt; totalPage - 1&quot;&gt;...&lt;&#x2F;button&gt;\n\t\t&lt;button\n\t\t\tv-if&#x3D;&quot;startNumAndEndNum.end &lt; totalPage&quot;\n\t\t\t@click&#x3D;&quot;$emit(&#39;getPageNo&#39;, totalPage)&quot;\n\t\t&gt;\n\t\t\t&#123;&#123; totalPage &#125;&#125;\n\t\t&lt;&#x2F;button&gt;\n\t\t&lt;button\n\t\t\t:disabled&#x3D;&quot;pageNo &#x3D;&#x3D;&#x3D; totalPage&quot;\n\t\t\t@click&#x3D;&quot;$emit(&#39;getPageNo&#39;, pageNo + 1)&quot;\n\t\t&gt;\n\t\t\t下一页\n\t\t&lt;&#x2F;button&gt;\n\t\t&lt;button style&#x3D;&quot;margin-left: 30px&quot;&gt;共&#123;&#123; total &#125;&#125;条&lt;&#x2F;button&gt;\n\t&lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nexport default &#123;\n\tname: &#39;Pagination&#39;,\n\tprops: [&#39;pageNo&#39;, &#39;pageSize&#39;, &#39;total&#39;, &#39;continues&#39;],\n\tcomputed: &#123;\n\t\t&#x2F;&#x2F;  总共有多少页\n\t\ttotalPage() &#123;\n\t\t\t&#x2F;&#x2F; 向上取整\n\t\t\treturn Math.ceil(this.total &#x2F; this.pageSize)\n\t\t&#125;,\n\t\t&#x2F;&#x2F;  计算出连续的页码的起始数字与结束数字(连续的页码数字：至少是5)\n\t\tstartNumAndEndNum() &#123;\n\t\t\tconst &#123; pageNo, continues, totalPage &#125; &#x3D; this\n\t\t\t&#x2F;&#x2F;  先定义两个变量存储起始数字与结束数字\n\t\t\tlet start &#x3D; 0,\n\t\t\t\tend &#x3D; 0\n\t\t\t&#x2F;&#x2F; 先判断连续页码至少五页，如果不够五页，总页数没有连续的页码多\n\t\t\tif (continues &gt; totalPage) &#123;\n\t\t\t\tstart &#x3D; 1\n\t\t\t\tend &#x3D; totalPage\n\t\t\t&#125; else &#123;\n\t\t\t\t&#x2F;&#x2F;  连续的页码5，但是我们的总页数一定是大于5页的\n\t\t\t\t&#x2F;&#x2F; 起始数字\n\t\t\t\tstart &#x3D; pageNo - parseInt(continues &#x2F; 2)\n\t\t\t\t&#x2F;&#x2F; 结束数字\n\t\t\t\tend &#x3D; pageNo + parseInt(continues &#x2F; 2)\n\t\t\t\t&#x2F;&#x2F;  start 出现0还有负数，我们需要纠正\n\t\t\t\tif (start &lt; 1) &#123;\n\t\t\t\t\tstart &#x3D; 1\n\t\t\t\t\tend &#x3D; continues\n\t\t\t\t&#125;\n\t\t\t\t&#x2F;&#x2F;  end 数字大于总页码了\n\t\t\t\tif (end &gt; totalPage) &#123;\n\t\t\t\t\tend &#x3D; totalPage\n\t\t\t\t\tstart &#x3D; totalPage - continues + 1\n\t\t\t\t&#125;\n\t\t\t&#125;\n\t\t\treturn &#123; start, end &#125;\n\t\t&#125;,\n\t&#125;,\n&#125;\n&lt;&#x2F;script&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"开发商品详情页面\"><a href=\"#开发商品详情页面\" class=\"headerlink\" title=\"开发商品详情页面\"></a>开发商品详情页面</h3><ol>\n<li>静态组件（详情页组件）</li>\n<li>发请求</li>\n<li>vuex</li>\n<li>动态展示组件</li>\n</ol>\n<p>首先增加 <code>Detail</code> 组件的路由，并且跳转到商品详情页的时候是需要带上产品的<code>Id</code>，配置路由的时候需要占位</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// router.js</span>\n<span class=\"token punctuation\">&#123;</span>\n <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/detail:skuid\"</span><span class=\"token punctuation\">,</span>\n <span class=\"token literal-property property\">component</span><span class=\"token operator\">:</span> Detail<span class=\"token punctuation\">,</span>\n <span class=\"token literal-property property\">meta</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">isShow</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"VueRouter滚动行为\"><a href=\"#VueRouter滚动行为\" class=\"headerlink\" title=\"VueRouter滚动行为\"></a><code>VueRouter</code>滚动行为</h4><p>使用前端路由，当切换到新路由时，想要页面滚到顶部，或者是保持原先的滚动位置，就像重新加载页面那样。 <code>vue-router</code> 能做到，而且更好，它让你可以自定义路由切换时页面如何滚动。</p>\n<p><strong>注意: 这个功能只在支持 <code>history.pushState</code> 的浏览器中可用。</strong></p>\n<p><code>scrollBehavior</code> 方法与 <code>routes </code>平级放在一起：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">VueRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">//配置路由</span>\n\t<span class=\"token comment\">//第一:路径的前面需要有/(不是二级路由)</span>\n\t<span class=\"token comment\">//路径中单词都是小写的</span>\n\t<span class=\"token comment\">//component右侧V别给我加单引号【字符串：组件是对象（VueComponent类的实例）】</span>\n\troutes<span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">scrollBehavior</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">to<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">,</span> savedPosition</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token comment\">// return 期望滚动到哪个的位置 y=0 代表的滚动条在最上方</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>写请求接口<code>API</code></strong></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 获取产品详情的接口 URL: /api/item/&#123;skuId&#125; 请求方式 get</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">reqGoodsInfo</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">skuId</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n\t<span class=\"token function\">requests</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/item/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>skuId<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'get'</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong><code>Vuex</code> 获取产品详情信息</strong></p>\n<p><code>Vuex</code>中新增一个模块 <code>detail</code>，然后在 <code>Detail</code> 组件中<code>mounted</code>挂载时获取产品数据详情</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> reqGoodsInfo <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@/api'</span>\n\n<span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token literal-property property\">goodInfo</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">const</span> mutations <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token constant\">GETGOODINFO</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> goodInfo</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tstate<span class=\"token punctuation\">.</span>goodInfo <span class=\"token operator\">=</span> goodInfo\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">const</span> actions <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">// 获取产品信息的action</span>\n\t<span class=\"token keyword\">async</span> <span class=\"token function\">getGoodInfo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">&#123;</span> commit <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> skuId</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">reqGoodsInfo</span><span class=\"token punctuation\">(</span>skuId<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>code <span class=\"token operator\">===</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'GETGOODINFO'</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">const</span> getters <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n\tstate<span class=\"token punctuation\">,</span>\n\tmutations<span class=\"token punctuation\">,</span>\n\tactions<span class=\"token punctuation\">,</span>\n\tgetters<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>我们使用<code>getters</code>简化数据给组件使用的时候，数据可能不存在。比如 <code>state.goodInfo</code> 初始状态空对象，空对象的<code>categoryView</code>属性值<code>undefined</code><br>当前计算出的 <code>categoryView</code> 属性值至少是一个空对象，报错就不会有了。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> getters <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">categoryView</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token comment\">// 比如 state.goodInfo 初始状态空对象，空对象的categoryView属性值undefined</span>\n\t\t<span class=\"token comment\">// 当前计算出的 categoryView 属性值至少是一个空对象,报错就不会有了</span>\n\t\t<span class=\"token keyword\">return</span> state<span class=\"token punctuation\">.</span>goodInfo<span class=\"token punctuation\">.</span>categoryView <span class=\"token operator\">||</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"总结-2\"><a href=\"#总结-2\" class=\"headerlink\" title=\"总结\"></a>总结</h4><p><strong>封装分页器原理</strong></p>\n<ul>\n<li>知道当前是第几页：<code>pageNo</code></li>\n<li>知道分页数据一共有多少条：<code>total</code></li>\n<li>知道每一页需要展示数据的个数：<code>pageSize</code> 同时计算出 — <code>totalPage</code></li>\n<li>连续的页码数：<code>5|7</code>奇数比较对称</li>\n<li>最终要的还是分解出连续的页码的起始数字与结束数字</li>\n</ul>\n<p>连续的页码数 — <code>5</code> （暗含条件是分页器至少五页）</p>\n<p><code>start</code>等于当前页码<code>-2</code>，<code>end</code>是当前页码<code>+2</code>特殊情况也要考虑，<code>pageNo</code>是<code>1</code>的话那么连续的页码就会变成<code>-1 0 1 2 3</code>，这样不行。</p>\n<p><strong>项目当中控制台</strong></p>\n<p><code>vue-warn</code>：警告（不影响的你程序），对于你的代码提出一个警告。</p>\n<p>对于程序没有任何影响，俗称假报错。</p>\n<h4 id=\"Zoom-放大镜显示数据\"><a href=\"#Zoom-放大镜显示数据\" class=\"headerlink\" title=\"Zoom 放大镜显示数据\"></a>Zoom 放大镜显示数据</h4><p>父组件<code>detail</code>给子组件<code>zoom</code>传递数据， 但是服务器的数据有可能没有回来，<code>skuInfo</code>这个对象是一个空对象，会导致控制台报错</p>\n<p><img src=\"/../images/VueShop/image-20220621175414274.png\" alt=\"image-20220621175414274\"></p>\n<p><img src=\"/../images/VueShop/image-20220621175132296.png\" alt=\"image-20220621175132296\"></p>\n<p>如果是空对象重新计算给它一个默认值为一个空数组。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//  给子组件的数据</span>\n<span class=\"token function\">skuImageList</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>skuInfo<span class=\"token punctuation\">.</span>skuImageList <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>同时子组件 Zoom 中也需要重新计算，数组的第 0 项也可是个空对象</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n\t&lt;div class&#x3D;&quot;spec-preview&quot;&gt;\n\t\t&lt;img :src&#x3D;&quot;imgObj.imgUrl&quot; alt&#x3D;&quot;&quot; &#x2F;&gt;\n\t\t&lt;div class&#x3D;&quot;event&quot;&gt;&lt;&#x2F;div&gt;\n\t\t&lt;div class&#x3D;&quot;big&quot;&gt;\n\t\t\t&lt;img :src&#x3D;&quot;imgObj.imgUrl&quot; alt&#x3D;&quot;&quot; &#x2F;&gt;\n\t\t&lt;&#x2F;div&gt;\n\t\t&lt;div class&#x3D;&quot;mask&quot;&gt;&lt;&#x2F;div&gt;\n\t&lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token literal-property property\">computed</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">imgObj</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>skuImageList<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"数据解释—售卖属性\"><a href=\"#数据解释—售卖属性\" class=\"headerlink\" title=\"数据解释—售卖属性\"></a>数据解释—售卖属性</h3><pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">[</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token property\">\"attr\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"颜色\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"attrValue\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"粉色\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"天蓝色\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"红色\"</span><span class=\"token punctuation\">]</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token property\">\"attr\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"版本\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"attrValue\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"16\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"29\"</span><span class=\"token punctuation\">]</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>点击谁谁亮 — 排他，知道当前有几个数据点击的是谁，点击的是售卖属性的值 <code>dd</code></p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dd</span>\n\t<span class=\"token attr-name\">changepirce</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span>\n\t<span class=\"token attr-name\">:class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;active:spuSaleAttrValue.isChecked === <span class=\"token punctuation\">'</span>1<span class=\"token punctuation\">'</span>&#125;<span class=\"token punctuation\">\"</span></span>\n\t<span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>(spuSaleAttrValue,index) in spuSaleAttr.spuSaleAttrValueList<span class=\"token punctuation\">\"</span></span>\n\t<span class=\"token attr-name\">:key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>spuSaleAttrValue.id<span class=\"token punctuation\">\"</span></span>\n\t<span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeActive(spuSaleAttrValue,spuSaleAttr.spuSaleAttrValueList)<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">></span></span>\n\t&#123;&#123; spuSaleAttrValue.saleAttrValueName &#125;&#125;\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dd</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 产品的售卖属性值切换高亮</span>\n   <span class=\"token function\">changeActive</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">saleAttrValue<span class=\"token punctuation\">,</span> arr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n     <span class=\"token comment\">// 遍历全部售卖属性值isChecked为0没有高亮了</span>\n     arr<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n       item<span class=\"token punctuation\">.</span>isChecked <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n     <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n     <span class=\"token comment\">//  点击的那个售卖属性值高亮</span>\n     saleAttrValue<span class=\"token punctuation\">.</span>isChecked <span class=\"token operator\">=</span> <span class=\"token string\">'1'</span>\n   <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"放大镜操作\"><a href=\"#放大镜操作\" class=\"headerlink\" title=\"放大镜操作\"></a>放大镜操作</h3><p><img src=\"/../images/VueShop/image-20220623175629422.png\" alt=\"image-20220623175629422\"></p>\n<p>设置商品详情页图片下面的轮播图。</p>\n<p>通过事件总线的方式点击下方轮播图切换产品图片。</p>\n<p><strong><code>ImageList.vue</code></strong></p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n\t&lt;div class&#x3D;&quot;swiper-container&quot; ref&#x3D;&quot;cur&quot;&gt;\n\t\t&lt;div class&#x3D;&quot;swiper-wrapper&quot;&gt;\n\t\t\t&lt;div\n\t\t\t\tclass&#x3D;&quot;swiper-slide&quot;\n\t\t\t\tv-for&#x3D;&quot;(slide, index) in skuImageList&quot;\n\t\t\t\t:key&#x3D;&quot;slide.id&quot;\n\t\t\t&gt;\n\t\t\t\t&lt;img\n\t\t\t\t\t:src&#x3D;&quot;slide.imgUrl&quot;\n\t\t\t\t\t:class&#x3D;&quot;&#123; active: currentIndex &#x3D;&#x3D;&#x3D; index &#125;&quot;\n\t\t\t\t\t@click&#x3D;&quot;changeCurrentIndex(index)&quot;\n\t\t\t\t&#x2F;&gt;\n\t\t\t&lt;&#x2F;div&gt;\n\t\t&lt;&#x2F;div&gt;\n\t\t&lt;div class&#x3D;&quot;swiper-button-next&quot;&gt;&lt;&#x2F;div&gt;\n\t\t&lt;div class&#x3D;&quot;swiper-button-prev&quot;&gt;&lt;&#x2F;div&gt;\n\t&lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nimport Swiper from &#39;swiper&#39;\n\nexport default &#123;\n\tname: &#39;ImageList&#39;,\n\tdata() &#123;\n\t\treturn &#123;\n\t\t\tcurrentIndex: 0,\n\t\t&#125;\n\t&#125;,\n\tprops: [&#39;skuImageList&#39;],\n\twatch: &#123;\n\t\t&#x2F;&#x2F; 监听数据可以保证数据一定是ok的，但是不能保证v-for遍历结构是否完事\n\t\tskuImageList() &#123;\n\t\t\tthis.$nextTick(() &#x3D;&gt; &#123;\n\t\t\t\tnew Swiper(this.$refs.cur, &#123;\n\t\t\t\t\t&#x2F;&#x2F; 如果需要前进后退按钮\n\t\t\t\t\tnavigation: &#123;\n\t\t\t\t\t\tnextEl: &#39;.swiper-button-next&#39;,\n\t\t\t\t\t\tprevEl: &#39;.swiper-button-prev&#39;,\n\t\t\t\t\t&#125;,\n\t\t\t\t\t&#x2F;&#x2F;  显示几个图片的设置\n\t\t\t\t\tslidesPerView: 3,\n\t\t\t\t&#125;)\n\t\t\t&#125;)\n\t\t&#125;,\n\t&#125;,\n\tmethods: &#123;\n\t\tchangeCurrentIndex(index) &#123;\n\t\t\t&#x2F;&#x2F; 修改响应式数据\n\t\t\tthis.currentIndex &#x3D; index\n\t\t\t&#x2F;&#x2F;  通知Zoom当前索引值为几\n\t\t\tthis.$bus.$emit(&#39;getIndex&#39;, this.currentIndex)\n\t\t&#125;,\n\t&#125;,\n&#125;\n&lt;&#x2F;script&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong><code>Zoom.vue</code></strong></p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n\t&lt;div class&#x3D;&quot;spec-preview&quot;&gt;\n\t\t&lt;img :src&#x3D;&quot;imgObj.imgUrl&quot; alt&#x3D;&quot;&quot; &#x2F;&gt;\n\t\t&lt;div class&#x3D;&quot;event&quot; @mousemove&#x3D;&quot;handler&quot;&gt;&lt;&#x2F;div&gt;\n\t\t&lt;div class&#x3D;&quot;big&quot;&gt;\n\t\t\t&lt;img :src&#x3D;&quot;imgObj.imgUrl&quot; alt&#x3D;&quot;&quot; ref&#x3D;&quot;big&quot; &#x2F;&gt;\n\t\t&lt;&#x2F;div&gt;\n\t\t&lt;div class&#x3D;&quot;mask&quot; ref&#x3D;&quot;mask&quot;&gt;&lt;&#x2F;div&gt;\n\t&lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nexport default &#123;\n\tname: &#39;Zoom&#39;,\n\tdata() &#123;\n\t\treturn &#123;\n\t\t\tcurrentIndex: 0,\n\t\t&#125;\n\t&#125;,\n\tprops: [&#39;skuImageList&#39;],\n\tcomputed: &#123;\n\t\timgObj() &#123;\n\t\t\treturn this.skuImageList[this.currentIndex] || &#123;&#125;\n\t\t&#125;,\n\t&#125;,\n\tmounted() &#123;\n\t\t&#x2F;&#x2F; 全局事件总线获取兄弟组件传递过来的索引值\n\t\tthis.$bus.$on(&#39;getIndex&#39;, (index) &#x3D;&gt; &#123;\n\t\t\t&#x2F;&#x2F; 当拿到兄弟给的index后修改当前的currentIndex\n\t\t\tthis.currentIndex &#x3D; index\n\t\t&#125;)\n\t&#125;,\n\tmethods: &#123;\n\t\thandler(event) &#123;\n\t\t\tlet mask &#x3D; this.$refs.mask\n\t\t\tlet big &#x3D; this.$refs.big\n\t\t\tlet left &#x3D; event.offsetX - mask.offsetWidth &#x2F; 2\n\t\t\tlet top &#x3D; event.offsetY - mask.offsetHeight &#x2F; 2\n\t\t\t&#x2F;&#x2F; 约束范围\n\t\t\tif (left &lt;&#x3D; 0) left &#x3D; 0\n\t\t\tif (left &gt;&#x3D; mask.offsetWidth) left &#x3D; mask.offsetWidth\n\t\t\tif (top &lt;&#x3D; 0) top &#x3D; 0\n\t\t\tif (top &gt;&#x3D; mask.offsetHeight) top &#x3D; mask.offsetHeight\n\t\t\t&#x2F;&#x2F;  修改元素的left|top属性值\n\t\t\tmask.style.left &#x3D; left + &#39;px&#39;\n\t\t\tmask.style.top &#x3D; top + &#39;px&#39;\n\t\t\tbig.style.left &#x3D; -2 * left + &#39;px&#39;\n\t\t\tbig.style.top &#x3D; -2 * top + &#39;px&#39;\n\t\t&#125;,\n\t&#125;,\n&#125;\n&lt;&#x2F;script&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"/../images/VueShop/image-20220625150806722.png\" alt=\"image-20220625150806722\"></p>\n<p>加购物车前的用户输入表单操作，要判断用户输入的是不是正常的数字，既不能小于 1 也不能有小数点。</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;div class&#x3D;&quot;controls&quot;&gt;\n  &lt;input autocomplete&#x3D;&quot;off&quot; class&#x3D;&quot;itxt&quot; v-model&#x3D;&quot;skuNum&quot; @change&#x3D;&quot;changeSkuNum&quot;&#x2F;&gt;\n  &lt;a href&#x3D;&quot;javascript:&quot; class&#x3D;&quot;plus&quot; @click&#x3D;&quot;skuNum++&quot;&gt;+&lt;&#x2F;a&gt;\n  &lt;a href&#x3D;&quot;javascript:&quot; class&#x3D;&quot;mins&quot; @click&#x3D;&quot;skuNum&gt;1?skuNum--:skuNum&#x3D;1&quot;&gt;-&lt;&#x2F;a&gt;\n&lt;&#x2F;div&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function\">changeSkuNum</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 用户输入进来的文本 * 1</span>\n  <span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value <span class=\"token operator\">*</span> <span class=\"token number\">1</span>\n  <span class=\"token comment\">// 如果用户输入进来的非法，出现NaN或者小于1</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> value <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>skuNum <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 正常大于1，大于1整数不能出现小数</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>skuNum <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"加购物车\"><a href=\"#加购物车\" class=\"headerlink\" title=\"加购物车\"></a>加购物车</h3><ol>\n<li>发送请求，将当前产品告诉服务器买的是什么买了多少个</li>\n<li>服务器存储成功之后进行路由器的跳转，跳转到商品已成功加入购物车页面</li>\n<li>跳转的时候一些产品信息如产品标题和数量通过<code>query</code>参数传递过去</li>\n</ol>\n<h3 id=\"新增-API-接口\"><a href=\"#新增-API-接口\" class=\"headerlink\" title=\"新增 API 接口\"></a>新增 API 接口</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 将产品添加到购物车中，或者更新某一个产品的个数</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">reqAddOrUpdateShopCart</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">skuId<span class=\"token punctuation\">,</span> skuNum</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n\t<span class=\"token function\">requests</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/cart/addToCart/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>skuId<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>skuNum<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'post'</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>在<code>store</code>中的<code>detail.js</code>文件增加<code>action</code>回调</strong></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 加入购物车的或者修改某一个产品的个数</span>\n<span class=\"token keyword\">async</span> <span class=\"token function\">addOrUpdateShopCart</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">&#123;</span>commit<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>skuid<span class=\"token punctuation\">,</span>skuNum<span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 发请求:前端带一些参数给服务器，需要存储这些数据，存储成功了，没有返回数据，这里不需要仓库存储数据了</span>\n    <span class=\"token comment\">// 注意：async 函数执行返回的结构一定是一个promise，要么成功要么失败</span>\n\t<span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">reqAddOrUpdateShopCart</span><span class=\"token punctuation\">(</span>skuid<span class=\"token punctuation\">,</span>skuNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>reuslt<span class=\"token punctuation\">.</span>code<span class=\"token operator\">===</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 返回的是成功的标记</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'ok'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 返回的是失败的标记</span>\n        <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fail'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>在<code>Detail.vue</code> 组件中派发<code>action</code></strong></p>\n<p>这里我们需要在路由跳转的时候还需要将产品的信息带给下一级的路由组件，通过路由传递 <code>skuInfo</code> 对象参数的方式太丑了，地址栏很长，所以使用浏览器的存储。</p>\n<p>浏览器存储功能：<code>HTML5</code>中新增的，本地存储和会话存储</p>\n<p>本地存储：持久化的，最多存储<code>5M</code></p>\n<p>会话存储：不是持久的，窗口（会话）关闭数据就消失</p>\n<p>不管是本地存储还是会话存储，一般存储的都是字符串，不能存一个对象，所以我们需要把对象变成一个字符串去存储。</p>\n<p>产品信息（<code>skuInfo</code>）的数据比较复杂，所以选择通过会话储存的方式存在浏览器中，它不会持久化，这样用户频繁操作的时候不会存太多无用的信息。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function\">addShopCart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 1.再点击加入购物车按钮的时候，第一件事情就是将参数带给服务器（发请求），通知服务器加入购物车的产品是什么</span>\n    \t<span class=\"token comment\">// this.$store.dispatch('detail/addOrUpdateShopCart')... 这行代码实际上是在调用 vuex 中的addOrUpdateShopCart</span>\n        <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'detail/addOrUpdateShopCart'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token literal-property property\">skuId</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>skuid<span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">skuNum</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>skuNum\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">//  路由跳转</span>\n        sessionStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SKUINFO'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>skuInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'addcartsuccess'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">query</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">skuNum</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>skuNum<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token comment\">// 2.需要知道这次请求成功还是失败，如果成功进行路由跳转，如果失败，需要给用户提示</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>在<code>AddCartSuccess</code>组件中用 <code>sessionStorage</code> 中的数据的时候先通过计算属性简化：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token literal-property property\">computed</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">skuInfo</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>sessionStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SKUINFO'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"增加购物车组件-ShopCart-vue\"><a href=\"#增加购物车组件-ShopCart-vue\" class=\"headerlink\" title=\"增加购物车组件 ShopCart.vue\"></a>增加购物车组件 <code>ShopCart.vue</code></h4><pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n\t&lt;div class&#x3D;&quot;cart&quot;&gt;\n\t\t&lt;h4&gt;全部商品&lt;&#x2F;h4&gt;\n\t\t&lt;div class&#x3D;&quot;cart-main&quot;&gt;\n\t\t\t&lt;div class&#x3D;&quot;cart-th&quot;&gt;\n\t\t\t\t&lt;div class&#x3D;&quot;cart-th1&quot;&gt;全部&lt;&#x2F;div&gt;\n\t\t\t\t&lt;div class&#x3D;&quot;cart-th2&quot;&gt;商品&lt;&#x2F;div&gt;\n\t\t\t\t&lt;div class&#x3D;&quot;cart-th3&quot;&gt;单价（元）&lt;&#x2F;div&gt;\n\t\t\t\t&lt;div class&#x3D;&quot;cart-th4&quot;&gt;数量&lt;&#x2F;div&gt;\n\t\t\t\t&lt;div class&#x3D;&quot;cart-th5&quot;&gt;小计（元）&lt;&#x2F;div&gt;\n\t\t\t\t&lt;div class&#x3D;&quot;cart-th6&quot;&gt;操作&lt;&#x2F;div&gt;\n\t\t\t&lt;&#x2F;div&gt;\n\t\t\t&lt;div class&#x3D;&quot;cart-body&quot;&gt;\n\t\t\t\t&lt;ul class&#x3D;&quot;cart-list&quot;&gt;\n\t\t\t\t\t&lt;li class&#x3D;&quot;cart-list-con1&quot;&gt;\n\t\t\t\t\t\t&lt;input type&#x3D;&quot;checkbox&quot; name&#x3D;&quot;chk_list&quot; &#x2F;&gt;\n\t\t\t\t\t&lt;&#x2F;li&gt;\n\t\t\t\t\t&lt;li class&#x3D;&quot;cart-list-con2&quot;&gt;\n\t\t\t\t\t\t&lt;img src&#x3D;&quot;.&#x2F;images&#x2F;goods1.png&quot; &#x2F;&gt;\n\t\t\t\t\t\t&lt;div class&#x3D;&quot;item-msg&quot;&gt;\n\t\t\t\t\t\t\t米家（MIJIA） 小米小白智能摄像机增强版\n\t\t\t\t\t\t\t1080p高清360度全景拍摄AI增强\n\t\t\t\t\t\t&lt;&#x2F;div&gt;\n\t\t\t\t\t&lt;&#x2F;li&gt;\n\n\t\t\t\t\t&lt;li class&#x3D;&quot;cart-list-con4&quot;&gt;\n\t\t\t\t\t\t&lt;span class&#x3D;&quot;price&quot;&gt;399.00&lt;&#x2F;span&gt;\n\t\t\t\t\t&lt;&#x2F;li&gt;\n\t\t\t\t\t&lt;li class&#x3D;&quot;cart-list-con5&quot;&gt;\n\t\t\t\t\t\t&lt;a href&#x3D;&quot;javascript:void(0)&quot; class&#x3D;&quot;mins&quot;&gt;-&lt;&#x2F;a&gt;\n\t\t\t\t\t\t&lt;input\n\t\t\t\t\t\t\tautocomplete&#x3D;&quot;off&quot;\n\t\t\t\t\t\t\ttype&#x3D;&quot;text&quot;\n\t\t\t\t\t\t\tvalue&#x3D;&quot;1&quot;\n\t\t\t\t\t\t\tminnum&#x3D;&quot;1&quot;\n\t\t\t\t\t\t\tclass&#x3D;&quot;itxt&quot;\n\t\t\t\t\t\t&#x2F;&gt;\n\t\t\t\t\t\t&lt;a href&#x3D;&quot;javascript:void(0)&quot; class&#x3D;&quot;plus&quot;&gt;+&lt;&#x2F;a&gt;\n\t\t\t\t\t&lt;&#x2F;li&gt;\n\t\t\t\t\t&lt;li class&#x3D;&quot;cart-list-con6&quot;&gt;\n\t\t\t\t\t\t&lt;span class&#x3D;&quot;sum&quot;&gt;399&lt;&#x2F;span&gt;\n\t\t\t\t\t&lt;&#x2F;li&gt;\n\t\t\t\t\t&lt;li class&#x3D;&quot;cart-list-con7&quot;&gt;\n\t\t\t\t\t\t&lt;a href&#x3D;&quot;#none&quot; class&#x3D;&quot;sindelet&quot;&gt;删除&lt;&#x2F;a&gt;\n\t\t\t\t\t\t&lt;br &#x2F;&gt;\n\t\t\t\t\t\t&lt;a href&#x3D;&quot;#none&quot;&gt;移到收藏&lt;&#x2F;a&gt;\n\t\t\t\t\t&lt;&#x2F;li&gt;\n\t\t\t\t&lt;&#x2F;ul&gt;\n\n\t\t\t\t&lt;ul class&#x3D;&quot;cart-list&quot;&gt;\n\t\t\t\t\t&lt;li class&#x3D;&quot;cart-list-con1&quot;&gt;\n\t\t\t\t\t\t&lt;input type&#x3D;&quot;checkbox&quot; name&#x3D;&quot;chk_list&quot; id&#x3D;&quot;&quot; value&#x3D;&quot;&quot; &#x2F;&gt;\n\t\t\t\t\t&lt;&#x2F;li&gt;\n\t\t\t\t\t&lt;li class&#x3D;&quot;cart-list-con2&quot;&gt;\n\t\t\t\t\t\t&lt;img src&#x3D;&quot;.&#x2F;images&#x2F;goods2.png&quot; &#x2F;&gt;\n\t\t\t\t\t\t&lt;div class&#x3D;&quot;item-msg&quot;&gt;\n\t\t\t\t\t\t\t华为（MIJIA） 华为metaPRO 30 浴霸4摄像 超清晰\n\t\t\t\t\t\t&lt;&#x2F;div&gt;\n\t\t\t\t\t&lt;&#x2F;li&gt;\n\n\t\t\t\t\t&lt;li class&#x3D;&quot;cart-list-con4&quot;&gt;\n\t\t\t\t\t\t&lt;span class&#x3D;&quot;price&quot;&gt;5622.00&lt;&#x2F;span&gt;\n\t\t\t\t\t&lt;&#x2F;li&gt;\n\t\t\t\t\t&lt;li class&#x3D;&quot;cart-list-con5&quot;&gt;\n\t\t\t\t\t\t&lt;a href&#x3D;&quot;javascript:void(0)&quot; class&#x3D;&quot;mins&quot;&gt;-&lt;&#x2F;a&gt;\n\t\t\t\t\t\t&lt;input\n\t\t\t\t\t\t\tautocomplete&#x3D;&quot;off&quot;\n\t\t\t\t\t\t\ttype&#x3D;&quot;text&quot;\n\t\t\t\t\t\t\tvalue&#x3D;&quot;1&quot;\n\t\t\t\t\t\t\tminnum&#x3D;&quot;1&quot;\n\t\t\t\t\t\t\tclass&#x3D;&quot;itxt&quot;\n\t\t\t\t\t\t&#x2F;&gt;\n\t\t\t\t\t\t&lt;a href&#x3D;&quot;javascript:void(0)&quot; class&#x3D;&quot;plus&quot;&gt;+&lt;&#x2F;a&gt;\n\t\t\t\t\t&lt;&#x2F;li&gt;\n\t\t\t\t\t&lt;li class&#x3D;&quot;cart-list-con6&quot;&gt;\n\t\t\t\t\t\t&lt;span class&#x3D;&quot;sum&quot;&gt;5622&lt;&#x2F;span&gt;\n\t\t\t\t\t&lt;&#x2F;li&gt;\n\t\t\t\t\t&lt;li class&#x3D;&quot;cart-list-con7&quot;&gt;\n\t\t\t\t\t\t&lt;a href&#x3D;&quot;#none&quot; class&#x3D;&quot;sindelet&quot;&gt;删除&lt;&#x2F;a&gt;\n\t\t\t\t\t\t&lt;br &#x2F;&gt;\n\t\t\t\t\t\t&lt;a href&#x3D;&quot;#none&quot;&gt;移到收藏&lt;&#x2F;a&gt;\n\t\t\t\t\t&lt;&#x2F;li&gt;\n\t\t\t\t&lt;&#x2F;ul&gt;\n\n\t\t\t\t&lt;ul class&#x3D;&quot;cart-list&quot;&gt;\n\t\t\t\t\t&lt;li class&#x3D;&quot;cart-list-con1&quot;&gt;\n\t\t\t\t\t\t&lt;input type&#x3D;&quot;checkbox&quot; name&#x3D;&quot;chk_list&quot; id&#x3D;&quot;&quot; value&#x3D;&quot;&quot; &#x2F;&gt;\n\t\t\t\t\t&lt;&#x2F;li&gt;\n\t\t\t\t\t&lt;li class&#x3D;&quot;cart-list-con2&quot;&gt;\n\t\t\t\t\t\t&lt;img src&#x3D;&quot;.&#x2F;images&#x2F;goods3.png&quot; &#x2F;&gt;\n\t\t\t\t\t\t&lt;div class&#x3D;&quot;item-msg&quot;&gt;\n\t\t\t\t\t\t\tiphone 11 max PRO 苹果四摄 超清晰 超费电 超及好用\n\t\t\t\t\t\t&lt;&#x2F;div&gt;\n\t\t\t\t\t&lt;&#x2F;li&gt;\n\n\t\t\t\t\t&lt;li class&#x3D;&quot;cart-list-con4&quot;&gt;\n\t\t\t\t\t\t&lt;span class&#x3D;&quot;price&quot;&gt;11399.00&lt;&#x2F;span&gt;\n\t\t\t\t\t&lt;&#x2F;li&gt;\n\t\t\t\t\t&lt;li class&#x3D;&quot;cart-list-con5&quot;&gt;\n\t\t\t\t\t\t&lt;a href&#x3D;&quot;javascript:void(0)&quot; class&#x3D;&quot;mins&quot;&gt;-&lt;&#x2F;a&gt;\n\t\t\t\t\t\t&lt;input\n\t\t\t\t\t\t\tautocomplete&#x3D;&quot;off&quot;\n\t\t\t\t\t\t\ttype&#x3D;&quot;text&quot;\n\t\t\t\t\t\t\tvalue&#x3D;&quot;1&quot;\n\t\t\t\t\t\t\tminnum&#x3D;&quot;1&quot;\n\t\t\t\t\t\t\tclass&#x3D;&quot;itxt&quot;\n\t\t\t\t\t\t&#x2F;&gt;\n\t\t\t\t\t\t&lt;a href&#x3D;&quot;javascript:void(0)&quot; class&#x3D;&quot;plus&quot;&gt;+&lt;&#x2F;a&gt;\n\t\t\t\t\t&lt;&#x2F;li&gt;\n\t\t\t\t\t&lt;li class&#x3D;&quot;cart-list-con6&quot;&gt;\n\t\t\t\t\t\t&lt;span class&#x3D;&quot;sum&quot;&gt;11399&lt;&#x2F;span&gt;\n\t\t\t\t\t&lt;&#x2F;li&gt;\n\t\t\t\t\t&lt;li class&#x3D;&quot;cart-list-con7&quot;&gt;\n\t\t\t\t\t\t&lt;a href&#x3D;&quot;#none&quot; class&#x3D;&quot;sindelet&quot;&gt;删除&lt;&#x2F;a&gt;\n\t\t\t\t\t\t&lt;br &#x2F;&gt;\n\t\t\t\t\t\t&lt;a href&#x3D;&quot;#none&quot;&gt;移到收藏&lt;&#x2F;a&gt;\n\t\t\t\t\t&lt;&#x2F;li&gt;\n\t\t\t\t&lt;&#x2F;ul&gt;\n\t\t\t&lt;&#x2F;div&gt;\n\t\t&lt;&#x2F;div&gt;\n\t\t&lt;div class&#x3D;&quot;cart-tool&quot;&gt;\n\t\t\t&lt;div class&#x3D;&quot;select-all&quot;&gt;\n\t\t\t\t&lt;input class&#x3D;&quot;chooseAll&quot; type&#x3D;&quot;checkbox&quot; &#x2F;&gt;\n\t\t\t\t&lt;span&gt;全选&lt;&#x2F;span&gt;\n\t\t\t&lt;&#x2F;div&gt;\n\t\t\t&lt;div class&#x3D;&quot;option&quot;&gt;\n\t\t\t\t&lt;a href&#x3D;&quot;#none&quot;&gt;删除选中的商品&lt;&#x2F;a&gt;\n\t\t\t\t&lt;a href&#x3D;&quot;#none&quot;&gt;移到我的关注&lt;&#x2F;a&gt;\n\t\t\t\t&lt;a href&#x3D;&quot;#none&quot;&gt;清除下柜商品&lt;&#x2F;a&gt;\n\t\t\t&lt;&#x2F;div&gt;\n\t\t\t&lt;div class&#x3D;&quot;money-box&quot;&gt;\n\t\t\t\t&lt;div class&#x3D;&quot;chosed&quot;&gt;已选择 &lt;span&gt;0&lt;&#x2F;span&gt;件商品&lt;&#x2F;div&gt;\n\t\t\t\t&lt;div class&#x3D;&quot;sumprice&quot;&gt;\n\t\t\t\t\t&lt;em&gt;总价（不含运费） ：&lt;&#x2F;em&gt;\n\t\t\t\t\t&lt;i class&#x3D;&quot;summoney&quot;&gt;0&lt;&#x2F;i&gt;\n\t\t\t\t&lt;&#x2F;div&gt;\n\t\t\t\t&lt;div class&#x3D;&quot;sumbtn&quot;&gt;\n\t\t\t\t\t&lt;a class&#x3D;&quot;sum-btn&quot; href&#x3D;&quot;###&quot; target&#x3D;&quot;_blank&quot;&gt;结算&lt;&#x2F;a&gt;\n\t\t\t\t&lt;&#x2F;div&gt;\n\t\t\t&lt;&#x2F;div&gt;\n\t\t&lt;&#x2F;div&gt;\n\t&lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nexport default &#123;\n\tname: &#39;ShopCart&#39;,\n&#125;\n&lt;&#x2F;script&gt;\n\n&lt;style lang&#x3D;&quot;less&quot; scoped&gt;\n.cart &#123;\n\twidth: 1200px;\n\tmargin: 0 auto;\n\n\th4 &#123;\n\t\tmargin: 9px 0;\n\t\tfont-size: 14px;\n\t\tline-height: 21px;\n\t&#125;\n\n\t.cart-main &#123;\n\t\t.cart-th &#123;\n\t\t\tbackground: #f5f5f5;\n\t\t\tborder: 1px solid #ddd;\n\t\t\tpadding: 10px;\n\t\t\toverflow: hidden;\n\n\t\t\t&amp; &gt; div &#123;\n\t\t\t\tfloat: left;\n\t\t\t&#125;\n\n\t\t\t.cart-th1 &#123;\n\t\t\t\twidth: 25%;\n\n\t\t\t\tinput &#123;\n\t\t\t\t\tvertical-align: middle;\n\t\t\t\t&#125;\n\n\t\t\t\tspan &#123;\n\t\t\t\t\tvertical-align: middle;\n\t\t\t\t&#125;\n\t\t\t&#125;\n\n\t\t\t.cart-th2 &#123;\n\t\t\t\twidth: 25%;\n\t\t\t&#125;\n\n\t\t\t.cart-th3,\n\t\t\t.cart-th4,\n\t\t\t.cart-th5,\n\t\t\t.cart-th6 &#123;\n\t\t\t\twidth: 12.5%;\n\t\t\t&#125;\n\t\t&#125;\n\n\t\t.cart-body &#123;\n\t\t\tmargin: 15px 0;\n\t\t\tborder: 1px solid #ddd;\n\n\t\t\t.cart-list &#123;\n\t\t\t\tpadding: 10px;\n\t\t\t\tborder-bottom: 1px solid #ddd;\n\t\t\t\toverflow: hidden;\n\n\t\t\t\t&amp; &gt; li &#123;\n\t\t\t\t\tfloat: left;\n\t\t\t\t&#125;\n\n\t\t\t\t.cart-list-con1 &#123;\n\t\t\t\t\twidth: 15%;\n\t\t\t\t&#125;\n\n\t\t\t\t.cart-list-con2 &#123;\n\t\t\t\t\twidth: 35%;\n\n\t\t\t\t\timg &#123;\n\t\t\t\t\t\twidth: 82px;\n\t\t\t\t\t\theight: 82px;\n\t\t\t\t\t\tfloat: left;\n\t\t\t\t\t&#125;\n\n\t\t\t\t\t.item-msg &#123;\n\t\t\t\t\t\tfloat: left;\n\t\t\t\t\t\twidth: 150px;\n\t\t\t\t\t\tmargin: 0 10px;\n\t\t\t\t\t\tline-height: 18px;\n\t\t\t\t\t&#125;\n\t\t\t\t&#125;\n\n\t\t\t\t.cart-list-con4 &#123;\n\t\t\t\t\twidth: 10%;\n\t\t\t\t&#125;\n\n\t\t\t\t.cart-list-con5 &#123;\n\t\t\t\t\twidth: 17%;\n\n\t\t\t\t\t.mins &#123;\n\t\t\t\t\t\tborder: 1px solid #ddd;\n\t\t\t\t\t\tborder-right: 0;\n\t\t\t\t\t\tfloat: left;\n\t\t\t\t\t\tcolor: #666;\n\t\t\t\t\t\twidth: 6px;\n\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\tpadding: 8px;\n\t\t\t\t\t&#125;\n\n\t\t\t\t\tinput &#123;\n\t\t\t\t\t\tborder: 1px solid #ddd;\n\t\t\t\t\t\twidth: 40px;\n\t\t\t\t\t\theight: 33px;\n\t\t\t\t\t\tfloat: left;\n\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\tfont-size: 14px;\n\t\t\t\t\t&#125;\n\n\t\t\t\t\t.plus &#123;\n\t\t\t\t\t\tborder: 1px solid #ddd;\n\t\t\t\t\t\tborder-left: 0;\n\t\t\t\t\t\tfloat: left;\n\t\t\t\t\t\tcolor: #666;\n\t\t\t\t\t\twidth: 6px;\n\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\tpadding: 8px;\n\t\t\t\t\t&#125;\n\t\t\t\t&#125;\n\n\t\t\t\t.cart-list-con6 &#123;\n\t\t\t\t\twidth: 10%;\n\n\t\t\t\t\t.sum &#123;\n\t\t\t\t\t\tfont-size: 16px;\n\t\t\t\t\t&#125;\n\t\t\t\t&#125;\n\n\t\t\t\t.cart-list-con7 &#123;\n\t\t\t\t\twidth: 13%;\n\n\t\t\t\t\ta &#123;\n\t\t\t\t\t\tcolor: #666;\n\t\t\t\t\t&#125;\n\t\t\t\t&#125;\n\t\t\t&#125;\n\t\t&#125;\n\t&#125;\n\n\t.cart-tool &#123;\n\t\toverflow: hidden;\n\t\tborder: 1px solid #ddd;\n\n\t\t.select-all &#123;\n\t\t\tpadding: 10px;\n\t\t\toverflow: hidden;\n\t\t\tfloat: left;\n\n\t\t\tspan &#123;\n\t\t\t\tvertical-align: middle;\n\t\t\t&#125;\n\n\t\t\tinput &#123;\n\t\t\t\tvertical-align: middle;\n\t\t\t&#125;\n\t\t&#125;\n\n\t\t.option &#123;\n\t\t\tpadding: 10px;\n\t\t\toverflow: hidden;\n\t\t\tfloat: left;\n\n\t\t\ta &#123;\n\t\t\t\tfloat: left;\n\t\t\t\tpadding: 0 10px;\n\t\t\t\tcolor: #666;\n\t\t\t&#125;\n\t\t&#125;\n\n\t\t.money-box &#123;\n\t\t\tfloat: right;\n\n\t\t\t.chosed &#123;\n\t\t\t\tline-height: 26px;\n\t\t\t\tfloat: left;\n\t\t\t\tpadding: 0 10px;\n\t\t\t&#125;\n\n\t\t\t.sumprice &#123;\n\t\t\t\twidth: 200px;\n\t\t\t\tline-height: 22px;\n\t\t\t\tfloat: left;\n\t\t\t\tpadding: 0 10px;\n\n\t\t\t\t.summoney &#123;\n\t\t\t\t\tcolor: #c81623;\n\t\t\t\t\tfont-size: 16px;\n\t\t\t\t&#125;\n\t\t\t&#125;\n\n\t\t\t.sumbtn &#123;\n\t\t\t\tfloat: right;\n\n\t\t\t\ta &#123;\n\t\t\t\t\tdisplay: block;\n\t\t\t\t\tposition: relative;\n\t\t\t\t\twidth: 96px;\n\t\t\t\t\theight: 52px;\n\t\t\t\t\tline-height: 52px;\n\t\t\t\t\tcolor: #fff;\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\tfont-size: 18px;\n\t\t\t\t\tfont-family: &#39;Microsoft YaHei&#39;;\n\t\t\t\t\tbackground: #e1251b;\n\t\t\t\t\toverflow: hidden;\n\t\t\t\t&#125;\n\t\t\t&#125;\n\t\t&#125;\n\t&#125;\n&#125;\n&lt;&#x2F;style&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"UUID游客身份获取购物车数据\"><a href=\"#UUID游客身份获取购物车数据\" class=\"headerlink\" title=\"UUID游客身份获取购物车数据\"></a><code>UUID</code>游客身份获取购物车数据</h3><p>增加 <code>API</code> 接口</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 获取购物车列表数据接口</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">reqCartList</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n\t<span class=\"token function\">requests</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'/cart/cartList'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'get'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>向服务器发起<code>ajax</code>请求<code>vuex</code> 获取数据</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> reqCartList <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@/api'</span>\n\n<span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">const</span> mutations <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">const</span> actions <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">// 获取购物车列表数据</span>\n\t<span class=\"token keyword\">async</span> <span class=\"token function\">getCartList</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">&#123;</span> commit <span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">reqCartList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">const</span> getters <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token literal-property property\">namespaced</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n\tstate<span class=\"token punctuation\">,</span>\n\tmutations<span class=\"token punctuation\">,</span>\n\tactions<span class=\"token punctuation\">,</span>\n\tgetters<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>通过组件展示数据，发请求的时候获取不到用户购物车里面的数据，因为服务器不知道当前用户是谁。</p>\n<p><code>detail</code>组件加入购物车的瞬间，告诉服务器<code>UUID</code></p>\n<p>新建 <code>utils</code> 文件夹，在文件夹内新建一个<code>uuid_token.js</code> 文件，提供随机生成<code>uuid</code>功能，且支持持久化存储</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> v4 <span class=\"token keyword\">as</span> uuidv4 <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'uuid'</span>\n\n<span class=\"token comment\">// 要生成一个随机字符串，且每次执行不能发生变化，游客身份持久存储</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getUUID</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">// 先从本地存储获取uuid，验证本地存储是否存在</span>\n\t<span class=\"token keyword\">let</span> uuid_token <span class=\"token operator\">=</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'UUIDTOKEN'</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// 如果没有，生成</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>uuid_token<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token comment\">// 生成游客临时身份</span>\n\t\tuuid_token <span class=\"token operator\">=</span> <span class=\"token function\">uuidv4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token comment\">// 本地存储一次</span>\n\t\tlocalStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'UUIDTOKEN'</span><span class=\"token punctuation\">,</span> uuid_token<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>在 <code>detail</code> 组件的仓库中新增游客临时身份字段</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> getUUID <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@/utils/uuid_token'</span>\n<span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token literal-property property\">goodInfo</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\">// 游客临时身份</span>\n\t<span class=\"token literal-property property\">uuid_token</span><span class=\"token operator\">:</span> <span class=\"token function\">getUUID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>通过在请求拦截器中给请求头添加一个字段的方式向后台传递参数</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> store <span class=\"token keyword\">from</span> <span class=\"token string\">'@/store'</span>\n<span class=\"token comment\">// 请求拦截器：在发请求之前，请求拦截器可以监测到，可以在请求发出去之前做一些事情</span>\nrequests<span class=\"token punctuation\">.</span>interceptors<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">config</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">//\tconfig是一个配置对象，对象里面有一个属性 headers 请求头很重要</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>store<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>detail<span class=\"token punctuation\">.</span>uuid_token<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token comment\">//\t请求头添加一个字段(userTempId)，需要和后台商量</span>\n\t\tconfig<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">.</span>userTempId <span class=\"token operator\">=</span> store<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>detail<span class=\"token punctuation\">.</span>uuid_token\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token comment\">// 进度条开始懂</span>\n\tnprogress<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">return</span> config\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>目前仓库中能获取当前用户的购物车数据了，接下来就是仓库存储，组件捞取数据动态展示，并且修改产品数量</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n\t&lt;div class&#x3D;&quot;cart&quot;&gt;\n\t\t&lt;h4&gt;全部商品&lt;&#x2F;h4&gt;\n\t\t&lt;div class&#x3D;&quot;cart-main&quot;&gt;\n\t\t\t&lt;div class&#x3D;&quot;cart-th&quot;&gt;\n\t\t\t\t&lt;div class&#x3D;&quot;cart-th1&quot;&gt;全部&lt;&#x2F;div&gt;\n\t\t\t\t&lt;div class&#x3D;&quot;cart-th2&quot;&gt;商品&lt;&#x2F;div&gt;\n\t\t\t\t&lt;div class&#x3D;&quot;cart-th3&quot;&gt;单价（元）&lt;&#x2F;div&gt;\n\t\t\t\t&lt;div class&#x3D;&quot;cart-th4&quot;&gt;数量&lt;&#x2F;div&gt;\n\t\t\t\t&lt;div class&#x3D;&quot;cart-th5&quot;&gt;小计（元）&lt;&#x2F;div&gt;\n\t\t\t\t&lt;div class&#x3D;&quot;cart-th6&quot;&gt;操作&lt;&#x2F;div&gt;\n\t\t\t&lt;&#x2F;div&gt;\n\t\t\t&lt;div class&#x3D;&quot;cart-body&quot;&gt;\n\t\t\t\t&lt;ul class&#x3D;&quot;cart-list&quot; v-for&#x3D;&quot;cart in cartInfoList&quot; :key&#x3D;&quot;cart.id&quot;&gt;\n\t\t\t\t\t&lt;li class&#x3D;&quot;cart-list-con1&quot;&gt;\n\t\t\t\t\t\t&lt;input\n\t\t\t\t\t\t\ttype&#x3D;&quot;checkbox&quot;\n\t\t\t\t\t\t\tname&#x3D;&quot;chk_list&quot;\n\t\t\t\t\t\t\t:checked&#x3D;&quot;cart.isChecked &#x3D;&#x3D;&#x3D; 1&quot;\n\t\t\t\t\t\t&#x2F;&gt;\n\t\t\t\t\t&lt;&#x2F;li&gt;\n\t\t\t\t\t&lt;li class&#x3D;&quot;cart-list-con2&quot;&gt;\n\t\t\t\t\t\t&lt;img :src&#x3D;&quot;cart.imgUrl&quot; &#x2F;&gt;\n\t\t\t\t\t\t&lt;div class&#x3D;&quot;item-msg&quot;&gt;&#123;&#123; cart.skuName &#125;&#125;&lt;&#x2F;div&gt;\n\t\t\t\t\t&lt;&#x2F;li&gt;\n\t\t\t\t\t&lt;li class&#x3D;&quot;cart-list-con4&quot;&gt;\n\t\t\t\t\t\t&lt;span class&#x3D;&quot;price&quot;&gt;&#123;&#123; cart.skuPrice &#125;&#125;.00&lt;&#x2F;span&gt;\n\t\t\t\t\t&lt;&#x2F;li&gt;\n\t\t\t\t\t&lt;li class&#x3D;&quot;cart-list-con5&quot;&gt;\n\t\t\t\t\t\t&lt;a\n\t\t\t\t\t\t\thref&#x3D;&quot;javascript:void(0)&quot;\n\t\t\t\t\t\t\tclass&#x3D;&quot;mins&quot;\n\t\t\t\t\t\t\t@click&#x3D;&quot;handler(&#39;minus&#39;, -1, cart)&quot;\n\t\t\t\t\t\t\t&gt;-&lt;&#x2F;a\n\t\t\t\t\t\t&gt;\n\t\t\t\t\t\t&lt;input\n\t\t\t\t\t\t\tautocomplete&#x3D;&quot;off&quot;\n\t\t\t\t\t\t\ttype&#x3D;&quot;text&quot;\n\t\t\t\t\t\t\tminnum&#x3D;&quot;1&quot;\n\t\t\t\t\t\t\tclass&#x3D;&quot;itxt&quot;\n\t\t\t\t\t\t\t:value&#x3D;&quot;cart.skuNum&quot;\n\t\t\t\t\t\t\t@change&#x3D;&quot;handler(&#39;change&#39;, $event.target.value * 1, cart)&quot;\n\t\t\t\t\t\t&#x2F;&gt;\n\t\t\t\t\t\t&lt;a\n\t\t\t\t\t\t\thref&#x3D;&quot;javascript:void(0)&quot;\n\t\t\t\t\t\t\tclass&#x3D;&quot;plus&quot;\n\t\t\t\t\t\t\t@click&#x3D;&quot;handler(&#39;add&#39;, 1, cart)&quot;\n\t\t\t\t\t\t\t&gt;+&lt;&#x2F;a\n\t\t\t\t\t\t&gt;\n\t\t\t\t\t&lt;&#x2F;li&gt;\n\t\t\t\t\t&lt;li class&#x3D;&quot;cart-list-con6&quot;&gt;\n\t\t\t\t\t\t&lt;span class&#x3D;&quot;sum&quot;&gt;&#123;&#123; cart.skuNum * cart.skuPrice &#125;&#125;&lt;&#x2F;span&gt;\n\t\t\t\t\t&lt;&#x2F;li&gt;\n\t\t\t\t\t&lt;li class&#x3D;&quot;cart-list-con7&quot;&gt;\n\t\t\t\t\t\t&lt;a class&#x3D;&quot;sindelet&quot; @click&#x3D;&quot;deleteCartById(cart)&quot;&gt;删除&lt;&#x2F;a&gt;\n\t\t\t\t\t\t&lt;br &#x2F;&gt;\n\t\t\t\t\t\t&lt;a href&#x3D;&quot;#none&quot;&gt;移到收藏&lt;&#x2F;a&gt;\n\t\t\t\t\t&lt;&#x2F;li&gt;\n\t\t\t\t&lt;&#x2F;ul&gt;\n\t\t\t&lt;&#x2F;div&gt;\n\t\t&lt;&#x2F;div&gt;\n\t\t&lt;div class&#x3D;&quot;cart-tool&quot;&gt;\n\t\t\t&lt;div class&#x3D;&quot;select-all&quot;&gt;\n\t\t\t\t&lt;input class&#x3D;&quot;chooseAll&quot; type&#x3D;&quot;checkbox&quot; :checked&#x3D;&quot;isAllCheck&quot; &#x2F;&gt;\n\t\t\t\t&lt;span&gt;全选&lt;&#x2F;span&gt;\n\t\t\t&lt;&#x2F;div&gt;\n\t\t\t&lt;div class&#x3D;&quot;option&quot;&gt;\n\t\t\t\t&lt;a href&#x3D;&quot;#none&quot;&gt;删除选中的商品&lt;&#x2F;a&gt;\n\t\t\t\t&lt;a href&#x3D;&quot;#none&quot;&gt;移到我的关注&lt;&#x2F;a&gt;\n\t\t\t\t&lt;a href&#x3D;&quot;#none&quot;&gt;清除下柜商品&lt;&#x2F;a&gt;\n\t\t\t&lt;&#x2F;div&gt;\n\t\t\t&lt;div class&#x3D;&quot;money-box&quot;&gt;\n\t\t\t\t&lt;div class&#x3D;&quot;chosed&quot;&gt;已选择 &lt;span&gt;0&lt;&#x2F;span&gt;件商品&lt;&#x2F;div&gt;\n\t\t\t\t&lt;div class&#x3D;&quot;sumprice&quot;&gt;\n\t\t\t\t\t&lt;em&gt;总价（不含运费） ：&lt;&#x2F;em&gt;\n\t\t\t\t\t&lt;i class&#x3D;&quot;summoney&quot;&gt;&#123;&#123; totalPrice &#125;&#125;&lt;&#x2F;i&gt;\n\t\t\t\t&lt;&#x2F;div&gt;\n\t\t\t\t&lt;div class&#x3D;&quot;sumbtn&quot;&gt;\n\t\t\t\t\t&lt;a class&#x3D;&quot;sum-btn&quot; href&#x3D;&quot;###&quot; target&#x3D;&quot;_blank&quot;&gt;结算&lt;&#x2F;a&gt;\n\t\t\t\t&lt;&#x2F;div&gt;\n\t\t\t&lt;&#x2F;div&gt;\n\t\t&lt;&#x2F;div&gt;\n\t&lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nimport &#123; mapGetters &#125; from &#39;vuex&#39;\n\nexport default &#123;\n\tname: &#39;ShopCart&#39;,\n\tmounted() &#123;\n\t\tthis.getData()\n\t&#125;,\n\tmethods: &#123;\n\t\t&#x2F;&#x2F;获取个人购物车数据\n\t\tgetData() &#123;\n\t\t\tthis.$store.dispatch(&#39;shopCart&#x2F;getCartList&#39;)\n\t\t&#125;,\n\t\t&#x2F;&#x2F;  修改某一个产品的个数\n\t\tasync handler(type, disNum, cart) &#123;\n\t\t\t&#x2F;&#x2F; type是为了区分这三个元素\n\t\t\t&#x2F;&#x2F; disNum形参： + 变化量（1） -变化量（-1） input 最终的个数并不是变化量\n\t\t\t&#x2F;&#x2F; cart代表是点击那个产品，身上有id\n\t\t\t&#x2F;&#x2F; 向服务器发请求，修改数量\n\t\t\tswitch (type) &#123;\n\t\t\t\tcase &#39;add&#39;:\n\t\t\t\t\tdisNum &#x3D; 1\n\t\t\t\t\tbreak\n\t\t\t\tcase &#39;minus&#39;:\n\t\t\t\t\t&#x2F;&#x2F; 判断产品的个数大于1，才能传递给服务器-1，如果出现产品数量&lt;等于1，传递给服务器个数0（原封不动）\n\t\t\t\t\tdisNum &#x3D; cart.skuNum &gt; 1 ? -1 : 0\n\t\t\t\t\tbreak\n\t\t\t\tcase &#39;change&#39;:\n\t\t\t\t\t&#x2F;&#x2F; 用户输入进来的最终量，如果非法的如带有汉字|出现负数，给服务器传0，用户输入正常数字（如有小数取整）然后用户输入的数 - 产品原始个数\n\t\t\t\t\tdisNum &#x3D;\n\t\t\t\t\t\tisNaN(disNum) || disNum &lt; 1 ? 0 : parseInt(disNum) - cart.skuNum\n\t\t\t\t\tbreak\n\t\t\t&#125;\n\t\t\ttry &#123;\n\t\t\t\t&#x2F;&#x2F; 修改成功\n\t\t\t\tawait this.$store.dispatch(&#39;detail&#x2F;addOrUpdateShopCart&#39;, &#123;\n\t\t\t\t\tskuId: cart.skuId,\n\t\t\t\t\tskuNum: disNum,\n\t\t\t\t&#125;)\n\t\t\t\t&#x2F;&#x2F; 再一次获取服务器最新的数据并展示\n\t\t\t\tthis.getData()\n\t\t\t&#125; catch (error) &#123;\n\t\t\t\tthrow new Error(&#39;fail&#39;)\n\t\t\t&#125;\n\t\t&#125;,\n\t&#125;,\n\tcomputed: &#123;\n\t\t...mapGetters(&#39;shopCart&#39;, [&#39;cartList&#39;]),\n\t\t&#x2F;&#x2F; 购物车数据\n\t\tcartInfoList() &#123;\n\t\t\treturn this.cartList.cartInfoList || []\n\t\t&#125;,\n\t\t&#x2F;&#x2F;  计算购买产品的总价\n\t\ttotalPrice() &#123;\n\t\t\tlet sum &#x3D; 0\n\t\t\tthis.cartInfoList.forEach((item) &#x3D;&gt; &#123;\n\t\t\t\tsum +&#x3D; item.skuNum * item.skuPrice\n\t\t\t&#125;)\n\t\t\treturn sum\n\t\t&#125;,\n\t\t&#x2F;&#x2F; 判断底部复选框是否勾选\n\t\tisAllCheck() &#123;\n\t\t\t&#x2F;&#x2F; 遍历数组中的元素，只要全部元素isChecked属性都为真 &#x3D;&#x3D;&#x3D; 真，只要有一个为false就都false\n\t\t\treturn this.cartInfoList.every((item) &#x3D;&gt; item.isChecked &#x3D;&#x3D;&#x3D; 1)\n\t\t&#125;,\n\t&#125;,\n&#125;\n&lt;&#x2F;script&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>删除某一产品</strong></p>\n<p>在删除产品之前，修改产品个数这里我们需要给函数节流，因为在用户快速操作的时候容易出现产品个数为<code>0</code>的情况。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> throttle <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash/throttle'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//  修改某一个产品的个数</span>\n<span class=\"token literal-property property\">handler</span><span class=\"token operator\">:</span> <span class=\"token function\">throttle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">type<span class=\"token punctuation\">,</span> disNum<span class=\"token punctuation\">,</span> cart</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// type是为了区分这三个元素</span>\n  <span class=\"token comment\">// disNum形参： + 变化量（1） -变化量（-1） input 最终的个数并不是变化量</span>\n  <span class=\"token comment\">// cart代表是点击那个产品，身上有id</span>\n  <span class=\"token comment\">// 向服务器发请求，修改数量</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'add'</span><span class=\"token operator\">:</span>\n      disNum <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'minus'</span><span class=\"token operator\">:</span>\n      <span class=\"token comment\">// 判断产品的个数大于1，才能传递给服务器-1，如果出现产品数量&lt;等于1，传递给服务器个数0（原封不动）</span>\n      disNum <span class=\"token operator\">=</span> cart<span class=\"token punctuation\">.</span>skuNum <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">?</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'change'</span><span class=\"token operator\">:</span>\n      <span class=\"token comment\">// 用户输入进来的最终量，如果非法的如带有汉字|出现负数，给服务器传0，用户输入正常数字（如有小数取整）然后用户输入的数 - 产品原始个数</span>\n      disNum <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span>disNum<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> disNum <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>disNum<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> cart<span class=\"token punctuation\">.</span>skuNum\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 修改成功</span>\n    <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'detail/addOrUpdateShopCart'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">skuId</span><span class=\"token operator\">:</span> cart<span class=\"token punctuation\">.</span>skuId<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">skuNum</span><span class=\"token operator\">:</span> disNum<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// 再一次获取服务器最新的数据并展示</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fail'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>请求接口地址 <code>/api/cart/deleteCart/&#123;skuId&#125;</code> ，请求方式 <code>DELETE</code></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 删除购物车产品的接口</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">reqDeleteCartById</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">skuId</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n\t<span class=\"token function\">requests</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/cart/deleteCart/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>skuId<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'delete'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p><code>shopCart.vue</code></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 删除某个产品</span>\n<span class=\"token keyword\">async</span> <span class=\"token function\">deleteCartById</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cart</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'shopCart/deleteCartListBySkuId'</span><span class=\"token punctuation\">,</span>cart<span class=\"token punctuation\">.</span>skuId<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>shopCart\\index.js</code></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//  删除购物车产品</span>\n <span class=\"token keyword\">async</span> <span class=\"token function\">deleteCartListBySkuId</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">&#123;</span>commit<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> skuId</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">reqDeleteCartById</span><span class=\"token punctuation\">(</span>skuId<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>code <span class=\"token operator\">===</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token keyword\">return</span> <span class=\"token string\">'ok'</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fail'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>修改产品状态</strong></p>\n<p>接口地址：<code>/api/cart/checkCart/&#123;skuId&#125;/&#123;isChecked&#125;</code>，请求方式<code>GET</code></p>\n<p><code>ischecked</code>参数，<code>0</code>代表取消，<code>1</code>代表选中</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 修改产品勾选状态</span>\n<span class=\"token function\">updateChecked</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cart<span class=\"token punctuation\">,</span> event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">let</span> isChecked <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>checked <span class=\"token operator\">?</span> <span class=\"token string\">'1'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'0'</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'shopCart/updateCheckedById'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">skuId</span><span class=\"token operator\">:</span> cart<span class=\"token punctuation\">.</span>skuId<span class=\"token punctuation\">,</span> isChecked<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>全选状态修改</strong></p>\n<p><code>shopCart.vue</code></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//修改全部产品的选中状态</span>\n<span class=\"token keyword\">async</span> <span class=\"token function\">updateAllCartChecked</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">let</span> isChecked <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>checked <span class=\"token operator\">?</span> <span class=\"token string\">\"1\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//派发action</span>\n    <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"shopCart/updateAllCartIsChecked\"</span><span class=\"token punctuation\">,</span> isChecked<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>store/hopCart/index.js</code></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//修改全部产品的状态</span>\n<span class=\"token function\">updateAllCartIsChecked</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">&#123;</span> dispatch<span class=\"token punctuation\">,</span> state <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> isChecked</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n <span class=\"token comment\">//数组</span>\n <span class=\"token keyword\">let</span> promiseAll <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n state<span class=\"token punctuation\">.</span>cartList<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>cartInfoList<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">let</span> promise <span class=\"token operator\">=</span> <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"updateCheckedById\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token literal-property property\">skuId</span><span class=\"token operator\">:</span> item<span class=\"token punctuation\">.</span>skuId<span class=\"token punctuation\">,</span>\n   isChecked<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  promiseAll<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>promise<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token comment\">//最终返回结果</span>\n <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span>promiseAll<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>删除选中的全部产品操作</strong></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注意： 没有一次删除多个产品的接口，但是有通过<code>ID</code>删除产品的接口一次删除一个</p></blockquote>\n<p><code>vuex</code> 中<code>store</code>仓库里的<code>actions</code>中写的<code>action</code>函数都有一个默认参数 <code>context</code> 小仓库，小仓库包含以下几个功能。</p>\n<ul>\n<li><code>commit</code> 提交<code>mutation</code>修改 <code>state</code></li>\n<li><code>getters</code> 计算属性</li>\n<li><code>dispatch</code> 派发 <code>action</code></li>\n<li><code>state</code> 当前仓库数据</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//store/shopCart/index.js 删除全部勾选的产品</span>\n<span class=\"token function\">deleteAllCheckedCart</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">&#123;</span>dispatch<span class=\"token punctuation\">,</span> getters<span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n <span class=\"token keyword\">let</span> PromiseAll <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n <span class=\"token comment\">// 获取购物车中全部的产品（一个数组）</span>\n getters<span class=\"token punctuation\">.</span>cartList<span class=\"token punctuation\">.</span>cartInfoList<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">let</span> promise <span class=\"token operator\">=</span> item<span class=\"token punctuation\">.</span>isChecked <span class=\"token operator\">===</span> <span class=\"token number\">1</span> <span class=\"token operator\">?</span> <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'deleteCartListBySkuId'</span><span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">.</span>skuId<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 将每一次返回的promise添加到数组中</span>\n  PromiseAll<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>promise<span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n <span class=\"token comment\">// p1,p2,p3...全部成功返回结果就是成功，只要有一个失败，则返回失败的结果</span>\n <span class=\"token keyword\">return</span> PromiseAll<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span>PromiseAll<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>shopCart.vue</code></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 删除全部选中的产品</span>\n<span class=\"token keyword\">async</span> <span class=\"token function\">deleteAllCheckedCart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'shopCart/deleteAllCheckedCart'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"登录与注册\"><a href=\"#登录与注册\" class=\"headerlink\" title=\"登录与注册\"></a>登录与注册</h2><p>引入登录与注册的静态组件</p>\n<p><img src=\"/../images/VueShop/image-20220628195037742.png\" alt=\"image-20220628195037742\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>在<code>CSS</code>中也可以使用<code>@</code>代替<code>src</code>，但是需要在前面加<code>~</code></p></blockquote>\n<p>注册业务|登录业务的表单验证留到最后处理。</p>\n<p>获取验证码接口 <code>/api/user/passport/sendCode/&#123;phone&#125;</code> ，请求方式<code>get</code>。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 获取验证码</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">reqGetCode</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">phone</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n\t<span class=\"token function\">requests</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/user/passport/sendCode/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>phone<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'get'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 注册</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">reqUserRegister</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n\t<span class=\"token function\">requests</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'/user/passport/register'</span><span class=\"token punctuation\">,</span>\n\t\tdata<span class=\"token punctuation\">,</span>\n\t\t<span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'post'</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"登录的接口\"><a href=\"#登录的接口\" class=\"headerlink\" title=\"登录的接口\"></a>登录的接口</h4><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//登录接口</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">reqUserLogin</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n\t<span class=\"token function\">requests</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'/user/passport/login'</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'post'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>登录的前提是先注册，通过数据库存储用户信息（名字&#x2F;密码）</p>\n<p>登录成功的时候，后台为了区分用户是谁，后台给前端传递了一个<code>token</code>令牌用户的唯一标识，前台需要持久化存储<code>token</code>，后面用户进行操作的时候前台要带着<code>token</code>去找服务器要数据。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注意：<code>Vuex</code>仓库存储的数据不是持久化的</p></blockquote>\n<p>当用户注册完成，用户通过用户名+密码登录向服务器发请求（组件派发<code>action:userLogin</code>），登录成功获取到<code>token</code>，存储在仓库中（非持久化），路由跳转到<code>Home</code>首页。</p>\n<p>然后在首页的<code>mounted</code>中再次发送请求<code>this.$store.dispatch(&#39;user/getUserInfo&#39;)</code>去获取用户信息，以及动态展示<code>header</code>组件内容</p>\n<p>目前这种存储在<code>vuex</code>中的数据，一刷新<code>token</code>就没了，也就拿不到用户信息了，所以需要持久化存储<code>token</code></p>\n<p><strong>存在的问题</strong></p>\n<ul>\n<li>每一个组件中都要获取到用户信息，需要在每一个组件的<code>mounted</code>中触发<code>this.$store.dispatch(&#39;user/getUserInfo&#39;)</code></li>\n<li>用户已经登录了，就不应该在跳转到登录页了</li>\n</ul>\n<h3 id=\"退出登录\"><a href=\"#退出登录\" class=\"headerlink\" title=\"退出登录\"></a>退出登录</h3><p><strong>退出登录需要做的事情</strong></p>\n<ul>\n<li>需要发请求，通知服务器退出登录，清除一些数据(<code>token</code>)</li>\n<li>清除项目中的数据 <code>userInfo/token</code></li>\n</ul>\n<p>接口 <code>/api/user/passport/logout</code>，<code>get</code>请求。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 退出登录</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">reqLogout</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n\t<span class=\"token function\">requests</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'/user/passport/logout'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'get'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"导航守卫\"><a href=\"#导航守卫\" class=\"headerlink\" title=\"导航守卫\"></a>导航守卫</h3><p>导航表示路由正在发生变化，进行路由跳转，守卫表示跳转时需要经过守卫确认。</p>\n<p>场景：当用户已经登录了，那么就不能在返回登录页面了。</p>\n<p>路由守卫分为：全局守卫、独享守卫、组件内守卫</p>\n<ul>\n<li>全局前置：只要路由发生变化，那么全局守卫就能监听到</li>\n<li>独享守卫：判断当前路由是否需要进行权限控制，针对单个路由</li>\n<li>组件内守卫：通过路由规则，进入该组件时被调用</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> store <span class=\"token keyword\">from</span> <span class=\"token string\">'@/store'</span>\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">to<span class=\"token punctuation\">,</span>from<span class=\"token punctuation\">,</span>next</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">// to:获取到要跳转的路由信息</span>\n\t<span class=\"token comment\">// from: 获取到要从那个路由跳转过来的信息</span>\n\t<span class=\"token comment\">// next: next() 放行  next(path)放行</span>\n\t<span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">// 获取仓库中的token，确定用户是登录了</span>\n\t<span class=\"token keyword\">let</span> token <span class=\"token operator\">=</span> store<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>token\n    <span class=\"token keyword\">let</span> name <span class=\"token operator\">=</span> store<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>userInfo<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">// 用户登录了</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 已经登录了，还想去login页面</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">.</span>path<span class=\"token operator\">===</span><span class=\"token string\">'/login'</span> <span class=\"token operator\">&amp;&amp;</span> to<span class=\"token punctuation\">.</span>path<span class=\"token operator\">===</span><span class=\"token string\">'/register'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// 已经登录了并且有用户信息，访问其他页面</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>nama<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">// 登陆了但是木有用户信息，在跳转之前获取用户信息</span>\n               <span class=\"token keyword\">try</span><span class=\"token punctuation\">&#123;</span>\n                   <span class=\"token keyword\">await</span> store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'getUserInfo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                   <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n               <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                   <span class=\"token comment\">// token失效重新登录</span>\n                   <span class=\"token keyword\">await</span> store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'userLogout'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                   <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/login'</span><span class=\"token punctuation\">)</span>\n               <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token comment\">// 用户未登录</span>\n        <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"结算功能\"><a href=\"#结算功能\" class=\"headerlink\" title=\"结算功能\"></a>结算功能</h3><p>获取用户地址信息 <code>/api/user/userAddress/auth/findUserAddressList</code>，<code>get</code>请求</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">reqGetAddressInfo</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n\t<span class=\"token function\">requests</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'/user/userAddress/auth/findUserAddressList'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'get'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>获取交易页面的用户信息，一定要先登录，用户登录了才可以获取地址信息。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>统一登录的账号 13700000000 111111</p></blockquote>\n<p>购物车商品清单地址 <code>api/order/auth/trade</code> ，<code>get</code>请求</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getOrderInfo</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n\t<span class=\"token function\">requests</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'/order/auth/trade'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'get'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><strong>提交订单</strong></p>\n<p>先完成支付静态组件，点击提交订单按钮的时候，还需要向服务器发起一次请求，把支付的一些信息传递给服务器</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 提交订单的接口</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">reqSubmitOrder</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">tradeNo<span class=\"token punctuation\">,</span> data</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n\t<span class=\"token function\">requests</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/order/auth/submitOrder?tradeNo=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>tradeNo<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n\t\tdata<span class=\"token punctuation\">,</span>\n\t\t<span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'post'</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>不使用<code>Vuex</code>的方式发送请求</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 统一接收api文件夹中全部的函数</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> <span class=\"token constant\">API</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@/api'</span>\n\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">h</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\">// 全局事件总线配置</span>\n\t<span class=\"token function\">beforeCreate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token class-name\">Vue</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>$bus <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span>\n\t\t<span class=\"token class-name\">Vue</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>$<span class=\"token constant\">API</span> <span class=\"token operator\">=</span> <span class=\"token constant\">API</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\">//需要把router进行注册</span>\n\t<span class=\"token comment\">//可以让全部的组件（非路由|路由组件）都可以获取到$route|$router属性</span>\n\t<span class=\"token comment\">//$route(路由)：可以获取到路由信息（path、query、params）</span>\n\t<span class=\"token comment\">//$router:进行编程式导航路由跳转push||replace</span>\n\trouter<span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\">// 注册仓库：组件实例身上会多一个属性$store</span>\n\tstore<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">$mount</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 提交订单的接口</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">reqSubmitOrder</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">tradeNo<span class=\"token punctuation\">,</span> data</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n\t<span class=\"token function\">requests</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/order/auth/submitOrder?tradeNo=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>tradeNo<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n\t\tdata<span class=\"token punctuation\">,</span>\n\t\t<span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'post'</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 获取支付信息</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">reqPayInfo</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">orderId</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n\t<span class=\"token function\">requests</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/payment/weixin/createNative/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>orderId<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'get'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//提交订单</span>\n<span class=\"token keyword\">async</span> <span class=\"token function\">submitOrder</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">//交易编码</span>\n  <span class=\"token keyword\">let</span> <span class=\"token punctuation\">&#123;</span>tradeNo<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>orderInfo<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">//其余的六个参数</span>\n  <span class=\"token keyword\">let</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">consignee</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>userDefaultAddress<span class=\"token punctuation\">.</span>consignee<span class=\"token punctuation\">,</span> <span class=\"token comment\">//最终收件人的名字</span>\n    <span class=\"token literal-property property\">consigneeTel</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>userDefaultAddress<span class=\"token punctuation\">.</span>phoneNum<span class=\"token punctuation\">,</span> <span class=\"token comment\">//最终收件人的手机号</span>\n    <span class=\"token literal-property property\">deliveryAddress</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>userDefaultAddress<span class=\"token punctuation\">.</span>fullAddress<span class=\"token punctuation\">,</span> <span class=\"token comment\">//收件人的地址</span>\n    <span class=\"token literal-property property\">paymentWay</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ONLINE\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//支付方式</span>\n    <span class=\"token literal-property property\">orderComment</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>msg<span class=\"token punctuation\">,</span> <span class=\"token comment\">//买家的留言信息</span>\n    <span class=\"token literal-property property\">orderDetailList</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>orderInfo<span class=\"token punctuation\">.</span>detailArrayList<span class=\"token punctuation\">,</span> <span class=\"token comment\">//商品清单</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">//需要带参数的：tradeNo</span>\n  <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$<span class=\"token constant\">API</span><span class=\"token punctuation\">.</span><span class=\"token function\">reqSubmitOrder</span><span class=\"token punctuation\">(</span>tradeNo<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">//提交订单成功</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>code <span class=\"token operator\">===</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>orderId <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//路由跳转 + 路由传递参数</span>\n    <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/pay?orderId='</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>orderId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//提交的订单失败</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>不能在生命周期函数的前面加 <code>async|await</code></p>\n<p><strong>安装 <code>Element UI</code></strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save element-ui@^2.15.5\n<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> element-ui@^2.15.5 --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><strong>安装按需加载组件的插件</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i babel-plugin-component -D\n<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> babel-plugin-component -D<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>再修改<code>babel.config.js</code>配置文件，并重启项目</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token literal-property property\">presets</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'@vue/cli-plugin-babel/preset'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\t\t<span class=\"token punctuation\">[</span>\n\t\t\t<span class=\"token string\">'component'</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token literal-property property\">libraryName</span><span class=\"token operator\">:</span> <span class=\"token string\">'element-ui'</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token literal-property property\">styleLibraryName</span><span class=\"token operator\">:</span> <span class=\"token string\">'theme-chalk'</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"QRCode-生成二维码\"><a href=\"#QRCode-生成二维码\" class=\"headerlink\" title=\"QRCode 生成二维码\"></a><code>QRCode</code> 生成二维码</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i qrcode --save\n<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> qrcode --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><code>ES6</code>用法</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">async</span> <span class=\"token function\">open</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 生成二维码 传入字符产返回图片地址</span>\n  <span class=\"token keyword\">let</span> url <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> QRCode<span class=\"token punctuation\">.</span><span class=\"token function\">toDataURL</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>payInfo<span class=\"token punctuation\">.</span>codeUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$alert</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;img src=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>url<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">\" alt=\"收款码\"/></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'使用微信支付'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">dangerouslyUseHTMLString</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">center</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">showCancelButton</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">cancelButtonText</span><span class=\"token operator\">:</span> <span class=\"token string\">'支付失败'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">confirmButtonText</span><span class=\"token operator\">:</span> <span class=\"token string\">'已支付成功'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">//右上角的x</span>\n    <span class=\"token literal-property property\">showClose</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// 后面还需要知道支付成功还是失败</span>\n  <span class=\"token comment\">//  支付成功，路由跳转，如果支付失败，提示信息</span>\n  <span class=\"token comment\">//  没有定时器,要开启一个新的定时器</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timer <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">//  发请求获取用户支付状态</span>\n      <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$<span class=\"token constant\">API</span><span class=\"token punctuation\">.</span><span class=\"token function\">reqPayStatus</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>orderId<span class=\"token punctuation\">)</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>code <span class=\"token operator\">===</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//清除定时器</span>\n        <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timer<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timer <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span>\n        <span class=\"token comment\">//  保存支付成功的code</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>code <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>code\n        <span class=\"token comment\">//  关闭遮罩层</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$msgbox<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">//  跳转到支付成功路由</span>\n        <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/paysuccess'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 获取支付订单状态</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">reqPayStatus</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">orderId</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n\t<span class=\"token function\">requests</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/payment/weixin/queryPayStatus/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>orderId<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'get'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"个人中心搭建二级路由\"><a href=\"#个人中心搭建二级路由\" class=\"headerlink\" title=\"个人中心搭建二级路由\"></a>个人中心搭建二级路由</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// routes.js</span>\n<span class=\"token punctuation\">&#123;</span>\n <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">'/center'</span><span class=\"token punctuation\">,</span>\n <span class=\"token literal-property property\">component</span><span class=\"token operator\">:</span> Center<span class=\"token punctuation\">,</span>\n <span class=\"token literal-property property\">meta</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">isShow</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n <span class=\"token comment\">// 二级路由组件</span>\n <span class=\"token literal-property property\">children</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">'myorder'</span><span class=\"token punctuation\">,</span>\n   <span class=\"token literal-property property\">component</span><span class=\"token operator\">:</span>myOrder\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">'grouporder'</span><span class=\"token punctuation\">,</span>\n   <span class=\"token literal-property property\">component</span><span class=\"token operator\">:</span>groupOrder\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span><span class=\"token string\">'/center'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">redirect</span><span class=\"token operator\">:</span><span class=\"token string\">'/center/myorder'</span>\n   <span class=\"token punctuation\">&#125;</span>\n <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;dd&gt;\n  &lt;router-link to&#x3D;&quot;&#x2F;center&#x2F;myorder&quot;&gt;我的订单&lt;&#x2F;router-link&gt;\n&lt;&#x2F;dd&gt;\n&lt;dd&gt;\n  &lt;router-link to&#x3D;&quot;&#x2F;center&#x2F;grouporder&quot;&gt;团购订单&lt;&#x2F;router-link&gt;\n&lt;&#x2F;dd&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;!-- 右侧内容 --&gt;\n&lt;!-- 路由组件出口的位置 --&gt;\n&lt;router-view&gt;\n  &lt;my-order&#x2F;&gt;\n  &lt;group-order&#x2F;&gt;\n&lt;&#x2F;router-view&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 获取个人中心的数据</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">reqOrderCenter</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">page<span class=\"token punctuation\">,</span> limit</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n\t<span class=\"token function\">requests</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/order/auth/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>page<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>limit<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'get'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>全局守卫</strong></p>\n<p>未登录访问：交易相关（<code>trade</code>）支付相关（<code>pay/paysuccess</code>）用户中心（<code>center</code>）相关跳转到登录页面</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 全局前置守卫（在路由跳转之前进行判断）</span>\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">to<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">//  to:可以获取到你跳转的路由信息</span>\n\t<span class=\"token comment\">// from:可以获取到你从那个路由而来的信息</span>\n\t<span class=\"token comment\">// next:放行函数 next()放行 next(path)放行到指定路由 next(false)</span>\n\t<span class=\"token comment\">// next()</span>\n\t<span class=\"token keyword\">let</span> token <span class=\"token operator\">=</span> store<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>token\n\t<span class=\"token keyword\">let</span> name <span class=\"token operator\">=</span> store<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>userInfo<span class=\"token punctuation\">.</span>name\n\t<span class=\"token comment\">// 用户是否登录</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">.</span>path <span class=\"token operator\">===</span> <span class=\"token string\">'/login'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/home'</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token comment\">// 没有用户信息 获取用户信息在首页展示</span>\n\t\t\t\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t<span class=\"token keyword\">await</span> store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'user/getUserInfo'</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t<span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t<span class=\"token comment\">// token失效 清除token</span>\n\t\t\t\t\t<span class=\"token keyword\">await</span> store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'user/userLogout'</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t<span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/login'</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token comment\">// 未登录不能去交易相关的页面 --- 应该去登录页</span>\n\t\t<span class=\"token keyword\">let</span> toPath <span class=\"token operator\">=</span> to<span class=\"token punctuation\">.</span>path\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n\t\t\ttoPath<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/trade'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">||</span>\n\t\t\ttoPath<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/pay'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">||</span>\n\t\t\ttoPath<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/center'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n\t\t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token comment\">// 把未登录的时候要去的地方但是被拦截的地址存放在url中</span>\n\t\t\t<span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/login?redirect='</span> <span class=\"token operator\">+</span> toPath<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token comment\">// 去的不是交易相关路由 --- 放行</span>\n\t\t\t<span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 登录的回调函数</span>\n<span class=\"token keyword\">async</span> <span class=\"token function\">userLogin</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span>phone<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">(</span>phone <span class=\"token operator\">&amp;&amp;</span> password<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'user/userLogin'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>phone<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//  登录的路由组件,看路由中是否包含query参数,有:调到query参数指定路由,没有:跳到home</span>\n    <span class=\"token keyword\">let</span> toPath <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>redirect <span class=\"token operator\">||</span> <span class=\"token string\">'/home'</span>\n    <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>toPath<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"路由独享守卫\"><a href=\"#路由独享守卫\" class=\"headerlink\" title=\"路由独享守卫\"></a>路由独享守卫</h3><ul>\n<li>只有从购物车界面才能跳转到交易页面（创建订单）</li>\n<li>唯有从交易页面（创建订单）才能跳转到支付页面</li>\n<li>从支付页面才能跳转到支付成功页面</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//  路由独享守卫</span>\n<span class=\"token function\">beforeEnter</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">to<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n <span class=\"token comment\">// 去交易页面必须是从购物车页面去</span>\n <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>from<span class=\"token punctuation\">.</span>path <span class=\"token operator\">===</span> <span class=\"token string\">'/shopcart'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 其它路由组件直接输url过去，停留在当前页面</span>\n  <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>组件内守卫</strong></p>\n<ul>\n<li>在渲染该组件对于的路由被 confirm 之前调用</li>\n<li>不能获取组件实力 this，因为当守卫执行前，组件实例还没有被创建</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">\nbeforeRouteEnter (to, from, next) &#123;\n\n  if (from.path &#x3D;&#x3D;&#x3D; &#39;&#x2F;pay&#39;) &#123;\n    next()\n  &#125; else &#123;\n    next(false)\n  &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"图片懒加载\"><a href=\"#图片懒加载\" class=\"headerlink\" title=\"图片懒加载\"></a>图片懒加载</h3><p><a href=\"https://github.com/hilongjw/vue-lazyload#readme\">https://github.com/hilongjw/vue-lazyload#readme</a></p>\n<p>安装 <code>vue-lazyload</code></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> i vue-lazyload@^1.3.3 -S\n$ <span class=\"token function\">yarn</span> <span class=\"token function\">add</span> vue-lazyload@^1.3.3<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>注册插件</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> atm <span class=\"token keyword\">from</span> <span class=\"token string\">'@/assets/1.gif'</span>\n<span class=\"token comment\">//引入插件</span>\n<span class=\"token keyword\">import</span> VueLazyload <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-lazyload'</span>\n<span class=\"token comment\">//注册插件</span>\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>VueLazyload<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">//懒加载默认的图片</span>\n\t<span class=\"token literal-property property\">loading</span><span class=\"token operator\">:</span> atm<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>在组件中使用</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;!-- 路由跳转的时候需要带上参数 params --&gt;\n&lt;router-link :to&#x3D;&quot;&#96;&#x2F;detail&#x2F;$&#123;good.id&#125;&#96;&quot; target&#x3D;&quot;_blank&quot;&gt;\n  &lt;img v-lazy&#x3D;&quot;good.defaultImg&quot; alt&#x3D;&quot;&quot;&#x2F;&gt;\n&lt;&#x2F;router-link&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>自定义插件</strong></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Vue插件一定是对外暴露一个对象</span>\n<span class=\"token keyword\">let</span> myPlugins <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\nmyPlugins<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">install</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">Vue<span class=\"token punctuation\">,</span> options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">// Vue.prototype.$bus:任何组件都能用</span>\n\t<span class=\"token comment\">// Vue。directive() Vue.component 全局指令任何人都能用</span>\n\tVue<span class=\"token punctuation\">.</span><span class=\"token function\">directive</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">element<span class=\"token punctuation\">,</span> params</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">)</span>\n\t\telement<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> params<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> myPlugins<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>注册自定插件</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 引入自定义插件</span>\n<span class=\"token keyword\">import</span> myPlugins <span class=\"token keyword\">from</span> <span class=\"token string\">'@/plugins/myPlugins'</span>\n\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>myPlugins<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'upper'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>使用</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">v-upper</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>msg<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"vee-validate-表单验证应用\"><a href=\"#vee-validate-表单验证应用\" class=\"headerlink\" title=\"vee-validate 表单验证应用\"></a><code>vee-validate</code> 表单验证应用</h3><p><strong>安装</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># Install with yarn</span>\n<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> vee-validate@^2.2.15\n\n<span class=\"token comment\"># Install with npm</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> vee-validate@^2.2.15 --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>validate.js</code></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// vee-validate 表达验证插件</span>\n<span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n<span class=\"token keyword\">import</span> VeeValidate <span class=\"token keyword\">from</span> <span class=\"token string\">'vee-validate'</span>\n<span class=\"token comment\">// 中文提示信息</span>\n<span class=\"token keyword\">import</span> zh_CN <span class=\"token keyword\">from</span> <span class=\"token string\">'vee-validate/dist/locale/zh_CN'</span>\n\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>VeeValidate<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\nVeeValidate<span class=\"token punctuation\">.</span>Validator<span class=\"token punctuation\">.</span><span class=\"token function\">localize</span><span class=\"token punctuation\">(</span><span class=\"token string\">'zh_CN'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token literal-property property\">messages</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token operator\">...</span>zh_CN<span class=\"token punctuation\">.</span>messages<span class=\"token punctuation\">,</span>\n\t\t<span class=\"token function-variable function\">is</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">field</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>field<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">必须与密码相同</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 修改内置规则的 message，让确认密码和密码相同</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token literal-property property\">attributes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token comment\">// 给校验的 field 属性名映射中文名称</span>\n\t\t<span class=\"token literal-property property\">phone</span><span class=\"token operator\">:</span> <span class=\"token string\">'手机号'</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span> <span class=\"token string\">'验证码'</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token literal-property property\">password</span><span class=\"token operator\">:</span> <span class=\"token string\">'密码'</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token literal-property property\">confirmPassword</span><span class=\"token operator\">:</span> <span class=\"token string\">'确认密码'</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token literal-property property\">isCheck</span><span class=\"token operator\">:</span> <span class=\"token string\">'协议'</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">//自定义校验规则</span>\n<span class=\"token comment\">//定义协议必须打勾同意</span>\nVeeValidate<span class=\"token punctuation\">.</span>Validator<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token string\">'agree'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function-variable function\">validate</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">return</span> value\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token function-variable function\">getMessage</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">field</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> field <span class=\"token operator\">+</span> <span class=\"token string\">'必须同意'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>使用</strong></p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;div class&#x3D;&quot;content&quot;&gt;\n  &lt;label&gt;手机号:&lt;&#x2F;label&gt;\n  &lt;input placeholder&#x3D;&quot;请输入你的手机号&quot; v-model&#x3D;&quot;phone&quot; name&#x3D;&quot;phone&quot; v-validate&#x3D;&quot;&#123; required: true, regex: &#x2F;^1\\d&#123;10&#125;$&#x2F; &#125;&quot;\n         :class&#x3D;&quot;&#123; invalid: errors.has(&#39;phone&#39;) &#125;&quot;&#x2F;&gt;\n  &lt;span class&#x3D;&quot;error-msg&quot;&gt;&#123;&#123; errors.first(&quot;phone&quot;) &#125;&#125;&lt;&#x2F;span&gt;\n&lt;&#x2F;div&gt;\n&lt;div class&#x3D;&quot;content&quot;&gt;\n  &lt;label&gt;验证码:&lt;&#x2F;label&gt;\n  &lt;input placeholder&#x3D;&quot;请输入你的验证码&quot; v-model&#x3D;&quot;code&quot; name&#x3D;&quot;code&quot; v-validate&#x3D;&quot;&#123; required: true, regex: &#x2F;^\\d&#123;6&#125;$&#x2F; &#125;&quot;\n         :class&#x3D;&quot;&#123; invalid: errors.has(&#39;code&#39;) &#125;&quot;&#x2F;&gt;\n  &lt;button style&#x3D;&quot;width: 100px;height: 38px;margin-left: 10px;&quot; @click&#x3D;&quot;getCode&quot;&gt;获取验证码&lt;&#x2F;button&gt;\n  &lt;span class&#x3D;&quot;error-msg&quot;&gt;&#123;&#123; errors.first(&quot;code&quot;) &#125;&#125;&lt;&#x2F;span&gt;\n&lt;&#x2F;div&gt;\n&lt;div class&#x3D;&quot;content&quot;&gt;\n  &lt;label&gt;登录密码:&lt;&#x2F;label&gt;\n  &lt;input placeholder&#x3D;&quot;请输入你的密码&quot; v-model&#x3D;&quot;password&quot; name&#x3D;&quot;password&quot;\n         v-validate&#x3D;&quot;&#123; required: true, regex: &#x2F;^[\\dA-Za-z]&#123;8,20&#125;$&#x2F; &#125;&quot;\n         :class&#x3D;&quot;&#123; invalid: errors.has(&#39;password&#39;) &#125;&quot;&#x2F;&gt;\n  &lt;span class&#x3D;&quot;error-msg&quot;&gt;&#123;&#123; errors.first(&quot;password&quot;) &#125;&#125;&lt;&#x2F;span&gt;\n&lt;&#x2F;div&gt;\n&lt;div class&#x3D;&quot;content&quot;&gt;\n  &lt;label&gt;确认密码:&lt;&#x2F;label&gt;\n  &lt;input placeholder&#x3D;&quot;请输入确认密码&quot; v-model&#x3D;&quot;confirmPassword&quot; name&#x3D;&quot;confirmPassword&quot;\n         v-validate&#x3D;&quot;&#123; required: true, is:password &#125;&quot;\n         :class&#x3D;&quot;&#123; invalid: errors.has(&#39;confirmPassword&#39;) &#125;&quot;&#x2F;&gt;\n  &lt;span class&#x3D;&quot;error-msg&quot;&gt;&#123;&#123; errors.first(&quot;confirmPassword&quot;) &#125;&#125;&lt;&#x2F;span&gt;\n&lt;&#x2F;div&gt;\n&lt;div class&#x3D;&quot;controls&quot;&gt;\n  &lt;input type&#x3D;&quot;checkbox&quot; placeholder&#x3D;&quot;请输入确认密码&quot; v-model&#x3D;&quot;agree&quot; name&#x3D;&quot;agree&quot;\n         v-validate&#x3D;&quot;&#123; required: true, agree:true &#125;&quot;\n         :class&#x3D;&quot;&#123; invalid: errors.has(&#39;agree&#39;) &#125;&quot;&#x2F;&gt;\n  &lt;span&gt;同意协议并注册《尚品汇用户协议》&lt;&#x2F;span&gt;\n  &lt;span class&#x3D;&quot;error-msg&quot;&gt;&#123;&#123; errors.first(&quot;agree&quot;) &#125;&#125;&lt;&#x2F;span&gt;\n&lt;&#x2F;div&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">async</span> <span class=\"token function\">userRegister</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> success <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$validator<span class=\"token punctuation\">.</span><span class=\"token function\">validateAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 全部表单验证成功在向服务器发请求</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>success<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span>phone<span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">,</span> confirmPassword<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>phone <span class=\"token operator\">&amp;&amp;</span> code <span class=\"token operator\">&amp;&amp;</span> password <span class=\"token operator\">===</span> confirmPassword<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'user/userRegister'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>phone<span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/login'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"路由懒加载\"><a href=\"#路由懒加载\" class=\"headerlink\" title=\"路由懒加载\"></a>路由懒加载</h3><p>当打包构建应用的时候，JavaScript 有时候会很大，影响页面加载。</p>\n<p>可以将不同路由对于的组件部分分割成不同的代码块，然后当路由被访问的时候才加载对于组件，这样会更加高效。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">&#123;</span>\n <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">'/home'</span><span class=\"token punctuation\">,</span>\n <span class=\"token function-variable function\">component</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"@/pages/Home\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n <span class=\"token comment\">//路由元信息key不能瞎写：只能叫做meta</span>\n <span class=\"token literal-property property\">meta</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">isShow</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#123;</span>\n <span class=\"token comment\">//下面这种写法：代表的是params参数可以传递|当然也可以不传递  ?(正则:两次代表出现次数0|1)</span>\n <span class=\"token comment\">//切记?带上，因为项目当中params参数就可以传递|不传递也可以</span>\n <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">'/search/:keyword?'</span><span class=\"token punctuation\">,</span>\n <span class=\"token function-variable function\">component</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"@/pages/Search\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n <span class=\"token literal-property property\">meta</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">isShow</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n <span class=\"token comment\">// 命名路由</span>\n <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'search'</span><span class=\"token punctuation\">,</span>\n <span class=\"token comment\">//路由是可以给组件传递props的</span>\n <span class=\"token comment\">//函数的写法才是重要的</span>\n <span class=\"token function-variable function\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">route</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">keyword</span><span class=\"token operator\">:</span> route<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>keyword<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">big</span><span class=\"token operator\">:</span> route<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>big<span class=\"token punctuation\">,</span>\n <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"处理-map-文件\"><a href=\"#处理-map-文件\" class=\"headerlink\" title=\"处理 map 文件\"></a>处理 <code>map</code> 文件</h3><p>打包 <code>npm run build</code>，打包后目录。</p>\n<p><img src=\"/../images/VueShop/image-20220702212202483.png\" alt=\"image-20220702212202483\"></p>\n<p>项目打包后，代码都是经过压缩加密的，如果运行时报错，输出的错误无法准确得知是哪里的代码报错</p>\n<p>打包后的<code>js</code>文件夹中有<code>map</code>文件，主要用于上线后<code>map</code>可以像未加密的代码一样，准确输出是哪一行那一列有错，但是它的体积太大了，而且线上不能直接改代码所以基本没用，项目在打包的时候就可以去掉加速打包速度。</p>\n<p><img src=\"/../images/VueShop/image-20220702212417640.png\" alt=\"image-20220702212417640\"></p>\n<p>在 <code>vue.config.js</code> 中配置</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token literal-property property\">lintOnSave</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\">// 代理跨域</span>\n\t<span class=\"token literal-property property\">devServer</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token literal-property property\">proxy</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token string-property property\">'/api'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token literal-property property\">target</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://gmall-h5-api.atguigu.cn'</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token literal-property property\">productionSourceMap</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","text":"脚手架使用npm i -g @vue/cli yarn add global @vue/cli vue init webpack 项目的名字console.log(‘%c [ 项目的名字 ]-16’, ‘font-size:13px; background:pink; color...","link":"","photos":[],"count_time":{"symbolsCount":"90k","symbolsTime":"1:22"},"categories":[],"tags":[{"name":"Vue","slug":"Vue","count":2,"path":"api/tags/Vue.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%84%9A%E6%89%8B%E6%9E%B6%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">脚手架使用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%84%9A%E6%89%8B%E6%9E%B6%E4%B8%8B%E8%BD%BD%E4%B8%8B%E6%9D%A5%E7%9A%84%E9%A1%B9%E7%9B%AE%E7%A8%8D%E5%BE%AE%E9%85%8D%E7%BD%AE%E4%B8%80%E4%B8%8B\"><span class=\"toc-text\">脚手架下载下来的项目稍微配置一下</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E7%BD%AE%E9%A1%B9%E7%9B%AE%E5%90%AF%E5%8A%A8%E8%87%AA%E5%8A%A8%E6%89%93%E5%BC%80%E6%B5%8F%E8%A7%88%E5%99%A8%E5%9C%A8package-json%E6%96%87%E4%BB%B6%E4%B8%AD\"><span class=\"toc-text\">设置项目启动自动打开浏览器在package.json文件中</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%B3%E9%97%ADeslint%E6%A0%A1%E9%AA%8C%E5%B7%A5%E5%85%B7%EF%BC%88%E9%9D%9E%E5%BF%85%E9%A1%BB%EF%BC%89\"><span class=\"toc-text\">关闭eslint校验工具（非必须）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#src%E6%96%87%E4%BB%B6%E5%A4%B9%E7%9A%84%E5%88%AB%E5%90%8D%E7%9A%84%E8%AE%BE%E7%BD%AE\"><span class=\"toc-text\">src文件夹的别名的设置</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A1%B9%E7%9B%AE%E8%B7%AF%E7%94%B1%E7%9A%84%E5%88%86%E6%9E%90\"><span class=\"toc-text\">项目路由的分析</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%8C%E6%88%90%E9%9D%9E%E8%B7%AF%E7%94%B1%E7%BB%84%E4%BB%B6-Header-%E5%92%8C-Footer\"><span class=\"toc-text\">完成非路由组件 Header 和 Footer</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Footer-%E7%BB%84%E4%BB%B6%E6%98%BE%E7%A4%BA%E4%B8%8E%E9%9A%90%E8%97%8F\"><span class=\"toc-text\">Footer 组件显示与隐藏</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%B7%AF%E7%94%B1%E4%BC%A0%E5%8F%82\"><span class=\"toc-text\">路由传参</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%B7%AF%E7%94%B1%E4%BC%A0%E5%8F%82%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98\"><span class=\"toc-text\">路由传参常见面试题</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BC%96%E7%A8%8B%E5%BC%8F%E8%B7%AF%E7%94%B1%E8%B7%B3%E8%BD%AC%E5%88%B0%E5%BD%93%E5%89%8D%E8%B7%AF%E7%94%B1%EF%BC%88%E5%8F%82%E6%95%B0%E4%B8%8D%E5%8F%98%EF%BC%89%EF%BC%8C%E5%A4%9A%E6%AC%A1%E6%89%A7%E8%A1%8C%E4%BC%9A%E6%8A%9B%E5%87%BANavigationDuplicated%E7%9A%84%E9%94%99%E8%AF%AF%EF%BC%9F\"><span class=\"toc-text\">编程式路由跳转到当前路由（参数不变），多次执行会抛出NavigationDuplicated的错误？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Home-%E6%A8%A1%E5%9D%97%E7%BB%84%E4%BB%B6%E6%8B%86%E5%88%86\"><span class=\"toc-text\">Home 模块组件拆分</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%89%E7%BA%A7%E8%81%94%E5%8A%A8%E7%BB%84%E4%BB%B6%E7%9A%84%E5%AE%8C%E6%88%90\"><span class=\"toc-text\">三级联动组件的完成</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Postman%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7\"><span class=\"toc-text\">Postman接口测试工具</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#axios-%E4%BA%8C%E6%AC%A1%E5%B0%81%E8%A3%85\"><span class=\"toc-text\">axios 二次封装</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81%E8%BF%9B%E8%A1%8C%E4%BA%8C%E6%AC%A1%E5%B0%81%E8%A3%85%EF%BC%9F\"><span class=\"toc-text\">为什么需要进行二次封装？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85-axios\"><span class=\"toc-text\">安装 axios</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#API%E6%8E%A5%E5%8F%A3%E7%BB%9F%E4%B8%80%E7%AE%A1%E7%90%86\"><span class=\"toc-text\">API接口统一管理</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">跨域问题</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Nprogress%E8%BF%9B%E5%BA%A6%E6%9D%A1%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">Nprogress进度条的使用</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Vuex%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86%E5%BA%93\"><span class=\"toc-text\">Vuex状态管理库</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Vuex%E6%9C%89%E5%87%A0%E5%A4%A7%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">Vuex有几大核心概念</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Vuex%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">Vuex基本使用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Vuex-%E5%AE%9E%E7%8E%B0%E6%A8%A1%E5%9D%97%E5%BC%8F%E5%BC%80%E5%8F%91\"><span class=\"toc-text\">Vuex 实现模块式开发</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%8C%E6%88%90TypeNav%E7%BB%84%E4%BB%B6%E4%B8%89%E7%BA%A7%E8%81%94%E5%8A%A8%E5%B1%95%E7%A4%BA%E6%95%B0%E6%8D%AE%E4%B8%9A%E5%8A%A1\"><span class=\"toc-text\">完成TypeNav组件三级联动展示数据业务</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%80%E7%BA%A7%E5%88%86%E7%B1%BB%E5%8A%A8%E6%80%81%E6%B7%BB%E5%8A%A0%E8%83%8C%E6%99%AF%E9%A2%9C%E8%89%B2\"><span class=\"toc-text\">一级分类动态添加背景颜色</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%80%9A%E8%BF%87-JS-%E6%8E%A7%E5%88%B6%E4%BA%8C%E4%B8%89%E7%BA%A7%E5%95%86%E5%93%81%E5%88%86%E7%B1%BB%E7%9A%84%E6%98%BE%E7%A4%BA%E4%B8%8E%E9%9A%90%E8%97%8F\"><span class=\"toc-text\">通过 JS 控制二三级商品分类的显示与隐藏</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A1%B9%E7%9B%AE%E5%8D%A1%E9%A1%BF%E7%8E%B0%E8%B1%A1\"><span class=\"toc-text\">项目卡顿现象</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%8C%E6%88%90%E4%B8%89%E7%BA%A7%E8%81%94%E5%8A%A8%E8%8A%82%E6%B5%81%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">完成三级联动节流操作</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%89%E7%BA%A7%E8%81%94%E5%8A%A8%E8%B7%AF%E7%94%B1%E8%B7%B3%E8%BD%AC%E5%88%86%E6%9E%90\"><span class=\"toc-text\">三级联动路由跳转分析</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9C%80%E5%A5%BD%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%EF%BC%9A%E7%BC%96%E7%A8%8B%E5%BC%8F%E5%AF%BC%E8%88%AA-%E4%BA%8B%E4%BB%B6%E5%A7%94%E6%B4%BE\"><span class=\"toc-text\">最好的解决方案：编程式导航 + 事件委派</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%8C%E6%88%90%E4%B8%89%E7%BA%A7%E8%81%94%E5%8A%A8%E7%9A%84%E8%B7%AF%E7%94%B1%E8%B7%B3%E8%BD%AC%E4%B8%8E%E4%BC%A0%E9%80%92%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">完成三级联动的路由跳转与传递参数</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93-1\"><span class=\"toc-text\">总结</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Search-%E6%A8%A1%E5%9D%97%E4%B8%AD%E5%95%86%E5%93%81%E5%88%86%E7%B1%BB%E4%B8%8E%E8%BF%87%E6%B8%A1%E5%8A%A8%E7%94%BB\"><span class=\"toc-text\">Search 模块中商品分类与过渡动画</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BC%98%E5%8C%96%E5%95%86%E5%93%81%E5%88%86%E7%B1%BB%E4%B8%89%E7%BA%A7%E5%88%97%E8%A1%A8\"><span class=\"toc-text\">优化商品分类三级列表</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%90%88%E5%B9%B6params%E4%B8%8Equery%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">合并params与query参数</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BC%80%E5%8F%91-Home-%E9%A6%96%E9%A1%B5\"><span class=\"toc-text\">开发 Home 首页</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85-MockJS\"><span class=\"toc-text\">安装 MockJS</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Banner-%E5%AE%9E%E7%8E%B0%E8%BD%AE%E6%92%AD%E5%9B%BE%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%EF%BC%9A%E5%AE%9A%E6%97%B6%E5%99%A8\"><span class=\"toc-text\">Banner 实现轮播图解决方案：定时器</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BD%AE%E6%92%AD%E5%9B%BE%E6%9C%80%E7%90%86%E6%83%B3%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88-watch-nextTick\"><span class=\"toc-text\">轮播图最理想的解决方案 watch + nextTick</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BC%80%E5%8F%91-Floor-%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">开发 Floor 组件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8A%8A%E9%A6%96%E9%A1%B5%E5%BD%93%E4%B8%AD%E7%9A%84%E8%BD%AE%E6%92%AD%E5%9B%BE%E6%8B%86%E5%88%86%E4%B8%BA%E4%B8%80%E4%B8%AA%E5%85%A8%E5%B1%80%E5%85%B1%E7%94%A8%E7%9A%84%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">把首页当中的轮播图拆分为一个全局共用的组件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Carousel-vue%E5%B0%81%E8%A3%85\"><span class=\"toc-text\">Carousel.vue封装</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Search-%E6%A8%A1%E5%9D%97%E5%BC%80%E5%8F%91\"><span class=\"toc-text\">Search 模块开发</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%99%E9%87%8C%E6%B3%A8%E6%84%8F%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">这里注意一些问题</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#search%E6%A8%A1%E5%9D%97%E6%A0%B9%E6%8D%AE%E4%B8%8D%E5%90%8C%E5%8F%82%E6%95%B0%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE%E5%B1%95%E7%A4%BA\"><span class=\"toc-text\">search模块根据不同参数获取数据展示</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%9D%A2%E5%8C%85%E5%B1%91\"><span class=\"toc-text\">面包屑</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%9D%A2%E5%8C%85%E5%B1%91%E5%A4%84%E7%90%86%E5%85%B3%E9%94%AE%E5%AD%97\"><span class=\"toc-text\">面包屑处理关键字</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%9D%A2%E5%8C%85%E5%B1%91%E5%A4%84%E7%90%86%E5%93%81%E7%89%8C%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">面包屑处理品牌信息</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%B9%B3%E5%8F%B0%E5%94%AE%E5%8D%96%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">平台售卖属性</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%95%86%E5%93%81%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">商品排序</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%86%E9%A1%B5%E5%99%A8%E5%8A%9F%E8%83%BD\"><span class=\"toc-text\">分页器功能</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%86%E9%A1%B5%E5%99%A8%E7%9A%84%E5%B1%95%E7%A4%BA%E9%9C%80%E8%A6%81%E9%82%A3%E4%BA%9B%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">分页器的展示需要那些数据</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%86%E9%A1%B5%E5%99%A8%E5%8A%A8%E6%80%81%E5%B1%95%E7%A4%BA\"><span class=\"toc-text\">分页器动态展示</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BC%80%E5%8F%91%E5%95%86%E5%93%81%E8%AF%A6%E6%83%85%E9%A1%B5%E9%9D%A2\"><span class=\"toc-text\">开发商品详情页面</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#VueRouter%E6%BB%9A%E5%8A%A8%E8%A1%8C%E4%B8%BA\"><span class=\"toc-text\">VueRouter滚动行为</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93-2\"><span class=\"toc-text\">总结</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Zoom-%E6%94%BE%E5%A4%A7%E9%95%9C%E6%98%BE%E7%A4%BA%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">Zoom 放大镜显示数据</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E8%A7%A3%E9%87%8A%E2%80%94%E5%94%AE%E5%8D%96%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">数据解释—售卖属性</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%94%BE%E5%A4%A7%E9%95%9C%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">放大镜操作</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8A%A0%E8%B4%AD%E7%89%A9%E8%BD%A6\"><span class=\"toc-text\">加购物车</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%B0%E5%A2%9E-API-%E6%8E%A5%E5%8F%A3\"><span class=\"toc-text\">新增 API 接口</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A2%9E%E5%8A%A0%E8%B4%AD%E7%89%A9%E8%BD%A6%E7%BB%84%E4%BB%B6-ShopCart-vue\"><span class=\"toc-text\">增加购物车组件 ShopCart.vue</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#UUID%E6%B8%B8%E5%AE%A2%E8%BA%AB%E4%BB%BD%E8%8E%B7%E5%8F%96%E8%B4%AD%E7%89%A9%E8%BD%A6%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">UUID游客身份获取购物车数据</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%99%BB%E5%BD%95%E4%B8%8E%E6%B3%A8%E5%86%8C\"><span class=\"toc-text\">登录与注册</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%99%BB%E5%BD%95%E7%9A%84%E6%8E%A5%E5%8F%A3\"><span class=\"toc-text\">登录的接口</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%80%80%E5%87%BA%E7%99%BB%E5%BD%95\"><span class=\"toc-text\">退出登录</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AF%BC%E8%88%AA%E5%AE%88%E5%8D%AB\"><span class=\"toc-text\">导航守卫</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%93%E7%AE%97%E5%8A%9F%E8%83%BD\"><span class=\"toc-text\">结算功能</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#QRCode-%E7%94%9F%E6%88%90%E4%BA%8C%E7%BB%B4%E7%A0%81\"><span class=\"toc-text\">QRCode 生成二维码</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%AA%E4%BA%BA%E4%B8%AD%E5%BF%83%E6%90%AD%E5%BB%BA%E4%BA%8C%E7%BA%A7%E8%B7%AF%E7%94%B1\"><span class=\"toc-text\">个人中心搭建二级路由</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%B7%AF%E7%94%B1%E7%8B%AC%E4%BA%AB%E5%AE%88%E5%8D%AB\"><span class=\"toc-text\">路由独享守卫</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9B%BE%E7%89%87%E6%87%92%E5%8A%A0%E8%BD%BD\"><span class=\"toc-text\">图片懒加载</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#vee-validate-%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81%E5%BA%94%E7%94%A8\"><span class=\"toc-text\">vee-validate 表单验证应用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%B7%AF%E7%94%B1%E6%87%92%E5%8A%A0%E8%BD%BD\"><span class=\"toc-text\">路由懒加载</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%84%E7%90%86-map-%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">处理 map 文件</span></a></li></ol></li></ol>","author":{"name":"R桑","slug":"blog-author","avatar":"https://img1.baidu.com/it/u=3256850095,2680786815&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=500","link":"/","description":"一位正在重塑知识的技术人 <br /> @ <b>公众号：小k编码</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"promise.all与promise.race的应用","uid":"6cf6ea53457bfcb2a915aa71f05e8d96","slug":"promise-all与promise-race的应用","date":"2022-06-14T05:28:44.000Z","updated":"2022-06-14T05:30:10.635Z","comments":true,"path":"api/articles/promise-all与promise-race的应用.json","keywords":null,"cover":null,"text":"将图片的加载写成一个Promise，一旦加载完成，Promise的状态就发生变化 const preloadImage = function (path) &#123; return new Promise(function (resolve, reject) &#123; co...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"Promise","slug":"Promise","count":1,"path":"api/tags/Promise.json"}],"author":{"name":"R桑","slug":"blog-author","avatar":"https://img1.baidu.com/it/u=3256850095,2680786815&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=500","link":"/","description":"一位正在重塑知识的技术人 <br /> @ <b>公众号：小k编码</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"小程序开发","uid":"13faca11ddbbdde1b46790dd04adcbcb","slug":"小程序开发","date":"2022-06-09T15:38:00.000Z","updated":"2022-07-11T08:58:02.841Z","comments":true,"path":"api/articles/小程序开发.json","keywords":null,"cover":[],"text":"只需要在 app.json -&gt; pages 中新增页面存放路径。小程序开发者工具即可帮我们自动创建对于的页面文件 pages 配置项中的第一行默认为小程序的首页。 WXML 模板一、什么是WXML WXML（WeiXin Markup Language） 是小程序框架设计...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"小程序","slug":"小程序","count":1,"path":"api/tags/小程序.json"}],"author":{"name":"R桑","slug":"blog-author","avatar":"https://img1.baidu.com/it/u=3256850095,2680786815&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=500","link":"/","description":"一位正在重塑知识的技术人 <br /> @ <b>公众号：小k编码</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}